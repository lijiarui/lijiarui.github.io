<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022 年，我的 118 条思考切片</title>
      <link href="/reading/2022-12-31-2022-journal.html"/>
      <url>/reading/2022-12-31-2022-journal.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>今年把每日的心情从博客转移到了豆瓣，如惯例，摘抄一些重点内容到博客，作为总结的一部分吧。</p></blockquote><p><img src="/img//2022/12-2022-journal/teaser.jpeg" alt="teaser"></p><h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><p>相信永恒的爱，但永远不去考验人性。</p><h2 id="2月"><a href="#2月" class="headerlink" title="2月"></a>2月</h2><p>“如果我知道我们只有这一小段缘分，我们那样全面又细致地走进过一个人的世界，然后又不带片缕地走出彼此的生命，如果我可以知道我真正放弃的是什么，错过的是什么，——至少，我们曾经在洛城玫瑰色的日落里共舞过，被这城市的璀璨星光照耀过。<br>感谢有你陪我发梦。”</p><p>对于可控的事情，要保持谨慎；对于不可控的事情，要保持乐观。人只能做自己能力范围内的事情，你要接受这个事实，并且以乐观的心，去面对这一切。——爱比克泰德</p><p>是的，所以只有经历过热情的人才有资格谈爱情。– 《月亮和六便士》</p><p>全世界都在追逐着梦想，查尔斯却在追逐他的噩运。好吧，这两件事其实没那么不同，被梦想俘虏的人就是在追逐自己的噩运。<br>15年之内，这个伦敦的股票交易员风驰电掣，越过城市、越过文明、越过中产阶级，越过太平洋，越过人性，终于追上了命运这匹烈马。 – 《月亮和六便士》</p><p>“我们不一定要拥有月亮，我们可否只借着月光拥有一地的六便士。”</p><p>忽然有个冲动，数数今年能不能读完10本书。。。。<br>我得开始读书了。。。。</p><h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><p>“It is only shallow people who do not judge by appearances.<br>只有肤浅的人才不会以貌取人。”<br>“我爱他，是因为他像爱情本身应有的样子。”<br>“你拥有青春的时候，就要感受它。不要虚掷你的黄金时代，不要去倾听枯燥乏味的东西，不要设法挽留无望的失败，不要把你的生命献给无知、平庸和低俗。 ”<br>“老年人相信一切，中年人怀疑一切，青年人什么都懂”<br>“很多东西如果不是怕别人捡去，我们一定会扔掉。”<br>“To define is to limit.<br>定义一样东西，就意味着限制了它。”</p><p>只有两种人最具有吸引力，一种是无所不知的人，一种是一无所知的人。<br>一个男人只要不爱女人，就能跟女人相处得很愉快。</p><p>“除了感官，什么也不能治灵魂的创痛，同样，感官的饥渴也只有灵魂解除得了。”</p><p>今天忽然理解了什么才是人生无悔。<br>首先无悔一定是从今天的视角看回去，当时的某个选择一定不是最好的，一定当时经历了痛苦，一定是当时如果有其他选择可以免去痛苦。 如果一切都是快乐的，幸福的，其实讨论无悔这个事情也变得没有意义了。<br>然后才是不后悔的层面。无悔大概是如果你再回到当时的状态，你可能还会做同样的选择，哪怕有时光机告诉你，如果你做了不一样的选择，会少一些痛苦。<br>无悔大概就是你一定会知道当时的选择不是最好的选择，但是仍然义无反顾。<br>回想过去这些年，我会说我无悔，大概都是这样的吧。<br>说到底，人生无悔，大概就是在想清楚事的前提下，对当前状态的知足，并持续清醒且知足。</p><p>“文明始于理性的谦卑，终于掌权者的傲慢；始于真相的求索，终于站队者的泛滥。<br>别抬头看，看了也逃不掉。 ”<br>“立场最重要，真相不重要。为了站立场，人人可撒谎。”</p><p>“这个时代没有确定性。相聚、欢笑、一起吃饭、拍一朵阳光下的樱花、说一句想要说的话，都要趁早。 ”</p><p>“我们这一生，如果平平安安直到老去，已经是大幸。错过了飞着飞着就不见的航班，躲过了突然就失控狂奔的车辆，避开了凌晨因为地震崩塌的城市。<br>如果这一切你都侥幸没有遇到，未来的日子请一定要好好地活着，想做的事要抓紧做，没说出口的话要记得说。无论如何都希望我爱的人和爱我的人，能平平安安地过完这一生。<br>人生很短，总是充满变数。但这个世界，我们真的不是孤身一人。<br>生活很美好，且行且珍惜。”</p><p>刚刚下班。<br>忽然感慨，自己也真是无所不能，从产品变成技术，变成销售，变成市场，变成售后，变成财务，变成管理，再变回到现在的产品。<br>为啥我都能做，也都能抗呢。。。<br>可是这样，真的好累。。。</p><p>当我从纯管理回到产品一线，一方面惊讶于自己如此强大的适应力，因为我曾经以为我再也受不了产品那些琐碎的工作了。另外一方面，又感慨，如果能成为一个一线管理者，始终在一线，却能做到抓大放小，其实这种平衡，才真的需要非常强大的能力吧。。。</p><p>这个世界对乐观者一直不是很友好： 任何人都喜欢在乐观者旁边说一些有的没的，感觉乐观者就是看不到危险，感觉乐观者永远都没心没肺的样子。<br>然而对于消极悲观的人：大家往往舍不得去说他不好，因为他都这么惨了，旁人还好说什么的。<br>但是乐观或者消极，这只是一个人的感受，这和事实无关。<br>而强者往往都是乐观者。<br>忽然理解了自己当初为什么抑郁，因为当自己陷入到抑郁的情绪的时候，身边的人会对你更温柔一些，更“理解”一些，当然，聪明的人会直接远离你。<br>从这个角度来看，抑郁本身，是一种生理反应的自我保护。<br>只希望现在，我能做一个乐观的强者，我能摆脱这种生理反应的自我保护。</p><p>“日子没有很容易，但也没有那么难，就一天一天平心静气地过。过好，过长，过得尽量质量高，值得回看也有念想。”</p><h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><p>原来真的是这样，忙碌是治愈一切伤痛的良药，忙起来就不难过了，不痛苦了，不悲伤了。。。<br>可是，忙完怎么办呢？<br>是不是还得继续哭泣呢。。。</p><p>如果没有钢琴乐的陪伴，我可能撑不了这么高强度的工作到现在。。。</p><p>小的时候不懂，明明做了60分，却总期待100分的结果。<br>长大了才发现，就算做到100分，也只能去期待60分的结果。</p><p>人生第二根白头发。。。。 30岁，越来越明显的，身体在告诉我正在衰老。。。。</p><p>哼，别惹我，我是会咬人的</p><h2 id="5月"><a href="#5月" class="headerlink" title="5月"></a>5月</h2><p>我不知道这个世界怎么了，从愤怒，到接受。</p><p>人祸比天灾可怕</p><p>“我们不会在圣诞节前出去，要面对现实。”</p><p>旧的告别是为了迎接新纪元的到来</p><p>看到这个，我觉得我还是幸运和幸福的多了，也没那么多抱怨了。<br>其实这个世界上，都不容易，没有谁比谁容易。<br>珍惜自己起码吃苦有回报，有些人吃了一辈子苦，都没有回报。<br><a href="https://douc.cc/2bI3vB" target="_blank" rel="noopener">https://douc.cc/2bI3vB</a></p><p>创业这么多年，每年都很辛苦，很累。<br>当时看我豆瓣的状态，从顾影自怜到平静接受。<br>也挺好。</p><p>当你真正不怕失去ta的时候，才是可以控制ta的开始。<br>人和事都是一样的。</p><h2 id="6月"><a href="#6月" class="headerlink" title="6月"></a>6月</h2><p>improve，not prove</p><p>“如果社会可以培训你，那么社会也可以培训他人来取代你。大家都能学会的东西是不可能让你致富的。凡是可以批量化培训的技能都是能够被雇佣的技能。只有你自己学到的东西，才是属于你独有的能力，才有可能让你创业成功。”</p><p>我们应该比想象中的更勇敢一些才对。</p><p>选择聪明过人、精力充沛的商业伙伴，但更重要的是，他们要正直诚信。</p><p>如果不会写代码，那就出书、写博客、做视频、录播客。</p><p>恐惧其实本质上是来自于自己而非外部环境</p><p>长大才发现，父母的电话通常都是发生了重大事故</p><p>创业让一个人的物欲变得越来越低。。</p><p>从不知道，到知道，到实践，一转眼，5年就过去了。</p><p>这么多年的创业，就是在不停的减少自己要做的事情。<br>当你真的找到方向的时候，才能真的聚焦。<br>当你学会方式的时候，才能找到方向，才能把事情做好</p><p>我告诉孩子们，英雄和懦夫的区别是什么？懦弱和勇敢的区别是什么？答案是没有区别。区别在于你选择做什么。他们有着同样的感受，他们都害怕死亡、害怕受伤。但是，懦弱的人拒绝正视他必须面对的事情，而英雄会严格要求自己，他会击退这些情绪，做他该做的事。但英雄和懦夫的感受都一样。人们评判你的依据是你做了什么，而不是你的感受。<br>—- 拳王阿里</p><p>每天都在和时间打仗</p><p>生命和时间有限，要认真地对待有限的时间和生命</p><p>要有慢下来的底气</p><p>对于一个CEO来说，应该把心态放得更加平和一些，千万不要因为竞争，而乱了自己的阵脚。</p><p>CEO需要懂得和关注真正重要的指标，包括客户、订单量、客单价、用户数、周留存率、营收、毛利、流失率、盈利能力、现金流，让真实的数字说话。</p><p>“原来创业最难的不是开始，也不是结束，而是做到一大半的时候，发现事情既不像开始时那么理想，又没有糟糕到需要果断结束的地步。 ”</p><p>如何提高一场战役胜利的确定性，十倍兵力，饱和攻击。<br>如何提高一场战争胜利的确定性，科技代差，降维打击。（转：诗人王飞）</p><h2 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h2><p>“只求付出，不求回报”是人生中最难做到的一件事，但也是让人收获最大的一件事。</p><p>有这么一种说法：当通过后视镜看到有汽车追来的时候，如果你一直盯着后视镜，那你的汽车要么要掉到悬崖下面去，要么就会撞到前面的汽车。这种说法的意思是如果你一味盯着竞争对手，那你就会失去自己的优势。<br>竞争意味着向优秀的对手学习，把别人的长处和自己的优点结合起来，形成自己的独特优势来推动自己的发展。</p><p>目前我发现的最好的心智模型来自进化论、博弈论和查理·芒格。</p><p>一颗平静的心，一个健康的身体，一个充满爱的家。这些东西是金钱买不到的，必须通过努力才能获得。</p><p>好的时候没那么好，坏的时候没那么坏。</p><p>当对手发起攻击时，我们应该退缩到自己的核心，更犀利地发挥自己的核心价值，而不是四面出击。</p><p>如果大凡你能做好一件东西，你为啥还要做很多做不好的东西呢？<br>就像怎样改变茅台在中国人心中的地位啊？<br>多推一些便宜的非53度酒，包括茅台啤酒和红酒，甚至茅台米酒啥的，以及茅台矿泉水、茅台酒店、茅台手机、茅台空调，加快推出的速度，5年出厂的规矩也不要了，假酒也不管了……10年后，茅台的地位应该就彻底不一样了。<br>—段永平</p><p>生活终于稍微平静了下来，很难想象过去2个月经历了什么，但是日子还是一天一天过来了。确实没什么事情是过不去的，聚焦当下，一个一个总会解决完。面对未来，保持乐观和耐心。</p><p>终于开始认命了</p><p>“错过之前，我们永远不知道自己错过了什么”，没办法什么都想要。</p><p>穷查理宝典里，反复在说：在手里拿着铁锤的人看来，每个问题都像钉子</p><h2 id="8月"><a href="#8月" class="headerlink" title="8月"></a>8月</h2><p>如果说2022年我的关键词，可能是，接受。<br>我花了30年的时间，学习这个词语。<br>我的韧性和努力，让我不相信命运。<br>可是换个维度，我应该学会和自己和解，学会和命运和解。<br>和解不是妥协，不是放弃，是换一种方式追求自己想要的东西，是换一种方式追求自己的理想。<br>“别根据你的愿望来要求现实，应该依据现实来确定你的愿望。”<br>三十岁之前，很多东西就像考试一样简单，是可以死磕下来的，三十岁之后，面对更复杂的环境和挑战，单纯死磕是解决不了问题的。那么，先接受她。<br>面对困难，我仍然会死磕，但是，我不会只死磕。</p><p>这一刻，我忽然发现，拥有一个平常的，普通的周末挺好的，收拾收拾屋子，做做饭，看看电影，聊聊天。</p><p>其实一个大客户不是公司最主要的事，大客户很重要，但是市场那么大，丢了还有别的，一定要平常心。<br>整体方向和数据管理才是公司最重要的事，之前我有的时候会颠倒黑白了。<br>不过，这个的前提是找到了PMF，且正在规模化扩张，且我不是销售负责人的情况下。</p><p>王兴：一位参加过对越自卫反击战的投资人跟我说，多数人对战争的理解是错的，战争不是由拼搏和牺牲组成的，而是由忍耐和煎熬组成的。</p><p>能控制自己不做一件事比让自己做一件事，更难。每天我开始问自己，不做这个会不会让公司死掉，如果答案是no，我就不会做。 抓大放小，优先级</p><p>“创新过程中目标的重要性，几乎是如何高估都不过分。<br>哥伦布不见得是同时代航海技术最好的船长，装备也不出众，他最大的优点就是敢一路往西开，虽然是基于错误的目标「xx距离之后就从另一个方向到印度了」，但至少他有个目标。<br>哥伦布首航后，那条航海线路立刻就变得很常规了，因为已经有一个清晰目标。”</p><h2 id="9月"><a href="#9月" class="headerlink" title="9月"></a>9月</h2><p>理性思考和情绪思考是此消彼长的关系</p><p>低级的欲望通过放纵获得，高级的欲望通过自律获得，顶级的欲望必须通过煎熬才能获得。（转）</p><p>好，真好，是真的好</p><p>真的挺想把产品做好的，其实我应该也有这个能力</p><p>相逢在高处</p><p>昔之善战者，先为不可胜，以待敌之可胜。不可胜在己，可胜在敌。故善战者，能为不可胜，不能使敌之必可胜。故曰：胜可知，而不可为</p><h2 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h2><p>“我犯下的愚蠢错误，恰恰证明了自己首先就不是那个真正勇敢和坚定的人。我这样的人，还能不能让大家相信继续走下去会有光明的未来呢？”<br>—- 总会过去，总会到来<br>同为创业者，同犯过错误，感觉每句话都心有戚戚焉</p><p>原本想要剧本A，结果拿到了剧本B，看起来也不错。#放下执念</p><p>未来这种东西，信才有，做才有，熬才有</p><p>GTM策略，top down vs bottom up</p><p>“当太多事情变得不确定，才会更加珍惜每一次的「如期而至」”</p><p>“少年时不能遇见太过惊艳的人，那将意味着往后余生不过尔尔。”</p><p>创业第六年，依然很难，忽然开始享受创业的过程。享受苦难本身也是其中的一部分。</p><p>新人干老事，老人干新事。</p><p>不是所有人都喜欢折腾。有些人觉得找pmf的过程是在探索这个世界，会有新奇感。有些人觉得这就是折腾，会沮丧痛苦。</p><p>就像在一个黑屋子里摸着摸着，最后也不知道哪里是门，但这本身就是一个探索。</p><p>低成本短周期的验证。<br>科学的本质，就是假设，检验。</p><p>叔本华说，“你只能做你想做的，但不能要你想要的”</p><p>前辈说：伟大的生意都是简单的：</p><ul><li>你做最好的产品</li><li>赚合理的利润</li><li>让消费者的生活变更好<br>没有套路，如此重复这一过程。</li></ul><h2 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h2><p>想清楚自己要什么，不拧巴，不纠结</p><p>要知道，时间他不是静止的。一年很快，10年很快。一年又很慢，十年又很慢</p><p>干了这么多年产品，感觉自己刚刚会做产品。<br>产品本质上是对需求的抽象，对人群的抽象，对场景的抽象。<br>而这一切抽象，来自数据，而不是客户嘴里，更不是直觉</p><p>漏斗思维，概率论，是多么重大的科学依据呀</p><p>最近一段时间，是我这么多年来最享受创业的过程，虽然业务还没有爆发式增长，但是我发现了很多确定性的东西</p><p>念旧，而不怀旧</p><p>越来越理解，脚踏实地，仰望星空的含义了</p><p>学习做CEO很重要的一点，就是控制自己做事情的冲动</p><p>Almost无限接近yes，却不能改变其no的本质.<br>「almost lover」真是天底下最悲伤的词了。我几乎就让你爱上我了。我几乎就成功了。我们几乎就拥有爱情了</p><p>“毋庸置疑，好的事情总会来临，而当它来的时候，不失为一种惊喜。”</p><p>“爱是世界上最坚韧的能力。失去一场爱，还有下一场爱。失去一个爱人，还有无数个等着我们去爱的人。<br>现在的我，爱过人也被人爱过，我受过伤害同时也伤害过别人。”</p><p>Choose a problem to solve, not an idea to build.</p><p>“或许咱们现在经历的，就是普通人创业能走出来的最好的路径了”<br>我的合伙人忽然对我这样说，嗯，我觉得他说的特别对。</p><p>今天和一个合作伙伴有些闹僵了。<br>我反思了一下原因，可能是因为他在XXX上给我了一些支持，然后想当然的希望我在XXX上给足够的支持，但是我并没有被明确的告知，或者说，就算我被告知，我可能也没有那么大的能力给到反向支持。<br>结果合作伙伴就觉得我算计，觉得我斤斤计较，然后觉得我没有给到足够的反馈最后非常生气。。。<br>其实我也挺委屈。。。在这个合作上，我出了钱出了力，我只是期待纯粹项目合作的进展，我没对其他有预期，有销售支持的时候，我特别感恩，但是我自己的公司都自顾不暇，我哪里有能力反向支持。<br>不过反过来想，我们在帮助别人的时候的初衷会不会也不太纯粹。<br>创业多年，收到了非常多的帮助，也在尽可能的在能力范围内多多帮助别人，但是帮助的初衷还是要纯粹一些，其实大多数时候，我们无法从我们帮助的人那里得到什么，也很难回馈给帮助过我们的人太多，当时帮助可能还是要继续，传递上一个人的支持给到下一个，可能就是我们唯一能做的。</p><p>寒冬还是来了，我开始做起我不得不做的事情</p><h2 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h2><p>圣人之道，吾性自足，不假外求</p><p>今年最大的一个心态变化，是不再顾影自怜了。<br>人生对谁都不会特别简单，同时人生也是一场马拉松，我能做的，就是时刻以超高速的进度前行。没什么累不累的，更没什么我最辛苦，享受当下的每个时刻，都是自己的选择。</p><p>“只有第一名是时间的朋友，其他人都是市场的敌人”</p><p>在高速路上，低速是危险；走山路时，高速是风险。创业需要不断调整车速。</p><p>“2023年，说一些最朴素的祝愿，祝愿我们，“按计划推进”，“如期进行”，“顺利抵达”，“圆满完成”。 ”</p><p>比预期要好，一家人永远在一起，家人既是你的软肋，也是你的盔甲。</p><p>“人的一生就像花开花落，绚烂一时，转瞬即逝。一切听其自然，不去做自己做不到的事，不压抑内心的自然冲动，就把自己的人生按照花开花落的节奏去安排去接受好了。 ” — 李银河</p><p>“运气来的时候，你得还在桌上坐着。”</p><p>任何产品能力的创新都不会一劳永逸，即使是颠覆式创新，也不过两年的时间差，通常我们也就半年或者一年。<br>更重要的是持续创新的能力和商业化的能力，正向飞轮。<br>当然我不是在否定一个产品创新的意义，实际上没有这个创新，可能你压根没有后面持续创新和商业化的机会</p><p>“对不可改变，不可能征服的事要会放弃。”</p><p>“人是宇宙中非常非常渺小的存在，人生的时间又是无比的短暂，能做的能改变的都是极其有限的。这应该是我们时时都应该清楚的背景。人的思维观念在很大程度上取决于他的出身，年幼时受的教育以及当前自身的利益角色。所以当判断一个权威的观点，或者判断一个世俗通行的看法，一个父母的期望的时候要能知道他的背景，结合他的背景利益角色来看。在结合了这些背景事实的基础上需要的往往只是常识去判断，更多的需要的不是睿智，而是面对事实时是否有勇气依然追寻理性。（常识其实是显而易见，非常容易理解的，但我们各种继承的偏见和个人利益导致的偏见蒙蔽了我们，让我们对这些常识视而不见。这个是不是和佛经里讲的很像？）”</p><p>“普通人性中最令人遗憾的一种人性就是嫉妒，因为嫉妒的人不会从自己拥有的东西中寻找快乐，而会从其他人拥有的东西中找寻痛苦”。嫉妒是不同阶级，国家，性别之间趋于公平的主要动力。同时，期望通过嫉妒来获得那种公平也会是最糟糕的公平。它在削减幸运者的快乐，而不是增加不幸者的快乐。</p><p>“人性的一个特点是总是更乐于给不太需要爱的人爱，就像银行更愿意借钱给不太需要钱的人钱一样。”</p><p>“”所有的不快乐都是由某种分裂或不一致造成的。意识和无意识不协调就会造成自我分裂。不能靠客观兴趣和爱的力量将自己和社会连在一起，就会造成两者不一致。”</p><p>“罗素自己在《幸福之路》的《论努力与放弃》一节中说，”中庸之道，是一种乏味的学说，但很多事情都能证明它的确是真理”。所以，对知识对自由的追求是否也应该有所放弃呢？比方说，放弃对上帝是否存在的无尽探求，而只是笃信他存在，这样会不会更幸福？如果能心甘情愿的放弃部分自由，笃信自己在一国一地和一个人在一起是好的，会不会更幸福？”</p><p>而我们人类往往却又是越缺什么想要什么，缺胳膊想要胳膊，缺腿想要腿，人生终将逝去，却常求长生不老，爱情并不永恒却寄望于不变的石头。也许这个世界本来就无法确定，本来就无常，所以我们才如此不懈地追寻永恒，追寻确定的安全感。我们不但追寻，还老想握住它，干扰它以此证明它的存在和自己的存在。可是殊不知它的存在也许根本就不是你所想的样子，它也从来不是不变，你越测量它，就越干扰它，越干扰它就越不是原来的它。当你无数次测验让自己心安了之后，它却已经被你改变了。如同信任、如同爱情，它测不准，测多了也就不在了。你只有笃信，只有认可不确定的命，接受它，它才在，你才幸福。</p><p>“应该用一个合理的价钱去买好公司，而不是花时间去捡烟蒂（价格便宜，有些残余价值的、但往往不那么好的公司）这在创业里是更加容易体会到的。如果一个业务特别容易做，也不需要付出大的代价，往往不是长期带来大量现金流的好业务。好的决定往往是艰难的，需要付出痛的代价的。一个好的公司应该去花力气去解决/克服那些正确又难的问题，而不是四处捡一大堆芝麻（四处捡芝麻的心态往往是连芝麻都捡不到的，这和积小胜为大胜是完全两码事）。”</p><p>“能让过去翻篇，是种重要的能力。有些东西，失去了就是失去了，但相比已经失去的，你还剩下什么，面向未来你还能创造、守护什么才更重要。要关注后者，而非沉溺于前者，你才不会总是活在过去中。人若被过去绑架，也是种悲剧。”</p><p>“关于新旧关系，很多人习惯用你死我活的战争思维来看待，好比对于整日围坐于古罗马角斗场的人来说，非此即彼就是全部的世界。也许角斗画面能带来一些感官刺激，但大自然多样生态共生迭代才是持久的真实。”</p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人生 </tag>
            
            <tag> 幸福 </tag>
            
            <tag> 内心平和 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纳瓦尔宝典-读书摘要</title>
      <link href="/reading/2022-07-10-naval-almanack.html"/>
      <url>/reading/2022-07-10-naval-almanack.html</url>
      
        <content type="html"><![CDATA[<p>“如果社会可以培训你，那么社会也可以培训他人来取代你。大家都能学会的东西是不可能让你致富的。凡是可以批量化培训的技能都是能够被雇佣的技能。只有你自己学到的东西，才是属于你独有的能力，才有可能让你创业成功。”</p><p>选择聪明过人、精力充沛的商业伙伴，但更重要的是，他们要正直诚信。</p><p>如果不会写代码，那就出书、写博客、做视频、录播客。</p><p>恐惧其实本质上是来自于自己而非外部环境</p><p>把自己产品化。 “把自己产品化”是什么意思？ 这句话有两个重点，一个是“自己”，一个是“产品化”。“自己”具有独特性，“产品化”是发挥杠杆效应；“自己”具有责任感，“产品化”需要专长。“自己”其实也具有专长。因此，这两个重点就可以概括上述所有的理念。</p><p>正如艾伦·凯所说，科技就是一套尚未完全发挥作用的东西（更正，是丹尼尔·希利斯所说）。某种东西一旦得到广泛应用，它就不再是科技了。社会总是需要新事物。如果想变得富有，你就要弄清楚你能为社会提供哪些其有需求但无从获得的东西，而提供这些东西对你来说又是轻松自然的事情，在你的技术和能力范围内。</p><p>无论做什么事情，我都以事情本身为目标。这也是艺术创作的一个鲜明特征。无论是创业、健身还是恋爱、交友，我始终都认为生命的意义在于专注于事情本身，体验过程，享受当下。神奇的是，当专注于事情本身时，你反而能做得更好。即使是赚钱，你也能成为赚得最多的那个。</p><p>对一件事情的欲望越小，顾虑就越少，执念就越少，反而越会顺其自然，遵循内心。你会以自己擅长的方式，始终不渝地做下去，工作质量也会因此提高。</p><p>如果社会可以培训你，那么总有一天，社会也可以编写代码，用计算机取代你。</p><p>关键在于，准确把握并满足社会所需。每一代人所需的产品或服务都不一样，但绝大多数都与科技相关。</p><p>要获得更多的自由时间，就要对选择的专业领域、工作性质、职业路径以及与雇主达成的交易类型做出审慎的判断。一旦做出正确的决策，你就无须担心时间管理的问题了。于我而言，我希望单纯靠判断力来获得报酬，而不是靠劳作。我想让机器人、资本或计算机完成实际工作，而我只靠判断力赚钱。</p><p>要从时间成本的角度做决策，如果做某件事外包的成本低于时薪，那就外包；如果不做的损失低于时薪，那就不做；如果花钱请人的成本低于时薪，那就花钱请人。甚至做饭也是同样的道理，你可能想吃健康的家常菜，但是如果可以外包，那就外包吧。</p><p>人生早期有三个重大决定：在哪里生活，和谁在一起，从事什么职业。</p><p>找到自己擅长的领域，然后用自己的技能去帮助他人：提供免费的产品或服务，主动向世界传递善意。好人终有好报。只要始终如一，假以时日，付出就一定能获得相应的回报。但不要计较自己付出了多少——一旦开始计较，耐心就会被消耗殆尽。</p><p>退休就是不再为了想象中的明天而牺牲今天。当你能活在当下，内心充盈地度过每一天时，你就达到了退休的状态。</p><p>试想一下，生活中有哪些事情能像艺术创作那样只是以其本身为目的，而没有任何其他目的？我可以想到三个例子：毫无保留地爱，随心所欲地创造，无忧无虑地玩耍。</p><p>获得好运的方法：</p><ul><li>希望好运不期而至。</li><li>不停地折腾，直到撞上大运。</li><li>做好心理准备，对别人错过的机会保持敏感。</li><li>把你所做的事情做到极致。精益求精，直到名副其实。让机会自动找到你，让运气成为必然。</li></ul><p>在一个长线游戏中，似乎每个人都在让彼此变得富有。而在一个短线游戏中，似乎每个人都在让自己变得富有。</p><p>我的人生哲学会让人觉得更舒适：“做一个创造者，创造出人们想要的有趣的东西。展示你的技能，练习你的技能，最终会有合适的人找到你。”</p><p>对自己热爱的事物孜孜不倦，乐此不疲，不断精进，日积月累。不要去计算自己投入的时间和精力，因为一旦开始计算，你就会失去耐心。</p><p>生命和时间有限，要认真地对待有限的时间和生命</p><p>“只求付出，不求回报”是人生中最难做到的一件事，但也是让人收获最大的一件事。</p><p>人生真正的履历，其实就是一生所承受痛苦的集合。如果临终前要直面真正的自我，回顾这一生做过哪些有意义的事，那么你能想起来的一定都是你所做出的牺牲和迎接过的挑战。</p><p>金钱可以赋予你追求内心平静和幸福的时间和精力。我觉得，让每个人都开心的方法就是满足他们的欲望。</p><p>在人的一生中，如果想赚尽可能多的钱，如果想以一种可预测的方式致富，就要时刻走在时代的最前沿，学习科技、学习设计、学习艺术，成为行业翘楚。</p><p>但痛苦的时刻就是真相大白的时刻。只有处于痛苦之中，你才会被迫接受现实，而只有接受现实，你才能做出有意义的改变，取得有意义的进步。由此可见，只有实事求是，才能不断改进，不断前行。</p><p>难点在于看清真相。要看清真相，就必须摆脱自我，因为自我不想面对真相。自我越弱小，对自己反应的限制越少，对自己想要的结果的执念越低，就越容易看清现实。</p><p>佛曰：“有求皆苦，无求乃乐。”</p><p>不要欺骗自己，你自己才是最容易被欺骗的人。</p><p>如果要提出批评意见，不要批评某个人，可以批评工作方法，或者批评某一类行为。如果要表扬，那就找到一个榜样，表扬这个特定的人。这样有助于维护你身边人的自尊心和身份感，获得他们的支持，让他们为你所用，而不是与你作对。</p><p>目前我发现的最好的心智模型来自进化论、博弈论和查理·芒格。</p><p>我认为自己并没有能力找到“正确方法”。相反，我努力的方向是逐一排除不奏效的方法。我认为成功就是不犯错。成功的关键并不在于做出正确判断，而在于避免做出错误判断。</p><p>一颗平静的心，一个健康的身体，一个充满爱的家。这些东西是金钱买不到的，必须通过努力才能获得。</p><p>随着时间的流逝，我也开始相信，个体是渺小的，如沧海之一粟，微不足道。这样的认知对我获得幸福感很有裨益。假如你自认为是全宇宙最重要的人，你就会有让整个宇宙屈从于你的意志——既然你是最重要的，那么宇宙怎么可以不符合你的心意呢？如果宇宙不按照你的意志来运转，你就会觉得不对劲儿。 但如果你把自己看成一个细菌或变形虫，把自己毕生的努力都看成在水上写字、在沙滩上建城堡，你就不会对生活“本来该有”的模样抱有期待。生活就是这样，现实就是如此。接受了这一点，就无所谓幸不幸福。“幸福”并不是一种客观存在，而是一种主观感受。</p><p>幸福是一种选择。</p><p>我们会发现孩子通常都很快乐，那是因为他们真的会沉浸在周围的环境里，沉浸在当下，而不是期待环境来契合自己的喜好和欲望。我认为，中性状态其实是一种完美的状态。只要不沉溺于自己的想法、不执着于自己的欲望，你就可以获得快乐。</p><p>真正的幸福只是内心平和的副产品，主要还是源于接受现实，而不是改变外部环境。</p><p>理性很强的人可以通过训练自己的无感反应获得平和，即学会漠视自己无法控制的事物。</p><p>在任何时候（比如走路的时候），大脑都只有很小一部分是关注当下的。大脑把主要精力用于规划未来或悔恨过去。这样的运行机制让人无法获得绝妙的体验，无法欣赏周遭一切事物的美妙之处，无法因为现状常怀感恩之心。如果每天都沉浸在对未来的规划和幻想中，那就是在亲手扼杀自己的幸福。</p><p>我们渴望那些让我们能感知当下的体验，殊不知，这样的渴望却让我们脱离了当下。</p><p>消除缺憾感会让人更容易活在当下。</p><p>人们赋予“幸福”太多内涵，我都不确定这个词是什么意思了。对现在的我而言，幸福的本质更倾向于平和，而不是快乐。我觉得平和与目的无法共存。</p><p>幸福的人并不是时时刻刻都快乐的人。 幸福的人是可以轻松地以特定的方式诠释事件、保持内心平和的人。</p><p>如果认为通过改变外部世界就能获得内心的平静、永久的开心、应得的幸福，那本质上就是痴心妄想。每个人都深受这种想法的毒害，包括我自己。我们一遍又一遍地坚持着自己的执念，认为“等得到那个东西，我就快乐了”。这就是一个我们时时刻刻都在犯的根本错误。<br>我们的根本错觉是：总有一样东西会让我一直满足、永远快乐。</p><p>欲望就是你跟自己的约定，约定的内容是：不得到我想要的东西，我是不会快乐的。我觉得大部分人都没有意识到，这就是欲望的本质。<br>幸福就是满足现状。 而成功源于对现状的不满，是对现状的改造。 两者只能选一个。</p><p>再好的东西，我也很快就习惯了，它们无法再带给我刺激或愉快的感觉了。</p><p>基本上你可以从生活中得到自己想要的一切，但前提是，你的目标只有一个，而且你对这件事的渴望超过其他一切。</p><p>而现实是，生活就是一场单人游戏。人独自出生，独自死亡，独自解读人世间的一切。你的记忆只属于你一个人。你出生前无人在意，你离开人世后也无人在意，你存在于人世间只是短短几十年，人生就是一场单人游戏。</p><p>工作时，和比自己更成功的人在一起。 玩耍时，和比自己更快乐的人在一起。</p><p>再说一下你花最多时间与之相处的人。你可以试着回答这些问题：他们都是积极乐观的人吗？维系跟他们的关系需要耗费很大的心力吗？我是否对他们心怀钦佩和尊敬，毫无嫉妒之心？</p><p>如果贪心不足，当有所得时，我们就会认为这本是世界欠我们的。反之，如果活在当下，怀有感恩之心，我们就能觉察到被赐予了丰厚的礼物，时刻都被无穷无尽的财富围绕着。要获得幸福感，真正需要的就是拥有这种觉知。此时此刻，我就在这里，这么多不可思议的东西都能为我所用。</p><p>每当意识到自己对什么东西产生了欲望时，你可以自问：“这个东西对我来说真的那么重要吗？我至于因为这件事不合我意就感到不开心吗？”在大部分情况下，你会发现，这个东西对你来说其实并没有那么重要。</p><p>对周遭评判得越多，自我就越膨胀。在某个瞬间，你状态极佳，因为此时你自我感觉良好，觉得自己比别人强。过了一会儿，你就会被孤独感吞噬，目之所及都是烦恼。这个世界是一面镜子，会把你的感受反射给你。</p><p>说真的，如果人生可以重来，我还是会做出同样的选择，只是希望自己可以控制情绪波动，多一些宽容和平静，少一些戾气和愤怒。</p><p>想要拥有内心的平静，必须先拥有身体的平静。</p><p>迅速采取行动，并对结果保持耐心。</p><p>一旦决定去做，就要迅速采取行动，并全神贯注，全力以赴。同时，要对结果保持耐心，因为你唯一能把握的只有自己，他人和外界环境都纷繁复杂、充满变数。</p><p>市场接受一个产品需要经历很长时间。商业上的合作、职场上的配合都需要一定的磨合期。想要做出优秀的产品是需要时间的，因为你需要不断地、一遍又一遍地打磨它。一旦采取行动，就要速战速决，但等待结果要从容沉着。正如尼维所说，灵感易逝。当灵感乍现时，要马上行动起来。</p><p>我觉得设定具体目标的做法并不科学。史考特·亚当斯有句名言：“要建立系统，而不是设定目标。”运用你的判断力确定什么样的环境有助于你茁壮成长，然后在周围创造一个这样的环境，由此增加成功的概率。</p><p>流血流汗，埋头苦干，直面困难，这些都是一夜成名的必经之路。</p><ul><li>幸福=健康+财富+良好的人际关系</li><li>健康=锻炼+饮食+睡眠</li><li>锻炼=高强度耐力训练+体育运动+休息</li><li>饮食=天然食物+间歇性禁食+植物</li><li>睡眠=不要闹钟+8～9小时+昼夜节律</li><li>财富=收入+财富×（投资回报率）</li><li>收入=责任+杠杆+专长</li><li>责任=个人品牌+个人平台+承担风险？</li><li>杠杆=资本+人力+知识产权</li><li>专长=无法通过培训获得的知识</li><li>投资回报=“买入并持有”+估值+安全边际</li></ul><p>具体地表扬，泛泛地批评。（沃伦·巴菲特）</p><p><img src="/img/2022/07-naval-almanack/book.jpeg" alt="teaser"></p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 人生 </tag>
            
            <tag> 幸福 </tag>
            
            <tag> 内心平和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Never Regret Anything</title>
      <link href="/thought/2022-03-16-never-regret-anything.html"/>
      <url>/thought/2022-03-16-never-regret-anything.html</url>
      
        <content type="html"><![CDATA[<p>忽然发现，我大概花了8年的时间，才开始有明确的周六周日的生活；</p><p>我从最开始太忙不得不工作所以不能有周六周日，到后来害怕周六周日太空虚就只能工作，到现在可以正常的享受工作和休息；<br>花了8年的时间。</p><p>我又一次问自己，选择今天的路是不是后悔了，我又一次坚定的回答，不后悔。</p><p>然后我开始思考，什么是人生无悔。似乎第一次理解了什么才是真正的人生无悔。</p><p>首先无悔一定是从今天的视角看回去，当时的某个选择一定不是最好的，甚至是最差的，当时一定经历了痛苦；当时一定也有其他的选择可以免去痛苦，但是当时还是选择了看起来“错误”的选择。<br>如果一切都是快乐的，幸福的，其实讨论无悔这个事情也变得没有意义了。</p><p>然后才是不后悔的层面。<br>无悔大概是如果你再回到当时的状态，你可能还会做同样的选择。<br>哪怕有时光机告诉你，你做了其他选择更好，你做了其他选择，会少一些痛苦。但是你还是会坚持当时的选择。</p><p>或者说，无悔大概就是你一定会知道当时的选择不是最好的选择，但是仍然义无反顾。</p><p>回想过去这些年，我会说我无悔，大概都是这样的吧。</p><p>说到底，人生无悔，大概就是在想清楚事的前提下，对当前状态的知足，并持续清醒且知足。</p><blockquote><p>封面图与本文观点正好相反，或许我就会选择一个无趣的人生。毕竟于我而言，清醒比有趣重要的多。</p></blockquote><p><img src="/img/2022/03-16-never-regret-anything/teaser.jpeg" alt="teaser"></p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Connecting Women in Tech - 开源中国 - 李佳芮分享女性开源力量</title>
      <link href="/thought/2022-03-08-osc-women-in-tech.html"/>
      <url>/thought/2022-03-08-osc-women-in-tech.html</url>
      
        <content type="html"><![CDATA[<p>1921 年 9 月， 第二届国际共产主义妇女代表会议决定将 3 月 8 日定为国际妇女节，以庆祝妇女在经济、政治和社会等领域作出的贡献与成就。时至今日，女性的确在各行各业发挥了“半边天”的作用，其中就包括 IT 行业/开源领域。借此机会，OSCHINA 邀您分享女性开源力量，共贺女神节！</p><h3 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h3><ul><li>最懂微信生态的 SaaS 产品人，九年微信生态开发和营销经验，入选「福布斯」中国 30 岁以下精英榜单和中关村 30 位高精尖领域创业青年榜单，科创中国2021年青年创业榜</li><li>连续创业者，读研期间开始创业，曾经入选 Y Combinator 创业营</li><li>产品技术专家，微软人工智能最具价值专家，和百度联手打造《从0到1搭建对话式AI机器人》系列课程，出版中文首本对话式交互图书： 《Chatbot从0到1:对话式交互设计实践指南》，全球最大的对话式交互 RPA SDK 开源框架 Wechaty 联合作者。</li><li>句子互动是私域生态，发展最快、服务最多头部客户的企业微信 SaaS 服务商之一，致力于打造下一代跨平台营销云。 我们的产品、帮助企业10倍提升私域运营效率，助力企业解决获客、转化、复购全流程问题。 客户覆盖电商，线下门店，互联网平台等，包括欧莱雅，宝洁，元气森林，泡泡玛特、美团点评、腾讯广告、薇娅等，其中80%客户来自口碑传播。</li></ul><h3 id="作为女性，我们能为开源世界贡献怎样的力量？"><a href="#作为女性，我们能为开源世界贡献怎样的力量？" class="headerlink" title="作为女性，我们能为开源世界贡献怎样的力量？"></a>作为女性，我们能为开源世界贡献怎样的力量？</h3><p>作为一个创业者，一个开源人，一个产品技术专家，我认为这些事情是不分男女，人和人的差别之大，早已超过了性别的差异。所以这个问题不应该是作为女性能贡献什么力量，而是作为一个独立的个体，我们能为开源世界贡献什么力量。</p><p>那我的回答是，我们先做好自己，然后再做榜样。当开源的世界是一个纯粹的世界，当大家做事都是高效协同，价值导向的时候，其实就已经是最大的力量了。</p><p>具体来到我们自己做事，我很认可apache的原则： If it didn’t happened on the list, it didn’t happen, 在开源的世界，我们自己是否能所有事情都在线上的文档清晰的沟通清楚，能不能在在开源的世界从想法、交流、开发流水线和视频会议都全部的公开和存档，能不能把这些基础的事情做好，做一个价值导向，坦诚率真的人，做一个价值导向，坦诚率真的项目。</p><div class="video-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br><iframe width="560" height="315" src="https://www.youtube.com/embed/JaBObasX2_o?start=85" frameborder="0" allowfullscreen style="    position: absolute;    top:0;    left:0;    width:100%;    height:100%;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 句子互动 </tag>
            
            <tag> 开源 </tag>
            
            <tag> 开源中国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>句子互动 CEO 入选 2021 科创中国·青年创业榜</title>
      <link href="/thought/2022-2-15-kechuangzhongguo-2021.html"/>
      <url>/thought/2022-2-15-kechuangzhongguo-2021.html</url>
      
        <content type="html"><![CDATA[<p>近日，中国科协发布 2021 “科创中国”榜单遴选结果的公示。2021“科创中国”榜单扩大至7个系列，由全国学会、各省市科协推荐，超过150位相关领域院士专家参与初评和终评，分别遴选出100项先导技术，10项突破短板关键技术，100家新锐企业，10家产学研融通组织，10家科技创业投资机构，70项开源产品、社区、机构和90位青年创业人才。</p><p>活动 2021 年 9 月 24 日正式启动，2022 年 2 月 9 日- 2 月 15 日榜单遴选结果公示。句子互动 CEO 李佳芮入选「青年创业榜」。<br>“青年创业榜”面向全国科技创新高地，联合北京、上海、深圳等三地政府以及大型双创平台组织，遴选以科技创新为引领开展创业活动的优秀青年代表。</p><p><img src="/img/2022/02-kechuangzhongguo-2021/list-teaser.jpg" alt="teaser"></p><p>中关村U30连续多年呈现出高学历、高精尖、高融资的“三高”特点：超过七成的获胜选手是硕士及以上学历；七成以上的优胜者从事人工智能、芯片设计、生物医药、3D视觉、大数据、先进制造、节能环保、新材料等高科技领域，通过创新创业攻克科技难关的同时，也为社会提供了数千个就业机会；159位年度优胜者累计发生再融资97次，再融资金额超过78亿。仅今年上半年，平台上的年度优胜者再融资达20次，融资金额超过28亿,涌现出了运去哪、梅卡曼德机器人、来也科技等发展迅速的硬科技企业。</p><p>据介绍，“科创中国”青年创业榜单通过推广中关村U30工作模式，在“科创中国”试点城市等联合相关方开展区域U30活动，打造“科创中国”U30品牌集群，寻找改变世界的青年创业力量，营造良好科技创新创业生态。2021年，将在京津冀、长三角、粤港澳大湾区三个重点区域，协同全国学会、地方政府、地方科协等组织，共同开展榜单招募及选拔工作，最终由专业导师团评选出30位优秀科技创业者入选区域“科创中国-青年创业榜单”，享有相应权益服务。</p><blockquote><p>榜单信息： <a href="https://www.kczg.org.cn/meetspecial/ranklist?belong_type=4" target="_blank" rel="noopener">https://www.kczg.org.cn/meetspecial/ranklist?belong_type=4</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 句子互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在句子互动的 2022 年</title>
      <link href="/thought/2022-2-4-juzibot-2022.html"/>
      <url>/thought/2022-2-4-juzibot-2022.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>加入字节最好的时间是 2016 年，加入美团最好的时间是 2015 年；<br>加入句子互动最好的时间，是在今天。</p></blockquote><p>2015年，美团与大众点评合并；<br>2016年，字节推出抖音；<br>2015年和2016年，都不是美团和字节初创的日子，也不是他们估值的巅峰期，却是他们从不确定到确定，在规模化的前夕，在确定性的日子里面最不确定性的时刻。  </p><p>拥抱不确定性，是每个创始人必经的历程。<br>但是创始人不能以此为理由，让整个团队都处在不确定的漩涡之中。<br>我一直在努力，让大家能在不确定的日子，拥有确定的未来。  </p><p>很多人问我，句子互动是什么时候成立的，其实还是挺难解释的：  </p><ul><li>我基于微信生态的营销工具赚到的第一笔钱，是在 2013 年；  </li><li>工商的信息显示：桔子互动成立于 2015 年2月25日，句子互动成立于 2019 年5月 8 日；  </li><li>句子互动的第一笔融资款到账于 2016 年；  </li><li>Wechaty 的第一行代码写于 2016 年；  </li><li>微信自动化的第一笔收入是在 2016 年；  </li><li>我在 2017 年全职创业；  </li><li>高原在 2018 全职加入句子互动；  </li><li>2019年，我和高原在美国的 Y Combinator，战略从智能化降级到自动化；  </li><li>伯昊在 2020 年加入句子互动；  </li><li>2021 年，句子看起来完成了商业化，看起来走完了从 0 到 1 的过程；  </li><li>2021 年，在企业微信自动化领域，我们或许可以说我们做成头部的公司了。<br>我记得和伙伴云的创始人戴志康聊到我的经历的时候说，“变得越来越接地气了。”  </li></ul><p>写了这么多看起来没什么关系的时间点，我只想说，其实句子互动不是第一天就确定的，句子互动（桔子互动）在过去的7年，一直在与不确定性为伍。<br>句子互动是一家发展比较缓慢的公司，但是确实是一家有耐心、有韧性、一直没变过的公司。<br>句子互动应该是最懂微信生态的公司，之一。  </p><p>在过去的 2021 年，句子终于从一个孵化器的一个小作坊，搬到一个近一千平米的办公室，完成了商业化的落地：</p><ul><li>我们完成了最新一轮的融资；</li><li>我们的管理团队已初步搭建完成，除了产品负责人还没有确定，研发、交付、销售、市场、职能部门都有了稳定的负责人和管对；</li><li>句子互动成为微信生态发展最快、服务最多头部企业的企微服务商。</li></ul><p>每次在完成一个里程碑的时候，总是想要感谢很多人，首先要感谢所有句子的小伙伴们，不管是为了上线通宵加班的产研同学，还是为了客户上手熟练使用在一线和客户处理问题的销售和交付同学，还有为了团队整体稳定在大后方任劳任怨的职能部门的同学。  </p><p>这一年，我对团队的认知也有了很大的变化，<strong>从迷信经验，到相信自己和团队</strong>。<br>我们虽然在一个很热的赛道，但是坦率讲，我们的团队并不是被资本看好的团队类型 —- 因为团队太年轻了。<br>是的，<strong>句子互动是企微生态，最年轻的团队</strong>。  </p><p>除了产研之外的每一个部门，我都经历了从迷信经验到相信自己和团队的阶段。和句子走的比较久的同学应该知道，我们曾经有过比较资深的销售负责人，小平也曾经希望招到一个资深的HR负责人，但是后来，销售团队是伯昊做出来的，职能部门也是小平一点点自己搭建出来的，交付部门负责的玉晓，曾经是我们团队 UI 设计师，交付部门今天是句子互动最靠谱的部门。<br>这些让我越来越相信和坚定 —-  <strong>我们只要年轻人</strong>。<br>或者准确一点来说，年轻的成年人。  </p><p>在我看来，年轻首先意味着持续学习，之所以说程序员35岁就写不了程序了，其实和年龄没关系，更多的是，他们放弃了终身学习，抱着10年前老旧的技术做着增删改查的任务，当然企业更愿意选择一张白纸，新的技术在各个方面都会更胜一筹。<br>亨利·福特说，“任何停止学习的人都已经进入老年，无论他在20岁还是80岁；坚持学习的人则永葆青春。”<br>另外，年轻经常是激情和梦想的代名词，我们很少从年轻人嘴里听到累了，干不动了之类的话，反而都是“我能行”，“我可以”，在过去相当长的时间，正是靠着一句又一句的 “我能行”，句子搞定了一个又一个的大客户，创造了很多 SaaS 公司不太可能的奇迹。<br>此外，年轻还有一个很重要的品质，就是好奇。我一直认为，好奇是驱动人类发明创造最主要的源泉，因为好奇，所以人类才愿意去探索未知，哪怕前途荆棘；因为好奇，才有明智的冒险家发现新的世界；同样因为好奇，我们才会不停的尝试，新的技术如何能改造传统的消费品公司，新的技术如何能十倍提升企业效率，让我们有了今天的产品。<br>对未知的好奇，反向让我们持续学习。  </p><p>因此，在今年年初的时候，句子的管理团队确定了我们精简的价值观：<br><strong><strong>“持续成长，独当一面”</strong></strong><br>我们不怕团队都是没有经验的年轻人，我们怕的是止步不前的经验人。<br>句子互动希望帮助每一个同学成长，我们也在尽我们的可能，给大家成长和犯错的空间，但是重要的是，<strong>每一次犯错，是否能从错误中学到一些东西，能不能在下一次做的更好，能不能真的可以成长为独当一面的将士</strong>。<br>句子互动希望独当一面的你，和我们一起去创造下一个奇迹。  </p><p>2021 年，找到了产品与市场的匹配，完成了产品从 0 到 1 的搭建。<br>2021 年，我们基于企业微信的产品，为 58同城、欧莱雅、元气森林、泡泡玛特等互联网和消费品公司成功构建了高效的私域运营工具；<br>2021 年，我们发布了我们线下门店白皮书，我们基于大量的客户共建经验，帮助门店企业通过一条运行主线、3个基建工程和4个关键动作，从0到1搭建私域业务。<br>2021 年，我们销售团队初步搭建完成，找到了面向大客户的销售路径和最佳实践，创造了企业微信和SaaS行业惊人高的人效。<br>2021年，我们的业务有了十倍的增长。  </p><p>2022 年，我们有理由相信，我们会开始我们的规模化进程。<br>2022 年，我们更有理由相信，基于 2021 年的企业微信业务基础，进一步实现业务的五倍增长。  </p><p>2022年，不止于此。<br>句子是一家 Born to be Global 的公司，今年，我们将会跨出全球化的第一步。<br>春节之前，我们如愿以偿的上线了我们的 WhatsApp 产品。<br>我们会在 2022 年，复制我们在企业微信上成熟的私域方法论，开启我们迈向全球化的第一步。<br>2022 年，我们在 WhatsApp 上的一小步，代表着句子互动的全球化的一大步。<br>但是需要提示的一点，我们会在 WhatsApp 上迈出一小步，这里真的是一小步，预计今年 WhatsApp 收入占比大概是整体收入占比的 5%。  </p><p>除了业务之外，今年的另外一个重要的目标，我们会提升句子整体的人才密度，正如 Netflix 里说的那样：  </p><blockquote><p>最好的的工作环境是拥有一群超级棒的同事。</p></blockquote><p>句子已经艰难的走过了从 0 到 1 的时刻，今年将会是一个重要的转折点，句子从小作坊团队成长为正规军。期待团队里每个人能快速成长，独当一面，成为团队的中流砥柱，成为部门的负责人，成为高管。<br>只有快速成长公司才会给年轻人这种机会，快速成长的公司无法接受在磨合与信任上花费太多时间，相比去外面找高管，宁可用现成信得过的人。<br>句子今天刚好有这样的机会。<br><strong>这会带来最密集的学习成长速度，最快的职位财富上升速度，也会带来最高的工作强度和难度。</strong><br>这不是那么好抓的职业机会。<br>但是我希望，你们都能抓得住，我们都能抓得住。<br>2022年，我们共同携手，让大家在不确定的日子里，拥有最确定的未来。  </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 句子互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年度中国高科技高成长企业系列榜单发布，句子互动入选多个细分榜单</title>
      <link href="/thought/2022-1-7-juzibot-startup-list.html"/>
      <url>/thought/2022-1-7-juzibot-startup-list.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2022/01-juzibot-startup-list/teaser.jpeg" alt="teaser"></p><p>十年TO C，十年TO B，中国高科技企业迎来 “数字中国的黄金十年”。  </p><p>“数字中国”不仅仅是一个风口、一场浪潮，更是一次科技产业化、产业数字化的融合革命，一场涉及国家安全的“数字战争”，一次从“传统文明”向“数字文明”跨越的历史大迁徙。  </p><p><strong>【第一新声】</strong>联合 <strong>【天眼查】</strong>，评选出“数字中国-2021年度高科技高成长企业系列榜单”，句子互动登榜<strong>2021年高科技高成长新锐企业TOP50</strong>、<strong>2021年中国消费与零售科技高成长企业TOP30</strong>和<strong>2021年SCRM领域高成长企业榜</strong>。  </p><p>第一新声是国内优先从“数据+甲方+投资方+市场”四个角度展开，建立独家评选指标体系，并评选出最终榜单的研究平台。希望通过4个角度的调研与评选，发现和挖掘出不只是TO VC，同时TO 客户的高科技、高成长、好团队、好口碑、稳交付的优秀企业。  </p><p>本次年度企业榜单总共包括综合榜、垂直行业科技榜、通用行业科技榜三大类，涵盖独角兽、瞪羚企业、新锐企业等不同阶段非上市企业，基于【天眼查】大数据优势，并通过调研问卷、电话访谈和公司调研等多种方式，收集企业自主提交数据信息。  </p><p>同时，邀请到来自不同领域的甲方高管、产业专家和投资大咖，包括<strong>中国时尚行业CIO联盟联合创始人王歆</strong>、<strong>中国时尚行业CIO联盟联合创始人张航</strong>、<strong>李宁CIO朱远刚</strong>、<strong>某500强金融集团CXO</strong>、<strong>某汽车集团CIO</strong>、<strong>某汽车公司IT部主管</strong>、<strong>CIO时代创始人姚乐</strong>、<strong>某银行信息科技部总经理</strong>、<strong>某电子消费品集团CDO等近20位大咖</strong>（部分企业CIO、CXO等高管暂不公开姓名职位），以及<strong>达晨财智</strong>、<strong>云启资本</strong>、<strong>信天创投</strong>、<strong>九合创投</strong>、<strong>钟鼎资本</strong>、<strong>梅花创投</strong>、<strong>BAI资本</strong>、<strong>盈动资本</strong>、<strong>义柏资本</strong>、<strong>天眼查</strong>等十余家一线投资机构投资人与数据库平台专家担任评委，从多维度展开评选，并结合数据调研，综合评选出相应榜单。  </p><h2 id="综合榜"><a href="#综合榜" class="headerlink" title="综合榜"></a>综合榜</h2><p>综合榜由“2021年高科技高成长独角兽企业TOP50、2021年中国高科技高成长瞪羚企业TOP50、2021年高科技高成长新锐企业TOP50”三个榜单组成，<strong>句子互动上榜新锐企业 TOP50</strong> ：  </p><p><img src="/img/2022/01-juzibot-startup-list/young-enterprise.jpeg" alt="young-enterprise"></p><h2 id="垂直行业科技榜"><a href="#垂直行业科技榜" class="headerlink" title="垂直行业科技榜"></a>垂直行业科技榜</h2><p>垂直行业科技榜由“2021年中国消费与零售科技高成长企业TOP30、2021年中国汽车科技高成长企业TOP30、2021年中国金融科技高成长企业TOP30”三个榜单组成，<strong>句子互动上榜消费与零售科技 TOP30</strong> ：  </p><p><img src="/img/2022/01-juzibot-startup-list/consumer-and-retail.jpeg" alt="consumer-and-retail"></p><h2 id="通用行业科技榜"><a href="#通用行业科技榜" class="headerlink" title="通用行业科技榜"></a>通用行业科技榜</h2><p>通用行业科技榜由“2021年云原生领域高成长企业榜、2021年Martech领域高成长企业榜、2021年SCRM领域高成长企业榜、2021年协同办公领域高成长企业榜、2021年BI领域高成长企业榜”等十个榜单组成，<strong>句子互动上榜SCRM领域高成长企业榜</strong>：  </p><p><img src="/img/2022/01-juzibot-startup-list/scrm.jpeg" alt="scrm"></p><p>过去一年，句子互动与众多头部品牌一起深耕私域，共同打造了多个行业的典范：</p><ul><li>消费品行业我们与美宝莲纽约、Wonderlab、Babycare、元气森林等并肩作战；</li><li>教育行业我们服务了猿辅导、一起作业、网易有道和亿学教育；</li><li>线上服务行业我们帮助58同城、啄木鸟科技、元保保险等团队提升了运营效率。</li></ul><p><img src="/img/2022/01-juzibot-startup-list/juzibot.jpeg" alt="juzibot"></p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> SaaS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft Ignite China - 科技寰宇：探索无人之境</title>
      <link href="/thought/2021-12-30-microsoft-cloud-native-talk.html"/>
      <url>/thought/2021-12-30-microsoft-cloud-native-talk.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2021/12-microsoft-cloud-native-talk/talk.jpeg" alt="group"></p><blockquote><p>以下内容是部分直播内容的延伸</p></blockquote><h2 id="关于程序"><a href="#关于程序" class="headerlink" title="关于程序"></a>关于程序</h2><p>以下的公式，是我对程序的认知：</p><blockquote><p>程序 = 逻辑  + 数据库 + 云原生</p></blockquote><h3 id="先从云原生聊起吧"><a href="#先从云原生聊起吧" class="headerlink" title="先从云原生聊起吧"></a>先从云原生聊起吧</h3><p>前一阵，我在微软和微软中国的 CTO 有一个关于云原生的直播讨论，在聊云原生的话题，我说在新时代出生的我不只是“互联网原住民”，更是“云原生原住民”，因为我写程序的第一天接触的就是云原生的技术，我在2016年开始用 docker，用微服务的时候，只是因为创业资源紧缺，希望能快速上手，那个时候压根不会思考一些“假设云服务一定可信”这样的理论，只要能用别人的，我一定不会自己去架一些服务，反正别人肯定都比我靠谱，我就一个人光脚在那写代码，别人的再不靠谱，论时间论人力都比我强啊，那我还叽歪个什么。<br>那个时候也没什么人提云原生，我自己在docker、微服务的世界里呆久了，忽然有人说云原生，其实最开始我也不太理解这是什么，后来发现，这就是我。微软中国的 CTO 韦青说，就像鱼儿游在水里，它不会问什么是水，我们呼吸在空气中，我们不会问什么是空气。因为他就是我们身边最习以为常的东西。那些我们不经常碰的东西，才会挂在嘴边讨论。我深以为然。  </p><p>话题说的有点远，聊回到云原生的话题，我觉得云原生最大的价值，就是今天的程序员，不需要再考虑复杂的运维场景，不需要自己去维护服务器，甚至都不需要知道什么是服务器，只要把自己业务逻辑说清楚，其他的几个9的问题，其实有云服务厂商帮你解决了，与其说是解决，不如说背锅。你看宕机了吧，不是我的问题，大厂宕了。<br>云原生的时代，真的是一个对工程师来说，太美妙的一个时代了。  </p><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><p>这个其实应该是程序的最重要的部分，也是第一步，只是因为毕竟这是年终随笔，所以我就随意一些，从随意的地方入手了。<br>做一个有逻辑的人，其实很重要，不只是在程序的场景下。<br>说回来，程序中的逻辑，更多偏业务逻辑，就是你想清楚，数字世界的逻辑是什么样的，要能尽可能的穷举（其实产品也是）所有可能性，然后每一个可能性给一个确定性的结果。<br>程序和机器简直太美妙了，因为他们不会说话，他们永远都是确定性的。你给出一个指令，输出永远是确定的，正确的。<br>有了bug，也一定是因为你自己的逻辑出现错误，和机器一定没有关系。<br>这样的合作对象，可能在现实中永远没法遇见 – 可控性强，永远不会出错，永远是确定的。<br>在数字世界久了，有的时候人会越来越较真，甚至偏爱辩论和抬杠 – 我称之为率真。<br>当然，率真的对象还是要考究的：</p><ol><li>首先，对方得是一个成年人</li><li>另外，对方也得有逻辑</li><li>关系应该不能太差，保证大家在同频</li></ol><p>做一个过于较真的程序员，可能在现实世界是活不好的，好在现在的我应该不是那样的。</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>其实更多的，这里只的是存储。<br>你写了很多业务逻辑，一定会产生数据，这些数据，需要存储，所以有了数据库。<br>我第一次接触数据库应该12年前，数据库老师在讲台讲了好多mysql的各种表结构，信息都记不太清了，如果我重新去讲，我可能会用 excel 来讲，深入浅出，清晰易懂。<br>我一直觉得，云原生的背景下，Google Spreadsheet （Google 的 Excel）有了一切的读写 API，其实是人人都是工程师的年代了。<br>只要你懂业务，懂逻辑，其实学习什么语言并不重要。<br>好多其他行业的人会和我聊天的时候，说觉得程序员的行业很酷炫，说自己也想写程序，问我要从什么语言学起。<br>每次我都不太知道该怎么去回答，因为对于一个希望用程序去解决问题的人来说，语言完全不重要，Node 还是 Python 还是 Go 还是Java PHP 这些，没啥区别，因为你根本不需要理解什么是 I/O 什么是调度什么是脚本语言什么是解释器什么是线程（大学的那些概念真的劝退了好多人，但是这些基础课程很重要，这个是后话了）。你只要理解你自己的逻辑，拆分要解决的问题，然后写出来，画流程图都行，说清楚了，用 Excel 把数据存储并可视化起来，其实就够了。更何况，Excel 都能编程。<br><strong>了解太多的时候，反而让你的开始变得困难</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Microsoft </tag>
            
            <tag> 云原生 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在2021年的最后一天</title>
      <link href="/thought/2022-1-1-the-last-day-of-2021.html"/>
      <url>/thought/2022-1-1-the-last-day-of-2021.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>我觉得我40岁人生一点都没有白活，过得特别的充实，也特别踏实，还有特别的自信和饱满。我就是个普普通通的女人吧，然后我现在就是想踏踏实实做好我自己的工作，照顾好自己的家人，更重要的是照顾好自己的身体。<br>留得青山在，不怕没柴烧。<br>–汤唯</p></blockquote><p>让我焦虑的 30 岁，终于还是来了。<br>当她真的来的时候，我似乎没有想象中的焦虑。 29 岁那年，我因为三十岁危机一度陷入抑郁，而 30 岁这一年，我开始变得坚定、清醒和从容。<br>就像一个朋友在我焦虑的 29 岁和我说，别怕，来了就好了。<br>然后，她真的来了。  </p><p>看起来不算太差，我在 30 岁的尾巴拿了一个福布斯 30 Under 30 和 中关村 U30，北京地铁的大屏会循环播放我的照片，象征着年轻的力量。<br>看起来不算太差，我的公司终于从死亡线的边缘挣扎回来，开始了规模化的扩张，租了近 1000 平的办公室，团队直逼百人。<br>看起来不算太差，在多次觉得自己呼吸不畅，五脏六腑总是痉挛，莫名其妙的头疼之后，我终于鼓起勇气做了系统性的体检，除了常规性贫血之外，其他都没什么异常。  </p><p>于是找一个看起来可以偷懒的时间，开始了《写在 2021 年的最后一天》</p><p>每年，我都会在岁末年初写《写在最后一天》系列：</p><ul><li>2016年，我的两个字是【激荡】</li><li>2017年，我的两个字是【蛰伏】</li><li>2018年，我的两个字是【厚重】</li><li>2019年和 2020 年，是断更的两年，断更的原因今天还不太敢说，希望有一天我功成名就的时候，能光明正大的说出来。</li><li>2021年，我给自己的两个字总结是【感恩】</li></ul><p>其实这篇《写在最后一天》花了我漫长时间的，也是这么久以来，久违的舍得这么奢侈的把时间放在文字上，因为写下来不只是一种沉淀，还是一种力量，更是对未来的憧憬，它会见证你的梦想成真。  </p><p>“感谢这些记录，我才成为我。”</p><h2 id="关于感恩"><a href="#关于感恩" class="headerlink" title="关于感恩"></a>关于感恩</h2><p>今年是我全职创业的第六个年头，我的公司第一次举办了感恩节活动。<br>还是蛮感慨的，一路走来，除了一直陪伴在身边的人，我还有机会表达感谢，其他大部分的人只是出现在我的生命中，陪我走过一段艰难的道路，然后分道扬镳。<br>以前总想着，我弱小的时候，我一定要在有机会的时候对帮助过我的人予以感谢，或者送上点什么或者反馈帮助些什么。但是当我可以送点东西的时候，竟然发现，貌似也没什么可送的。甚至很多时候，因为已经不再联系很久，连句专门的谢谢说起来，都显得异常刻意。  </p><p>今年忽然明白，我们能对过去那些记得或者不记得的，帮助过我们的陌生人做的，就是把善良传递下去，让善良做一个接力棒，帮助更多的人。<br>刚创业的时候，自己很吝啬时间，也很吝啬资源，不太熟的人找我帮忙，我是很会拒绝的。后来慢慢的，当我想明白善良的接力棒需要传递后，我逐渐愿意帮助更多的人，不求什么回报，或者仅仅是为了报答曾经帮助过我的另一个陌生人。  </p><h2 id="关于做人"><a href="#关于做人" class="headerlink" title="关于做人"></a>关于做人</h2><p>其实今年见识到了几次人性的恶，几个小事还是让我非常不太开心的。<br>其中有一件特别不开心的事情几个月后竟然有了反转，兜兜转转，似乎我还赚了便宜。<br>感谢我守住了自己的原则。  </p><p>越发觉得，眼光还是要长远一些的。无论为了什么，都不能丢了人格。十年的信任建立是非常容易的事情，摧毁它可能就是一次没有底线的伤害。<br>做一个好人。  </p><p>什么是好人呢，我觉得最重要的是双赢。可以有赌性，但绝不能上零和游戏的牌桌，如果被迫上了牌桌，也要努力在零和游戏中寻找双赢点。<br>其实人和人之间是非常长期的事情，在当下，谁占谁便宜都不合适，因为他总会在未来的某个时间找回来的。步入30岁后，我越来越珍惜那些超过十年的情谊，也在努力去培养新的十年的情谊，我相信，时间看得见的，除了我们的努力，还有人心。  </p><p>当然，我依旧还是多年前那个鲜衣怒马的热血少年，那个得理不饶人的激昂少女。依然坚决不能吃亏，谁让我吃了亏，我一定也会找回来的。因为我需要为我的团队负责，为我自己负责。<br>但这并不耽误，我要做一个好人。  </p><h2 id="关于逻辑"><a href="#关于逻辑" class="headerlink" title="关于逻辑"></a>关于逻辑</h2><p>这可能是今年我嘴里最高频的词汇了，原因竟然是我遇到了太多没有逻辑的人。<br>从说不明白话，到想不清楚事情，从耽误自己，到折腾团队。<br>我也从最开始的愤怒无助，变到平静接受。<br>我觉得活得通透的前提，一定是要有逻辑，逻辑要自洽。<br>你可以是错的，但是在你的世界里，这个错误是能逻辑自洽的，它就是对的。  </p><p>写作其实是一个蛮锻炼逻辑的事情，能够把一个事情优美的写下来，首先是想清楚，然后能拆分三四条列出来，在我看来，任何事情都是能拆分3-5条，然后再拆分3-5条下去的。如果一个事情，一定要罗列几十条，然后混在一起无法归类，一定是没想清楚的。<br>对的，事情一定是可以归类的，事情也一定都是可以拆分的。<br>这篇文章的一堆关于XX 显然就是一个反面示例，但是既然是年度流水账，就让我纵容一下自己吧。  </p><p>最近打算重新读一遍《金字塔原理》。<br>“金字塔原理 是一种重点突出、逻辑清晰、层次分明、简单易懂的思考方式和沟通方式。金字塔原理 的基本结构是：结论先行，以上统下，归类分组，逻辑递进。先重要后次要，先总结后具体，先框架后细节，先结论后原因，先结果后过程，先论点后论据。”<br>这本书应该是这几年对我影响非常深远的一本书。<br>2022年打算重新读，一方面为了我自己，更主要的是为了能更清晰的和团队讲清楚这件事。  </p><h2 id="关于韧性"><a href="#关于韧性" class="headerlink" title="关于韧性"></a>关于韧性</h2><p>韧性这个词，应该是对我的评价里面，最最高频的词了。<br>后来有人说我是钝感力，感受不到疼痛和挫折，也有人说我逆商高（大概就是因为智商情商都不太行，就剩下逆商了。。）。其实基本都和韧性相关。<br>从这个角度看，我的性格还真的很适合做 ToB 的行业，这个行业就是一个只要你有韧劲，有耐心，最后一定能耗死别人的一个行业。<br>因为薇娅是我的客户，所以我有一次专门去看了薇娅在十三邀上的一期节目，她和许知远说，你很适合直播啊，你直播的话，你一定会火，但是你坚持不下来。我就能，我能耗死其他人。<br>当时我特别感同身受：<br>我干不过你，但是我耗死你。</p><h2 id="关于产品"><a href="#关于产品" class="headerlink" title="关于产品"></a>关于产品</h2><p>我终于觉得，自己可能是一个及格的产品经理了。<br>从最开始迷恋用工具画图，到现在关注底层逻辑，喜欢在白板或者贴纸上画逻辑图。<br>之前和一个朋友聊到古典产品经理，在今天几乎已经找不到了：</p><ol><li>一页一页的对竞品进行截图</li><li>用像素眼来看产品</li></ol><p>有太多产品经理的方法论中聊到，高阶产品经理要懂商业，要懂业务，要做闭环，甚至就是一个 CEO 等等。太多鸡汤文夸大了产品的作用，其实那些东西，你放到工程师、运营、售后身上，我觉得没准也能都编出来是对的。<br>但是我确越来越觉得，能做好产品经理最基础的工作，在很多时候已经足够了 —— 设计一个真正让人用起来舒服的功能模块。<br>就像文章开头汤唯说的那样：</p><blockquote><p>然后我现在就是想踏踏实实做好我自己的工作</p></blockquote><p>如何能做一个真正让用户舒服的模块呢？ 我并不觉得人人都是乔布斯，有那么厉害的洞察。很多时候，起码在 To B 领域，不需要那么多颠覆式创新，也没有那么资源支持颠覆性创新，能会抄就不错了。<br>说好听一点，就是要学会学习。  </p><p>创业越久越会认识到自己的渺小，越敬畏经验和时间，承认自己不是伟人，很多东西，其实其他人都已经做过了，我们就原封不动的抄过来，其实就已经能及格了。<br>这里的抄竞品，其实有3个角度：</p><ol><li>竞品不是绝对意义的竞品，比如我做 SCRM 的公司，我会去看一些竞品，但是真的要抄的时候，我不会选 SCRM 的公司抄，因为这个行业本身也没存在太多年，SCRM 的竞品公司大概率还没想明白产品究竟该怎么办呢，抄来抄去，就只能永远走人家的歪路。这里的竞品更多的是功能上的竞争。比如我们最近在做权限管理，我会让我的团队去抄袭做身份认证的公司是怎么做权限的，去看做招聘系统的公司怎么做权限的，去看做 OA 的公司怎么做权限的，他们才是真正走过十年以上的路，能学到精髓，能学到不变的东西。</li><li>竞品一定要足够多，看足够多的竞品，才能真正理解，才能选出最优解，永远不要偷懒，其实看竞品的过程是在学习的过程，学习竞品的产品经理是怎么思考的，他为什么做了一个不合逻辑的东西还不改，一定有他的原因。当然，前提是我们作为产品要足够智慧，能分辨什么是好产品。</li><li>抄竞品一定要足够细，竞品的每一个模块都要截图研究，囫囵吞枣的效果，通常会适得其反。</li></ol><p>没想到写一个竞品，就花了这么多笔墨。<br>其实第二个像素眼，倒也不是什么特异功能，就是仔细一点，负责一点就可以了。我实在难理解一个微软雅黑和宋体都分不清楚的产品，一个左边距是5px，右边距是20px都看不出来的产品，能交付出什么样的好产品。<br>其实产品还有一个很重要的环节是用户测试，我回头应该再整理一个专门的产品文章来写，感觉放在年终总结里面，有点太啰嗦了。  </p><h2 id="关于工程师"><a href="#关于工程师" class="headerlink" title="关于工程师"></a>关于工程师</h2><p>提到产品，不得不再聊聊最近我对技术的一些思考。<br>前几天，我在公司启动了 WhatsApp 的项目启动会，和团队聊到工程师：<br>我和大家说，作为一个全球化的项目，对项目团队的要求可能和过去我们的要求不太一样，我期待这个团队的人都是“硅谷工程师”。工程师文化的明确定义，是我最开始看吴军的《硅谷之谜》看到的，具体的定义可以参考：工程师的五个等级——《硅谷之谜》书摘<br>我期待团队里的人，最少要满足第五等工程师，也就是一定有自己独立设计和实现功能的能力。<br>未来的项目负责人一定要满足第四等工程师。<br>我们这个项目里面，在相当长的一段时间里，是没有产品经理的。<br>人人都是产品经理。<br><strong>这个项目里的人，一定都是工程师。</strong></p><p>我在相当长的时间里，一直觉得，工程师一定是可以独当一面的，工程师是有很强的产品思维的，有两个原因：</p><ol><li><strong>作为产品的时候，接触的都是最棒的工程师</strong>： 2013年，我刚入行产品经理的时候，是我和几个北邮的同学做的工作室，除了我之外，其他人都是工程师。从今天的视角看回去，他们作为研发的产品能力在那个时候应该不在我之下（现在他们年package都小几百万了），他们本身就有极强的学习能力、产品能力和积极推动事情的意愿。虽然最初的小团队只有5个人，但是我被那样的人才密度宠坏了。</li><li><strong>我是从产品岗转到研发岗的</strong>：2017年，我离职全职创业，因为只有一个人，只能从产品转到工程师，在2017年和2018年没日没夜写代码的那两年，我是没有产品经理的，我一个人天马行空的在我的世界里创造我心中的数字世界。那两年应该是我创业生涯最享受的黄金时代，是我最自由创造力最强一天工作16个小时仍然不知疲倦的黄金时代。至于商业化能力这些，都是后话了。</li></ol><p>我的创业黄金时代结束于我和合伙人在 YC 毕业。<br>2019 年，我和合伙人从美国回来，我带团队一塌糊涂（当然，今天我也一塌糊涂），才发现研发不是我想象的那样，我的耐心严重不足，脾气从大学的温顺逐渐过渡成了暴躁狂。我对研发有非常多的不满（客观的说，问题可能大部分也出在我）。<br>我当初成为研发的原因，和我当初对研发的愤怒，竟然如出一辙。<br>我没有能力去改变什么，只能选择接受，然后找到最合适的方式，带伤前行：  </p><ol><li>接受他们</li><li>教会他们</li><li>能找到更合适的人</li></ol><p>好在创业这么多年，我已经学会了不用唯一的态度去解决问题。其实我觉得创业早期，除非头戴光环的创始人，可能只能选择 1 和 2，创业到一定阶段，才能选择3。<br>同时幸运的是，我有一个很棒的 CTO，他能容忍我很多，脾气又好，在他带领下的研发团队成员从几个人到今天的几十个人，一直非常稳定，离职率应该是行业最低的。  </p><h2 id="关于程序"><a href="#关于程序" class="headerlink" title="关于程序"></a>关于程序</h2><p>其实我本来是想在工程师那个模块写的，但是没控制住，情绪有些激动，所以我新开了一个段落聊聊今天我对程序的认知：  </p><blockquote><p>程序 = 逻辑  + 数据库 + 云原生</p></blockquote><h3 id="先从云原生聊起吧"><a href="#先从云原生聊起吧" class="headerlink" title="先从云原生聊起吧"></a>先从云原生聊起吧</h3><p>前一阵，我在微软和微软中国的 CTO 有一个关于云原生的直播讨论，在聊云原生的话题，我说在新时代出生的我不只是“互联网原住民”，更是“云原生原住民”，因为我写程序的第一天接触的就是云原生的技术，我在2016年开始用 docker，用微服务的时候，只是因为创业资源紧缺，希望能快速上手，那个时候压根不会思考一些“假设云服务一定可信”这样的理论，只要能用别人的，我一定不会自己去架一些服务，反正别人肯定都比我靠谱，我就一个人光脚在那写代码，别人的再不靠谱，论时间论人力都比我强啊，那我还叽歪个什么。<br>那个时候也没什么人提云原生，我自己在docker、微服务的世界里呆久了，忽然有人说云原生，其实最开始我也不太理解这是什么，后来发现，这就是我。微软中国的 CTO 韦青说，就像鱼儿游在水里，它不会问什么是水，我们呼吸在空气中，我们不会问什么是空气。因为他就是我们身边最习以为常的东西。那些我们不经常碰的东西，才会挂在嘴边讨论。我深以为然。  </p><p>话题说的有点远，聊回到云原生的话题，我觉得云原生最大的价值，就是今天的程序员，不需要再考虑复杂的运维场景，不需要自己去维护服务器，甚至都不需要知道什么是服务器，只要把自己业务逻辑说清楚，其他的几个9的问题，其实有云服务厂商帮你解决了，与其说是解决，不如说背锅。你看宕机了吧，不是我的问题，大厂宕了。<br>云原生的时代，真的是一个对工程师来说，太美妙的一个时代了。  </p><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><p>这个其实应该是程序的最重要的部分，也是第一步，只是因为毕竟这是年终随笔，所以我就随意一些，从随意的地方入手了。<br>做一个有逻辑的人，其实很重要，不只是在程序的场景下。<br>说回来，程序中的逻辑，更多偏业务逻辑，就是你想清楚，数字世界的逻辑是什么样的，要能尽可能的穷举（其实产品也是）所有可能性，然后每一个可能性给一个确定性的结果。<br>程序和机器简直太美妙了，因为他们不会说话，他们永远都是确定性的。你给出一个指令，输出永远是确定的，正确的。<br>有了bug，也一定是因为你自己的逻辑出现错误，和机器一定没有关系。<br>这样的合作对象，可能在现实中永远没法遇见 – 可控性强，永远不会出错，永远是确定的。<br>在数字世界久了，有的时候人会越来越较真，甚至偏爱辩论和抬杠 – 我称之为率真。<br>当然，率真的对象还是要考究的：</p><ol><li>首先，对方得是一个成年人</li><li>另外，对方也得有逻辑</li><li>关系应该不能太差，保证大家在同频</li></ol><p>做一个过于较真的程序员，可能在现实世界是活不好的，好在现在的我应该不是那样的。</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>其实更多的，这里只的是存储。<br>你写了很多业务逻辑，一定会产生数据，这些数据，需要存储，所以有了数据库。<br>我第一次接触数据库应该12年前，数据库老师在讲台讲了好多mysql的各种表结构，信息都记不太清了，如果我重新去讲，我可能会用 excel 来讲，深入浅出，清晰易懂。<br>我一直觉得，云原生的背景下，Google Spreadsheet （Google 的 Excel）有了一切的读写 API，其实是人人都是工程师的年代了。<br>只要你懂业务，懂逻辑，其实学习什么语言并不重要。<br>好多其他行业的人会和我聊天的时候，说觉得程序员的行业很酷炫，说自己也想写程序，问我要从什么语言学起。<br>每次我都不太知道该怎么去回答，因为对于一个希望用程序去解决问题的人来说，语言完全不重要，Node 还是 Python 还是 Go 还是Java PHP 这些，没啥区别，因为你根本不需要理解什么是 I/O 什么是调度什么是脚本语言什么是解释器什么是线程（大学的那些概念真的劝退了好多人，但是这些基础课程很重要，这个是后话了）。你只要理解你自己的逻辑，拆分要解决的问题，然后写出来，画流程图都行，说清楚了，用 Excel 把数据存储并可视化起来，其实就够了。更何况，Excel 都能编程。<br><strong>了解太多的时候，反而让你的开始变得困难</strong>。</p><h2 id="关于边界"><a href="#关于边界" class="headerlink" title="关于边界"></a>关于边界</h2><p>最开始提到边界，其实是从写程序开始的。每个程序的函数定义很重要。 API 和 SDK 是能连接一切的，程序一定要学会解耦和模块化，一个什么都能做的函数，大概率永远是用bug的，因为过于复杂。<br>而无数个模块化、解耦的函数的组合，每个程序只做自己的事情，通过接口进行互相调用，才能绘画出优美流程的代码。<br><strong>函数的边界很重要</strong>。  </p><p>后来自己做公司做产品的时候，逐渐意识到公司的资源紧缺，对于创业公司唯一能做的事情，就是聚焦在一个点，把这个模块打穿打透。但是通常客户需要的是一个完整的解决方案，单点永远满足不了客户的需求，所以就用 API 去连接，和其他产品一起去整合一个完整的解决方案。想和其他产品连接，首先自己要足够开放，自己要有足够多的 API。<br>我经常骄傲的说，我们公司是所有 SCRM 厂商中，开放最多 API 和 SDK 的公司，当然，这可能也和我做了5年开源项目的背景有关系。<br><strong>产品的边界很重要</strong>。  </p><p>再后来，一次和合作伙伴的对接，他的一段话更触动了我。他说他们不和另外一家公司合作，是因为那家公司也做了这个合作伙伴类似的功能，自己怎么能和竞品合作呢。<br>我忽然意识到，学会和合作伙伴交朋友很重要，我们需要安全感的前提，要给对方安全感。我们要明确，哪些是我的，我一定会死磕到底，哪些是别人的，我们一定不碰。<br><strong>有边界的合作，才是双赢，才能长久</strong>。</p><h2 id="关于-SaaS"><a href="#关于-SaaS" class="headerlink" title="关于 SaaS"></a>关于 SaaS</h2><p>过去一年，亲身经历了行业最头部的客户之后，我越来越坚信：  </p><h3 id="SaaS-本质上卖的是最佳实践"><a href="#SaaS-本质上卖的是最佳实践" class="headerlink" title="SaaS 本质上卖的是最佳实践"></a>SaaS 本质上卖的是最佳实践</h3><p>当你越了解一个行业的时候，你约知道如何用工具让这个行业提升效率。反过来，当你越了解如何让工具为这个行业提升效率的时候，你会越了解这个行业。<br>当一个 SaaS 产品能够把业务的方法论，业务的最佳实践抽象出来，做成一个开箱即用的工具包的时候，这个产品才有了真正的壁垒。<br>当一个 SaaS 产品能反向指导客户的业务的时候，这个产品才有了生命。</p><h3 id="SaaS其实卖的是服务，而不是软件"><a href="#SaaS其实卖的是服务，而不是软件" class="headerlink" title="SaaS其实卖的是服务，而不是软件"></a>SaaS其实卖的是服务，而不是软件</h3><p>在SaaS 里面，第二个 S 代表的 Service 在很多时候比第一个 S 代表的 Software 更有价值，也更能卖出溢价。<br>因为所有人都是懒的，没有人喜欢下场动手做一个复杂的东西，更何况这个人可能还什么都不懂，可能都不知道，就算下场能做什么。<br>这也是为什么，咨询永远比服务贵，服务永远比工具贵。<br>之前神策创始人桑文峰说过的一段话，我深以为然：</p><blockquote><p>能用服务去解决的问题，就不要用咨询去解决，能用产品去解决的问题，就不要用服务去解决。  </p></blockquote><h3 id="SaaS-要追求尽可能的标准化"><a href="#SaaS-要追求尽可能的标准化" class="headerlink" title="SaaS 要追求尽可能的标准化"></a>SaaS 要追求尽可能的标准化</h3><p>上面提到的咨询、服务到产品，其实就是把一个复杂问题，一层一层拆解，标准化的过程。<br>当咨询做到标准化的时候，昂贵的咨询师的服务，就可以堆普通的人力去解决了。<br>当服务做到标准化的时候，机器就可以替换人力成本了。  </p><p>机器永远比人好管理。她不会闹情绪，不会离职。<br>不够用了，我只要扩容就可以了。<br>稳定性不够了，只要准备足够多的机器做灾备，总能达到更多的9。<br>但是人不一样，人有极限，每个个体都有自己的个性。<br><strong>这是人讨厌的地方，也是人有魅力的地方</strong>。这是后话了。  </p><h3 id="SaaS-要警惕陷入大客户定制化陷阱"><a href="#SaaS-要警惕陷入大客户定制化陷阱" class="headerlink" title="SaaS 要警惕陷入大客户定制化陷阱"></a>SaaS 要警惕陷入大客户定制化陷阱</h3><p>服务大客户的过程中，如何能始终保持产品的边界，哪些地方要坚守好自己的底线，一定不要碰。<br>在大部分时候，知道自己不碰什么比知道自己要做什么重要的多。  </p><p>我有非常丰富的外包和项目经验，正因为如此，我一定不会让我的公司因为服务的都是大客户，逐渐沦落成为一家项目公司。<br>这是我的底线。<br>2017年，潇洒姐的《按自己的意愿过一生》里面就是这样评论项目的：  </p><blockquote><p>这种接活做活，通宵达旦，上一单与下一单充满投机性， 产品以客户主观意志为标准，生产方式毫无规律，出卖单位时间劳动力在慢车道上发展，不存在幂次法则的突破口，其实谈不上是真正的创业，充其量只能算作有雇佣关系的自由职业者或者手艺人或者包工头。</p></blockquote><p>做产品的人希望通过创造去改变现实世界不美好的东西，而不是一个披着自由职业者外衣的手艺人或包工头。<br>是的，我做过太多年的包工头了。<br>我自认为，我应该是所有做大客户的 SaaS 公司里面，项目边界做的最好的一点。  </p><p>API 和 SDK 是可以连接一切的，这个我在前面的边界话题里也讨论过了。  </p><h2 id="关于团队"><a href="#关于团队" class="headerlink" title="关于团队"></a>关于团队</h2><blockquote><p>希望 2021 年是你的翻盘年，后面不再那么丧了<br>–高原</p></blockquote><p>我和我们 CTO 高原说我这两天要思考一下，写一些文章来总结过去和明年计划，他回复了我上面的话。  </p><p>收到的时候，是有些眼眶湿润的。<br>从创业到现在，我们一直在面临各种各样的不确定性，在死亡线周边徘徊。最开始找不到方向，然后是找不到 PMF，然后是找到了却没钱扩张要裁人，然后是扩张找不到候选人。。。<br>我会情绪失控，我会焦虑，我会痛苦。但是高原似乎总是情绪稳定的一方，面临所有的不确定性，都是淡定接受的状态。<br>团队里能有人接受你的暴躁和冲动，同时又能在你迷茫的时候接受你的迷茫，做好手里的事情，等待你恢复，这是多么幸运的事情。  </p><p><img src="/img/2022/the-last-day-of-2021/gaoyuan.png" alt="gaoyuan"></p><p>2019年和2020年，是我从一个热血青年成长为一个相对成熟的创业者的关键性的两年，感谢合伙人的陪伴。</p><p>创业越久，越发觉，人比事重要，当然，没有事，也没有人。<br>作为一个理性的工科女，我很享受和机器的协作，但是人的不确定性和创业的不确定性一样，会更有魅力。<br><strong>人是有创造性的，所有不确定性、失控带来的价值就是创造。这是确定性的、可控的机器永远带不来的事情</strong>。<br>永远要接受硬币的正反面。<br>我记得我和我们的 CRO 伯昊聊起ego的话题，有一次我说他ego太大，他崩溃了。后来他问我，他 ego 是不是真的很大。<br>我说 ego 大，是好事，如果 ego 不大，是不可能像他这样有激情，不知疲倦的去推动事情的；如果不大，是不可能陪伴句子熬过最难熬的岁月，相信自己是救世主能拯救句子于水火；如果不大，更不可能接受动不动睡在公司的行军床，靠团队上班的喧嚣声叫醒。<br>正是因为有 ego，有梦想，才敢于尝试一些不可能的事情，然后在一堆不可能的事情中，创造几个奇迹。<br>当然，一个人的能力要和野心配的上，同时要学会经常性的反思和总结，不怕犯错，在犯错中成长，是一个优秀的人和优秀的公司的必修课。<br>一路走来，肉眼可见的看着句子互动在成为一个伟大的公司的路上，回头看都是感动，经历时无不惊悚，还是感谢今天，我拥有了一个自认为自己无所不能的、年轻有激情、而又互补的团队。  </p><h2 id="要专业，而不是态度"><a href="#要专业，而不是态度" class="headerlink" title="要专业，而不是态度"></a>要专业，而不是态度</h2><p>这个话题其实是我临时加进来的。<br>我们交付部门的负责人玉晓和我说，佳芮，销售同学说我越来越像你一样咄咄逼人了。  </p><p>交付部门的负责人应该是现在团队里，除了我和高原之外在句子呆的最久的人了。<br>最开始她是 UI 的岗，后来在无数次产品会中，我发现她有很清晰的逻辑和极强的责任感，虽然她对产品和技术完全不懂，后来我还是把一个相对比较重要的项目交给她，让她做了项目经理。<br>那次项目做的非常漂亮，后来逐渐的，我会让她去和一些大客户沟通，发现在甚至产品经理都没办法搞定的客户，她都能很完美的解决好。<br>直到有一次，她竟然在和我说docker，说vnc，说了一堆我觉得她不应该知道的技术名词。<br>后来团队扩张，我让她做了交付部门的负责人。  </p><p>前几天，我们一个大客户使用产品一直说我们产品不稳定，客户说一定要让技术来，销售的同学把玉晓带过去，说这是我们的技术老师。<br>现场面对客户的咄咄逼人，玉晓不卑不亢的说清楚了很多问题不是产品bug，而是客户使用不当，以及客户不合理的预期。<br>说清楚以后，这个咄咄逼人的客户，竟然开始在群里说话变得老实起来。<br>其实销售当时手里是捏着一把汗的，明明应该跪舔金主爸爸，怎么可以上来就呵斥金主爸爸呢？<br>结果呵斥的结果，竟然比跪舔的结果好。  </p><p><strong>其实专业，比态度更重要</strong>。  </p><p>销售之所以态度好却解决不了问题，是因为对产品的了解不够，只顾哄客户，却失了专业。<br>客户不是你的男女朋友，客户花钱是解决问题的，不是来寻求存在感和开心的。谁给他解决了问题，谁才值得尊敬。<br>很多时候，专业、严肃认真的讲清楚道理，很容易被误认为成咄咄逼人。<br>但是又怎样呢？  </p><p><strong>专业，永远比态度更重要</strong>。  </p><h2 id="关于感情"><a href="#关于感情" class="headerlink" title="关于感情"></a>关于感情</h2><blockquote><p>我觉得我20岁的时候，很多时候谈恋爱都是凑合的，因为小的时候你是空的，你不知道自己要什么。但是30岁以后，如果要再找一个男朋友，一定是锦上添花的，如果说但凡有一点让我不舒服的，可能就算了<br>–王子文</p></blockquote><p>我很少看综艺节目，忘了什么时候刷到王子文的恋爱观，记忆深刻。<br>不知道从什么时候开始，我好像也不太担心自己谈不到恋爱了。我也不太担心自己嫁不去出去的事情了。<br>如果能一直在一起，结婚和不结婚，又有什么区别呢？<br>不过不能一直在一起，结了婚不是也要离婚？<br>当然，我依然十分向往婚姻，甚至比过去的任何一个时刻更渴望小孩子。我一直都喜欢小孩，很喜欢。  </p><p>年轻的时候，总是觉得好多女生好厉害，为什么能做到没有空窗期，30岁这一年我发现，想让自己没有空窗期其实是一件不那么苦难的事情： 别和自己过不去就好。<br>我承认我是个工作狂，抛出工作的时间，我是非常需要陪伴的，所以仅仅为了有人陪而谈了一个又一个恋爱，那些快速结束的恋情让我越来越明白，什么是我需要的感情。更感谢在感情里想不明白事情的痛苦日子里，让我渐渐明白如何去爱一个人。<br>我也不知道从什么时候开始，我不太敢承认恋爱了。创业本身已经是一个极度不确定的事情了，我的生活在过去5年一直充斥着巨大的不确定性，我自己都不敢对未来的不确定性说yes，如何能给另外一个人确定性呢，又如何能让另外一个人陪我面对未来的不确定性呢。  </p><p>我承认，很多时候，创业让我变得越来越像个男生。<br>感谢这几年在残酷创业环境下给了我很多男性视角，从男性视角看待问题的方式，我变得越来越清醒。<br>关于恋爱，我觉得，活在当下，享受当下的美好，就足够了。<br>相信永恒的爱，但是不要考验人性。<br>我依然相信承诺，我依然期待承诺。我知道承诺不代表未来的兑现，但是起码在这一刻，它代表了我们之间最纯粹的情感。  </p><h2 id="关于健康"><a href="#关于健康" class="headerlink" title="关于健康"></a>关于健康</h2><p>文章的开头，汤唯的那段话的最后说：</p><blockquote><p>更重要的是照顾好自己的身体。留得青山在，不怕没柴烧。  </p></blockquote><p>没生过病之前，永远觉得自己是钢铁战士，没有什么事情不是睡一觉就解决不了的，如果有，就睡两觉。<br>2019年和2020年，我生了一场小病，终于在2021年的年中治好了。<br>2021年一整年，我经常性的感觉心悸，在一次凌晨之后结束的会议后，我忽然躺在床上喘不上气，从零点折腾到凌晨3点，忽然意识到了身体的重要性。  </p><p>“创业，最后拼的是体力”。我一直特别坚信一句话。<br>三十岁之前，我对这句话的理解，就是我只要咬住牙，坚持住，就能做完。咬住牙，就有体力。而实际上，我也是通过这个体力在很多关键性的事情上获得了我想要的收获。<br>三十岁这年，在那个喘不上气的深夜，我忽然明白，所有的精神力量，在肉体病痛面前都是如此渺小，咬住牙一次，却不能永远咬住牙。幸运逃过一次，却不能永远幸运。<br>在做了无数次的心理建设后，我做了非常全面的全身体检。<br>万幸，除了贫血导致的部分血常规不正常外，其他一切正常。<br>万幸，今天只是亚健康。<br>2022年，是该把保持身体健康的优先级，提上来了。  </p><p>这么说来，2022 年我的愿望竟然非常简单，只有一个：<strong>身体健康</strong><br>为了实现身体健康，我会加强锻炼，估计今年我游泳会多一些吧，最近越发觉得游泳特别容易进入心流。当头部在水中的时候，我会感觉整个世界都是我的。<br>有意思的是，这应该是三十年来，第一次锻炼不再为了变瘦或者变美，仅仅只是为了健康，为了充沛的精力。<br>如果把身体健康作为 OKR 中的 Objectives，那我猜测 KR 应该是：</p><ul><li>像 2015 年跑马拉松一样，毫无压力的跑完 5 公里</li><li>能持续一个月，无论什么工作强度，都不会出现呼吸困难</li><li>能像过去一样，无论什么场合什么情况，想睡就能睡的好，一觉到天亮。</li></ul><p>以上，就是我的 2021 年。<br>我无比憧憬我的 2022 年。  </p><blockquote><p>“30岁以后，喜欢的东西依旧喜欢，但可以不拥有。害怕的东西依旧害怕，但可以面对。”  </p></blockquote><p>29岁那年，一个朋友和我说到30岁，别怕，来了就好了。<br>未来的很多事情，就和29岁担忧 30 岁一样，别怕，来了就好了。  </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 趁早效率手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交裂变、私域运营…爆发式增长的SCRM行业——专访句子互动创始人李佳芮</title>
      <link href="/interview/2021-12-25-product-relativity-interview.html"/>
      <url>/interview/2021-12-25-product-relativity-interview.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为播客节目《产品相对论》对句子互动CEO李佳芮的专访逐字稿，阐述了句子互动视角下的SCRM行业、基于微信生态的企业营销趋势、企业数字化转型、私域流量运营等。</p></blockquote><p>播客内容： <a href="https://www.listennotes.com/podcasts/%E4%BA%A7%E5%93%81%E7%9B%B8%E5%AF%B9%E8%AE%BA/%E7%A4%BE%E4%BA%A4%E8%A3%82%E5%8F%98%E7%A7%81%E5%9F%9F%E8%BF%90%E8%90%A5%E7%88%86%E5%8F%91%E5%BC%8F%E5%A2%9E%E9%95%BF%E7%9A%84scrm%E8%A1%8C%E4%B8%9A%E4%B8%93%E8%AE%BF%E7%A6%8F%E5%B8%83%E6%96%AFu30%E5%8F%A5%E5%AD%90-gicOX31FUlQ/" target="_blank" rel="noopener">社交裂变、私域运营…爆发式增长的SCRM行业——专访福布斯U30、句子互动创始人李佳芮</a></p><h2 id="KeyPoint"><a href="#KeyPoint" class="headerlink" title="KeyPoint"></a>KeyPoint</h2><ul><li>SCRM本质上更偏营销，目标是为了触达客户；CRM更偏ToB场景，关注成单周期、业务流转；</li><li>微信已经逐渐取代了传统的电话短信，成为新一代的运营商，过去所有基于电话短信的业务都值得在微信上重新做一遍；</li><li>SCRM火的一个原因，是因为互联网流量红利已过，线下流量反而更便宜；</li><li>企业只会为增量买单，能给公司带来收入的产品一定值钱，因为它是增量，但和收入无关的服务，1%他们都不愿意给SaaS公司；</li><li>企微生态会在5年之后达到一个终局，大概会有3-5家纯做企微生态的上市公司；</li><li>SaaS本质上卖的是最佳实践，你需要能带着方法论入场，告诉你的客户这东西怎么玩，你才会有机会做成。</li></ul><h2 id="播客逐字稿"><a href="#播客逐字稿" class="headerlink" title="播客逐字稿"></a>播客逐字稿</h2><p><strong>DJ</strong><br>大家好，欢迎来到产品相对论，这是中文首档冲突类商业对话节目，我是DJ，一个逐渐靠近“万恶资本主义”的品牌人。</p><p><strong>AI君</strong><br>大家好，我是 AI 君，以前是一个大厂产品经理，现在是一位自由职业者。</p><p><strong>DJ</strong><br>今天我们要聊一个非常特殊的行业，可能对大家来说了解并不多，但却是一个风头正热的行业——SCRM 。为了聊这个很专业的话题，我们也很荣幸邀请到了这个行业内的一家头部公司——句子互动的 CEO 李佳芮做客我们这一期播客。佳芮可以和大家打个招呼，然后简单介绍一下自己。</p><p><strong>李佳芮</strong><br>Hello 大家好，我是李佳芮，句子互动的创始人。句子互动是一家基于微信生态，为企业提供智能营销服务的创业公司。我们公司在SCRM行业服务了许多头部企业，比如所有大家能想到头部的教育公司：猿辅导、喜马拉雅、一起作业、核桃编程等等；以及许多新消费品的品牌：比如babycare、Wonderlab 、欧莱雅，还有和睦家、美团点评 、58 同城等等。我们主服务的客户都是头部客户。我自己是技术背景，也是一个开源项目的联合作者，这个项目在GitHub上有超过 1 万 Stars，叫 Wechaty 。我去年也刚刚出版了我的中文首本对话式应用交互图书《Chatbot从0到1》，主要是帮助想了解聊天机器人行业的从业者，知道如何从 0 到 1 搭建一个聊天机器人。</p><p><strong>DJ</strong><br>佳芮非常年轻同时也很低调，她其实是今年的福布斯 30 Under 30，中关村 U30 （30 位 30 岁以下的社会精英），可以说是一个外表温柔，但内心强大的创始人。<br>我在烯牛上看到一组数据：在企业服务 SaaS 领域， 有31 家养老的 SaaS 企业、餐饮有 43 家、金融 58 家、新零售 64 家，电商 60 家。而CRM 这个行业有超过250 家、SCRM有 38 家，目前来说 SCRM 也是在SaaS行业里新崛起的一个赛道。据天眼查显示，今年（2021）的 1 月到 7 月，新注册的就有 19 家SCRM 公司，并且有 12 起的融资事件。另外据易观的市场预测指出，2019年 CRM 市场规模是 64 亿，并且年增长率超过15%。近期资本市场对CRM 及SCRM行业预测，整个市场会达到千亿的规模。所以说SCRM行业现在十分火热，比如大家熟悉的社交裂变、私域运营等等这些词汇，其实都跟这个行业息息相关。请佳芮站在从业者的角度跟大家简单说说什么是CRM？什么是SCRM？为什么最近SCRM这么火？</p><p><strong>李佳芮</strong><br>刚刚你说到有250家 CRM 公司，正好前两天和朋友聊天聊到，现在北京随便找一家 To B 的公司都号称自己是 SCRM / CRM的公司。这个数据是你在烯牛数据上看到的，但实际上，从行业从业者的视角来看，我觉得这个数据是被远远低估的。我们判断全国范围内可能有上千家企业，非常非常多。  </p><p>那么CRM和SCRM是什么？在我的理解里， CRM 本质上就是一个大的数据库。全球最大的做 CRM 的公司肯定是Salesforce ，我刚做这个行业的时候，为了向行业的先驱者、最厉害的公司学习，于是也买了 Salesforce 的产品，其实还蛮贵的，当时花了几万块买了几个账号，但体验并不是很好。因为其实 Salesforce 压根不是为我这种小公司设计的，但是当时我不懂。  </p><p>作为一家 ToB 的公司，当你要管理你的销售团队的时候，你一定是需要 CRM 的。我刚才也讲到 CRM 本质上是一个数据库，相当于要将客户信息、联系人信息、成单的数据等都录进去。在过去，大家都使用Excel ，所以现在很多轻量级的 CRM 的工具，你会发现它就长得跟 Excel 一样，并且它可能比Salesforce更好用。因为Salesforce主要是面向类似亚马逊这样的大型公司，所以开放了大量的接口和能力，相对也会比较难用。<strong>一个产品，面向越大的公司，它的业务复杂度就越高，就会越来越难用</strong>。如果从产品的角度来讲 ToB 和 ToC 产品的话，ToC一定是简单易用、容易上手的。坦率讲，客户是千人级大企业的一个 SaaS 公司，如果你做成轻量级的 SaaS 工具，肯定不能解决核心的问题。  </p><p>聊回来，我觉得 CRM 本质上就是一个数据库，能够把所有的信息录入并做到增删改查，就是我们能够查到所有的信息，对应地给出一些数据的指标。我对我们现在的团队讲，如果没有数据分析，没有一个评估指标，这件事就是白做，这点对于销售来说非常重要。比如说作为销售：我的 KPI 到底是多少？我这个月要做到多少？我预计要做到多少、完成度是多少、需要达到的进度是什么？这些事都是重度的依赖 CRM 去解决的。  </p><p>那 SCRM 其实就是在CRM 前面加了一个 S （Social），本质就是增加了一个社交关系链。现在网上关于 SCRM 解释非常多，从我的角度去理解和区别 CRM 和 SCRM 的话，CRM大部分应用场景都是 To B 的（B to B to B ），To B 的企业会用到 CRM 去管理销售，比如最典型的销售易、纷享销客这类的产品，一定是CRM，包括Salesforce也是。那 SCRM更多的应用场景是 To C (B to B to C )，我是做 SCRM的公司，但我的客户是做 To C 的。  </p><p><strong>DJ</strong><br>相当于在帮他做 To C 的感觉。</p><p><strong>李佳芮</strong><br>是的。本质上你会发现 SCRM 更偏营销，SCRM公司的目标是为了帮客户去触达他的 C 端用户。  </p><p>那 To B 是什么场景？ 当我的客户是 To B 的时候，客户会更关注整个成单周期、整个业务的流转。因为对于 To B 的企业，做一个决策基本上不是一个人能决定的，一定是有很多人一起。从最开始的业务负责人到 leader ，还会涉及到财务法务，可能都要参与决策。但 To C 的决策不一样，作为一个消费者可以直接进行购买，只要你的产品足够吸引人，我就可能冲动消费。所以在我看来 CRM 和 SCRM很重要的区别是看它做 To B 还是 To C 。  </p><p>其实我觉得当你做 To B 的时候，Social 没有那么重要。当然有人会说，当我要做大客户时，是需要Social 来让朋友介绍客户的。但我觉得裂变的场景更多还是发生在 To C 的场景，当客单价在 1 万以下时，消费者是可以冲动消费的。通常情况下，我们服务的客户除了在线教育行业，客单价都是千元以下的。我们会发现触达好友做的最好的是欧莱雅平价的化妆品，还有一些行业头部品牌：Babycare、Wonderlab等，他们的客单价都在千元以下，通过营销裂变的方式完成转化。  </p><p>那本质上我要做的事情是什么呢？就是让企业和消费者有一个更好的连接和沟通。我个人过去 8 年一直基于微信生态为企业提供营销和技术的服务，基于微信生态服务了非常多头部企业。我的判断是<strong>微信已经逐渐代替了传统的电话短信，成为新一代的运营商，过去所有基于电话短信的业务都值得在微信上重做一遍</strong>。  </p><p>我觉得这个机会是巨大的，这也是为什么今天大家聊的 SCRM 都会说和微信绑定，除了说微信是一个非常重要的一个社交软件之外，本质上它是一个能直接甚至唯一触达用户的基础设施。我们经常说自己是“微信生态新基建”，就比如现在我基本上就不接电话了。因为做公司久了，你会接到各个行业各种奇怪的广告，所以接的电话中90%都是骚扰电话，最开始我还会耐心的和电话那头的人说你们公司打过了，别打了，后来我发现我真是想多余了，都是机器人，索性就不接电话了。我会觉得，如果你在微信找不到我，那么你在电话上也不需要找到我，当然我是比较极端的类型。所以我觉得微信代替了传统电话短信，通过微信去触达能够非常好地提升转化率，尤其是对于消费（To C ）的品牌来讲。  </p><p>那为什么现在SCRM 这么火？其实大家都能看到，线上流量变得越来越贵。在互联网流量红利的时代，线上的流量巨便宜，大家只要薅羊毛就可以了，但现在反而线下的流量更便宜。比如说一个 App 拉新， 线上拉新基本上能到客单价三五百，反而一个 App 的线下拉新，可能就十几块钱。  </p><p><strong>DJ</strong><br>我听说京东客单价已经好几千了。</p><p><strong>李佳芮</strong>：<br>好几千的成本可能是金融相关的app，普通的APP拉新成本基本上在三五百。但如果做线下拉新，可能一个用户的成本才十几块。比如说在小区门口送鸡蛋，尤其在二三线城市， 新用户第一单用 1 毛钱买一斤鸡蛋，消费者很开心就能接受，就特别乐意下载。  </p><p><strong>AI君</strong><br>对，类似社区团购的线下推广。  </p><p><strong>李佳芮</strong><br>所以你会发现流量的一个变化就是线上流量巨贵，基本上是之前百倍价格的变化。因为以前获得一个新客户成本才不到五块，然而现在公域流量（线上流量我们称之为公域流量）越来越贵。获取流量的成本极高，商家是重度依赖流量去完成转化去赚钱的， 那他一定会去找更便宜的流量。什么流量最便宜呢？当这个用户成为我的私域流量的时候，基本上没有广告成本了，可以随时免费触达。比如说在每次在淘宝上做大促，无论新老用户，商家在触达用户的过程中必须要花广告费，包括百度投信息流广告等等。但是当商家将用户引到私域里，流量成本就会极低，这也是SCRM 这么火的原因。  </p><p>本质上是成本结构和流量的一个变化，现在各行各业都在“内卷”，任何一个领域的竞品都巨多，商家必须要找到一个降低成本的方法，不然就活不下去。这些是我目前对流量的理解。  </p><p><strong>DJ</strong><br>像你刚刚说的所有的商业行为都值得在 IM 上重新做一遍，我觉得这是一个特别牛的一个洞察。在我看来，微信就相当于一个基础设施。而且现在不光是社交关系，人与人之间的连接都可以在微信上实现，微信的用户几乎已经覆盖了所有人，除了极个别的老人小孩。我了解到在国外除了Salesforce，还有一家除了鼻祖型 SaaS （咨询）公司叫 Gartner，<strong>Gartner定义 SCRM 是一种业务战略，通过社交互动来推动业务流程</strong>；<strong>Salesforce 对 SCRM 的定义是通过互动产生营销洞察，并且是能支持社交媒体和传统媒体的 CRM 平台</strong>。但是像你刚提到，国内对于 SCRM 的定义非常不统一，比如有定义营销自动化、私域流量运营、企业微信 CRM、数字营销中台等等。但是关于SCRM有几个关键的点，大家是比较认可的：<br><strong>第一个是多渠道的链接并获取用户数据</strong>；<br><strong>第二个是自动化的推进业务流程</strong>；<br><strong>第三个是实时的数据分享</strong>。<br>其实SCRM核心还是放在数据上，就像你刚才讲的本质上SCRM是基于社交关系的数据。  </p><p>在中国的社交领域，微信现在已经是一个基础设施了，同时你刚才也说现在可能有上千家企业都涌入SCRM 这个赛道了。那么句子互动为什么能够成为这个行业的头部公司？你们有什么优势？以及句子互动是如何能够获取到像美团、欧莱雅这些头部公司的青睐的？  </p><p><strong>李佳芮</strong><br>简单来讲就是句子“熬得住”。最近我还蛮有底气说句子应该可以是在 SCRM 行业做得最久的一家公司之一。做 SaaS 行业包括做 To B 都很需要消耗很多年去积累经验的，假设我现在是一个刚做这个行业的人，对这个行业和客户的需求肯定会了解的不够多，更多是从外围去了解客户的需求。但我个人是在微信平台有8年的经验，并且经历了微信生态的一个完整的闭环 —- 公众号，我见证了公众号红利期的开启到最后消失的全过程。现在基本上没有人说是拿着公众号做业务了，但当年很多人都在做公众号业务，包括我也是从那时开始做的，所以我相对来说还比较了解微信生态。我从 2013 年开始做公众号，做到 2016 年左右我就觉得公众号差不多了，我可能没有太多机会了。从2016年我开始做开源项目，其实 2016 年就有微信的 SCRM 包括好友裂变等产品了。我从2017年辞职，全职做微信生态，这么多年我一直在持续地做微信生态，做 ToB，做技术服务。  </p><p>今天我可以非常自信地说句子应该是在企微生态私域生态发展最快、服务最多头部企业的企微第三方工具服务商？同行的竞品，就算他们的体量比我们大，整体的收入比我们高，但是论服务最头部的企业的数量，我们一定是现在行业里面最多的，我们服务深度相对来说也是最深的。  </p><p>为什么我们能做到这些？就是因为句子“熬得足够久”。句子应该是最早布局企微的几家公司之一了。在 2019 年底 2020 年初刚有疫情的时候，我们就在全力做企微。因为 2019 年底 2020 年初企微举行了发布会，开放了非常多能力，当时我的判断企微最强大的功能就是连接了 14 亿的微信用户。  </p><p>企微在 2020 年最大的转变，就是能够跟微信打通，并且可以通过外部拉群的人数逐渐变多，我最开始关注的时候只有10个，今天已经能拉 500 人群了。和微信的连通越来越开放，包括企微开放朋友圈、群发等等。企微开放这些能力，使所有的微信自动化营销与企业结合，用微信做一对一的沟通成为一个官方合法渠道。在过去微信的时代，大家有很多不合规的营销手段去运营。但是今天有企微，可以用非常合规的手段触达客户，所以这个机会是巨大无比的。句子其实是最早在2020 年初全力转型做企微，其实那个之后很多投资人、企业都不太看好这个赛道。我们也是行业第一个做整合方案的公司，为客户提供营销方案比如外呼加好友，全链路做公域到私域的转化等。我们公司会把整个案例都做好以后，交付给客户，很多公司也会去抄袭我们的案例。2020 年的夏天，我们为babycare、一起作业等提供了整体解决方案。  </p><p>我经常开玩笑的总结我们能做这么多大客户的原因：一个原因就是我们熬得足够久，另一个原因是我们是全行业最早做整体方案的公司。  </p><p>我们对这个行业有Know-How，我们和大客户聊的时候，客户知道你是懂私域的，你知道怎么做增长，客户就会放心用你的工具。但是只给大企业提供一个特别薄的工具，其实是解决不了问题的。当企业管理的人少时，用轻量级的工具完全没问题，但当你服务上千上万甚至上十万人的企业的时候，企业会有非常重的权限管理。比如说我们有一些合作伙伴，他们的企业没有权限管理的时候，对于他们来说工具其实功能差不多。但你会发现权限管理在上千人企业会非常重要，就类似这些产品的小点，就不一一列举了。所以句子核心的优势是我们真的懂这个行业，还有非常多成功的案例。  </p><p>再进一步，句子应该也是行业内最有技术基因的，因为我个人也是技术的背景，在GitHub上也发了很多代码，我们所有的解决方案都是通过技术驱动的。坦率来讲，做 SaaS 产品可能都没有那么高的壁垒，但是我们过去有五年的积累，包括技术的产品、框架的积累，别人去复刻我们的产品是需要一定的时间周期的，我们确实也是全行业最有技术基因的公司。我最早做这件事其实是想做聊天机器人，但因为当时行业不太成熟，机会和时间节点也没到，我认为如果只做聊天机器人的话，句子可能就变成一家项目制公司，所以我们就没有只做聊天机器人。但是我们一直会在产品里面嵌入一些智能化的手段，以前我做分享，经常会聊说AI和ML(Machine Learning)，如果企业说自己做AI的就都是假的，说自己做Machine Learning才是真的做人工智能的。我作为微软的MVP之前和微软的 CTO韦青 ，在一次线下座谈也聊过这些。  </p><p><strong>DJ</strong><br>解释一下，微软的 MVP，它的全称叫最具价值专家是吧。  </p><p><strong>李佳芮</strong><br>对，叫 Most Valuable Professional ，微软最具价值专家。  </p><p><strong>DJ</strong><br>当时佳芮被评为微软的 AI MVP 的时候，其实AI 领域中国只有四个人 ，所以真的很强。  </p><p><strong>AI君</strong><br>刚才说到您在微信这个生态深耕了 8 年，其实还挺好奇的，因为微信其实在这几年的变化也挺大的，那是不是微信的变化对于您产品的更迭是有很多影响的。比如说最开始做聊天机器人，然后到后面可能是根据微信的一些变化去再做调整。  </p><p><strong>李佳芮</strong><br>对，其实我判断其实这里面有一个“变”，有一个“不变”。其实在过去八年，最开始前三年我也没有那么深的理解。我在每次面试候选人的时候都会这样说：本质不变的是微信代替传统电话短信，成为新一代的运营商，微信是一个基础设施，这个其实是一直不变的。我核心在做整个的转化链路，要做的就是用户触达。当然不能发垃圾短信，运营商为什么这么惨，大家都不怎么看短信（就是因为太多垃圾短信）。那微信相对而言比较干净，不会发大量垃圾消息，所以我能够什么时候给你推什么消息，这是非常重要的一件事情。这个后面再详细地聊。  </p><p>那再说回来，这是不变的事情。那变的其实就上面的产品形态，从我的角度产品的变化其实是三个阶段。  </p><p><strong>第一个阶段</strong>，2015年，我做外包项目。在15 年 2 月份成立的公司全称叫桔子互动。当时桔子做了很多的大客户《然后从桔子互动将大客户承接过来了这家公司。其实句子这个名字是一个笔误，当时把“桔子”一词打错成了“句子”，大家一致觉得“句子”不错，还跟 Chatbot 相关。所以我的新公司就改名叫句子互动。  </p><p>说回来，刚讲到桔子，2015 年成立的时候，当时我们就服务亚马逊、腾讯、新华网，我们是直接和他们签合同的，进了腾讯、亚马逊、新华网的供应商库的，当时我们提供整体社交媒体解决方案，其实就是双微运营，那个时候是微信和微博。今天我对解决方案理解和当时解决方案也不太一样。当时我会给客户提供整体的类似于4A广告公司的方案，比如一个双微运营的营销解决方案。从工具到代运营，工具定制化开发，文章定制化的给客户写，还得负责阅读量和粉丝。所以其实2015年我最早经历的阶段是项目制的。因为我做了太久的项目，导致我现在对项目深恶痛绝，我现在跟产品同学开产品会的时候，我经常会强调我们是一家产品公司，我们不是外包公司，不是项目制公司。如果我做外包公司，我一定比现在赚得多，也不需要搞一个这么大的团队。我太知道怎么去做外包，怎么去搞客户，怎么去做交付了，但是外包是没有积累的。  </p><p><strong>第二个阶段</strong>我就想做一个工具。因为我的判断其实机器替代人是一个大的趋势，尤其是我这种技术出身，写过很多年代码的人。我对效率有着非常高的追求，并且期待机器能解决一切问题的。在第二个阶段做工具的过程会发现人工智能、聊天机器人没有办法做成通用工具，最后只能做成一个项目，这就会又走到我第一阶段的路上，只是从社交媒体运营到了人工智能而已，没什么本质区别。  </p><p><strong>第三个阶段</strong>我在做 SCRM 的公司。我给你提供一整套的解决方案时，而且使用标准化的产品去提供解决方案。这个阶段和我第一个和第二个阶段的经验是息息相关的，如果没有之前做项目和做人工智能的经历的话，可能我的公司不会走成现在的样子。<br>我们现在产品有四大模块：客服中心、数据中心、运营中心和管理中心。不同的模块里边，我们还有不同的场景化的解决方案。不管你是在冷启动阶段，还是规模化运营阶段，抑或是在深度千人千面运营的阶段，我们都有不同的产品包给到你。  </p><p>坦率来讲，我们倒没有说追随着微信的变化在做。这里边是随着我自己对行业理解逐渐深入做的转变，包括对微信生态的理解，对 SaaS 服务的理解以及对客户的理解。我一直在找什么是更适合我的发展的方式，其实创业这么久以来我发现，<strong>没有什么是绝对正确的，适合比正确要重要</strong>。我会发现我这三个阶段其实也是在学习的过程。  </p><p><strong>DJ</strong><br>变与不变。其实你们刚开始做的时候，感觉还没有SCRM这个行业吧。  </p><p><strong>李佳芮</strong><br>有了，没记错的话， Salesforce 应该在 2013 年就提出 SCRM 的概念了。最早大家对 SCRM 定义中的社交关系链洞察是从哪来的呢？微博（在海外叫Twitter、Instagram 和facebook）。在这种背景下要做什么事呢？ Marketing。 你会发现 SCRM 就一定会跟市场相关，进一步说跟营销相关，所以那个时候大家都叫社交媒体。包括我15年成立公司，我会说我提供社交媒体运营服务。那个时候什么叫社交媒体？“双微”，微信加微博。所以整个 SCRM 的行业或者这个词其实是存在很多年了。  </p><p><strong>DJ</strong><br>今年8月份福布斯发布了一个云服务榜单——The Cloud 100，前十中有 3 家是垂类的 SaaS 公司。大家可能很熟悉的一本书叫《创新者的窘境》，这本书讲了很多企业从哪些细分的、不被大企业所关注这种所谓的边缘市场切入，在性能、工作量或者时间这个象限的左下角逐步延伸，最后去颠覆整个市场。在Salesforce之前其实也有 Oracle 这样（服务超大型企业）的公司，Salesforce 的切入点也是从中腰部的企业开始做，最终成为现在 2000 多亿美金（市值）的公司。  </p><p>但是在国内情况可能有点不一样。从句子互动的故事里，我的感受就是句子其实在做的也是类似这样的事情，而且现在一个大趋势是所有的企业在做数字化转型这件事情。我觉得句子做的事情是基于微信来去重构消费者和企业，或者说消费者和品牌之间的这种关系的。就像佳芮刚刚说的直接触达这种关系，咱们句子互动一开始是通过 Chatbot （聊天机器人）去切入的，那有没有去考虑从变与不变的角度，市场的终局可能会是什么样的？就是说句子互动将来会背靠某座大山，还是想要去独立地发展成一个平台？  </p><p><strong>李佳芮</strong><br>刚才聊到，与其说我们从 Chatbot 切入，其实本质上应该是说我们是从触达去切入。包括我说做聊天机器人本质上是去连接企业和消费者之间的关系，帮助客户提升转化率。实际上我一直在解决的问题就是帮助客户提升效率，后来我们会发现企业是愿意为效率买单的。  </p><p>这件事我也是经过了一段时间才认为是可行的。最早我觉得企业更愿意买单的一定是转化率，但后来发现企业会为增量买单。你会发现在整个 SaaS 这个市场里，是一半偏售前，一半偏售后。售后的产品就卖不上价，售前的产品永远有商家买单。  </p><p>帮你提供线索的这种公司一定是最值钱的，因为他直接给你带来的是增量。企业很能算明白账，<strong>为企业提供增量的公司，企业给10%的收入一点不心疼。但作为客服的话，企业有10%的收入，企业给 SaaS 公司那可不行，因为这不是你给企业带来的增量，这是企业自己辛辛苦苦搞来的，1%企业都不愿意（给你）</strong>。<br>最早的时候我就判断我一定要带来增量，这是我的第一个阶段的理解。因为企业最愿意为线索买单、为成交买单、为增长买单。  </p><p>当你服务大企业的时候，纯靠 SaaS 完成增量是不现实的。我和非常多的客户聊过，说最后带来增长 80% 取决于你自己公司提供的产品。虽然今天我的产品可能都没到满分，我觉得可能也就 60 的及格分，但假设我的产品是 100 分，那我也只能给你提供20分的价值，最终你带来增长的一定是自己提供产品的性价比。所以千万不要抱着不切实际的想法，认为SaaS 能帮我解决一切问题。不可能的，我们不是神仙，我们只能说在加速。<br>所以其实坦率讲做增量这件事，后来我意识到企业愿意为增量买单，但是我做不到（完全解决）。我只能做一些辅助，不是决定性的因素，广告才是真正的可以做这些事的因素。  </p><p>所以后来我就往效率上转。<br>原来我对效率提升的认知是应用在客服的场景，尤其是做机器人客服的场景，其实客户的买单意愿不是很高，而且人力在那个时候成本还挺低的。<br>但<strong>今天我们会发现真正要提升的效率，不应该是单独的客服的效率，而是整个企业的运作效率</strong>。<br>这个效率其实是企业愿意买单的。  </p><p>对这件事的认知我是有一定的变化的：<strong>你提升的是整个企业的运作效率，不是单点的针对一个人的效率</strong>。当我针对一个人的效率提升的时候，企业的付费意愿不是很高。我现在要做到的是从增长到全链路的效率提升，那企业是愿意买单的。而且我们会发现不同公司为效率买单的意愿也不太一样。作为一个几十人的初创公司，其实他对效率的诉求没那么高，因为他们本来的效率可能就挺高。但对于千人级别的公司来讲，就一定要做效率提升这个事。<br>尤其企业的私域用户量不同时，假设一家企业有 10 万以下的私域用户，说实话你不需要用我们的工具。当你的私域用户量没那么大的时候，句子不会给你带来很明显的提升。但假设你的企业有百万私域时还要去堆人，并且要去分析所有的数据，你一定会疯掉的。当量达到一定程度以后，人效一定会不够。这个是我觉得我们后来找到的一个点，就是客户的数据量和私域用户量很多的时候，客户就会发现自己的人效跟不上，整个管理的成本也很高。  </p><p>所以说回来，我觉得核心我们做的事就是效率提升，帮企业解决效率的问题。因为我们全团队都是技术背景，公司是技术驱动，效率一定得对技术有深刻理解才能做到的，你就看第一次、第二次、第三次工业革命就能看出来，真正的革命性效率提升，甚至推动生产关系的变革，都是技术。<br>所以我们可能是全行业最能解决效率问题的团队，因为我们是一家真正技术驱动的公司。<br>这个是说切入点的问题。  </p><p>那另外一个问题刚刚说聊到终局的思考。刚刚我也讲到因为我经历了公众号时代完整的周期，我是13年开始做公众号业务的，当时我是背靠在蓝标后面，所以很有幸最早我就在做大客户，包括像依靠蓝标服务的微软，飞利浦、联想等。比较幸运，我很早就知道大客户的玩法是怎么样的。在13 年还是人人网的时代，我特别清楚的记得我们当年解决方案有“双微”和人人网的对比。现在觉得特别有意思，今天很难想象当时人人还有很大的流量，你要说服企业，微信比人人网价值更高。  </p><p>说回到终局的思考，我觉得微信生态有两个巨大无比的机会。第一个机会就是公众号的时代，第二个机会是企业微信的时代。公众号大概轮回是在 2013 年到 2018 年。在 2013 年公众号开放了大量的能力，我会对比三个事情：<br><strong>第一个事</strong>，在13年有赞微盟陆续都冲进来，当时有巨多公司，皮皮时光机、花儿朵朵（具体名字忘了）等等，跟今天的格局是一样的，全是做公众号和 SaaS 工具的，然后发现五年之后有赞和微盟陆续上市。当时大概微盟和有赞是 60 亿港币的市值，现在大概达到 180 亿港币，在18年这件事是一个终局。<br><strong>第二件事情</strong>是做流量的，当时 2018 年有一家公司叫量子云，公司的累计公众号的粉丝有 2.4 个亿，基本上控制了微信的大半壁江山。在那个时代量子云有981个公众号做流量矩阵，当时有一家上市公司要花 32 亿去收购这家公司，这是2018年的事。公众号流量在2018年达到了一个顶峰。<br>还有<strong>第三件事</strong>，当时有一家做广告投放和流量投放相关的公司爱点击，在 2017 年12月底上市了。  </p><p>所以基本上我们会发现公众号时代的终局就在 2018 年，不管是做 SaaS 的做广告的，还是做流量的。大概 5 年就是一个终局，所以我的判断企业微信的生态大概也是5年。因为我经历那个轮回以后会发现和现在特别像，不管是整个企微，或者是大家做产品形态、工具的形态基本上和公众号（那时候）一模一样，什么裂变，什么千人千面等等。但是在新的技术背景下，产品的玩法肯定会更好，更科技范一点，但是基本的形态很像，所以我判断企微生态可能也会在五年之后达到终局。应该是在2024年到 2025 年之间。因为企微生态的开始，我判断应该是 2020 年左右，当时有大部分的公司涌入这个行业，大概5年之后我判断一定会有三到五家上市公司，其中肯定会有纯做企微生态的公司。  </p><p>但如果句子是其中之一，我觉得是远不达我的预期的。我经常对团队讲，说 IM 中立，这个词是我自己造的。<br>我们做的是下一代的、面向未来的、基于 IM 的跨平台的营销云，我们一定不止做企业微信，我们还会做 WhatsApp，做抖音，做 Instagram。我们解决的事情是触达的事情。去年抖音的用户停留时长超过微信，那么我的判断是接下来可能 IM 的生态不会只有微信。未来我们还可能会去海外，我们会接多 IM ，我们可能不会靠某一家大厂，我们是 IM 中立的，大概是这样的一个情况。  </p><p><strong>AI君</strong><br>正好不是今年从政策上也在去开放整个生态，感觉你们这个方向也是跟大趋势在符合的。  </p><p><strong>DJ</strong><br>我有看到你在那个公司专访里面有说其实就是做着做着，突然一下感觉就成了风口浪尖（公司）的感觉。  </p><p><strong>AI君</strong><br>就说明前面的方向看得特别准嘛。  </p><p><strong>李佳芮</strong><br>我觉得可能是要持续对这个行业有思考。任何人只要在一个行业持续做，因为你持续做，你就一定会有思考，你会收获巨大的信息量。最近我和很多朋友在聊，基本上企微生态的任何事，稍微有点大的风吹草动，比如说什么公司融资、大公司并购、或者是创始人有什么事，我都会巨快知道，因为圈子很小。随着你做得越来越久，你就很容易获取到大量信息，然后我会再去思考。我觉得能做成都是用时间磨出来的。  </p><p><strong>DJ</strong><br>咱们句子是IM中立，然后句子拿的也是美元基金的投资，我猜测可能句子也是想要成为一个相对独立的一个平台。那说到中美两个市场之间，其实是有非常多的差异的。数据显示中国目前 CRM 市场大概也就是十亿美金的规模，美国的话是 300 亿美金的规模。然后中国的渗透率目前是不到 10% ，美国是超过了70%。像您刚说Salesforce 它的客单价大概是 1000 美金一个人，那中国给销售配一个手机就 1000 人民币，这就是一个区别。然后还有其他方面，比如说文化方面，美国的职业经理人制度是相对比较成熟，商业环境是比较规范化、市场化的。然后美国企业服务的这个市场存在的年数比较久，大家相对是比较接受的，不管是企业也好，还是资本市场也好。中国的大企业其实有一个现状，就是他们更加愿意为定制化的服务而买单。比如说自建一个 IT 部门或者是去外包，只为他自己来买单，因为他特别担心自己的东西给到别人。  </p><p><strong>李佳芮</strong><br>其实现在好很多。因为我们服务过这么多大客户，了解很多大企业的自建需求。当然我们也说有一个“中国特色的私有化部署”。中国大企业为什么要自建？过去的自建有两个考虑：<br><strong>第一个考虑的点</strong>是在于他认为你们什么都不懂，只有我懂我的业务。基于我之前服务很多大客户的经验，我会经常开玩笑说我是所有顶尖公司的私域运营操盘手，因为我知道他们是怎么做的。这个时候我再反向去服务新的客户，当你关于私域什么都不懂时，我是灌输方法论的人。<br><strong>第二个自建最核心的点</strong>就是数据的问题，企业担心不安全，这是很重要的点。今天大家会说我们都会提供私有化部署，就是让他自己买云服务器，超级管理员账号肯定是归这个企业，然后我们去协助和维护。那这样的话我们碰不了企业的数据，这个时候其实也能帮助他保证数据的安全。  </p><p><strong>DJ</strong><br>然后在人才吸引方面，美国的企业服务类型公司，包括像Salesforce这种明星公司，有非常多极客技术型的人才其实是愿意加入这样的公司的。中国长久以来其实是一个 ToC 的市场，我们所了解的大公司都是ToC 的，做一个东西然后所有人都知道。中国是这样的一个文化，这样的一个人才市场。之前的一个财报，报道中国的一个老牌的 To B 型公司显示它的人力成本其实一年可能也就是二三十万。那现在像腾讯这样的大企业其实给到毕业生可能能到四五十万。你对于人才、给人才开的价格可能能够决定你能吸引到什么样的人才。而现在企业服务这个赛道其实是需要顶尖的人才的。国内外还有一些小的差异，资本市场对于国内的 SaaS 的这些公司会有一些疑虑：第一个是利润率的要求，国内目前的普遍的利润率可能达不到40%，但是资本市场期待利润率能达到60%，这些可能跟国内的运营成本有关系，对于这个我没有很深的了解。然后中国没有像类似 Toast （美国的一家餐饮类的 SaaS 公司，今年上市，市值300 多亿美金）专门做餐饮类的 SaaS 公司，中国其实是很难有这样的公司的，因为美团其实就是最大的餐饮 SaaS 公司。中美市场环境其实不太一样的，可能尤其在中国做 SaaS，或者是说做这种企业服务类的公司，相对难度我觉得会要稍微高一些。  </p><p>说到咱们句子，目前您可以跟大家聊一下，虽然句子现在是特别明星的公司，但是也可能会遇到一些问题或者说一些小的挑战，这一块你可以展开聊聊吗？  </p><p><strong>李佳芮</strong><br>对，我觉得你刚刚说的几个方面确实都是我们今天面临的挑战。在我看来创业这个事如果特别简单的话，肯定轮不到你去做。因为整个行业都有一个成熟度，当一个行业足够成熟的时候，后来者是没有任何机会的，成熟的公司对于这个行业的了解，包括他的组织效率、他的整个人员结构、产品的基础设施都是非常好的。成熟的公司对创业公司来说，任何事都是降维打击，作为一个创业公司是没有机会的。那你只有在混乱中建立秩序，你只有在一片废墟中做一个事情，你才有机会去弯道超车，你才有机会去做一些不一样的事情。尤其是像我们这一代的创业者，大家都相对比较年轻，坦白讲没有太多的资源。或者说我们是草根创业者，你能够做出来一定是做成了一些别人没做的事情，你要么有一些黑科技，比如说我有技术特别牛（所以资本才会愿意投资很牛的科学家）；要么说你做一些脏苦累活，总之是一些别人不知道的东西，你探索出来。  </p><p>这也是为什么大家都会说致敬这些探索者、创新者，因为其实死掉的是更多的。创业的环境一定是非常恶劣的，尤其你刚讲到市场里面的中美差距，我们说（价格）大概就是汇率的六倍的差距，同样的东西中国卖一块钱，美国能卖到一美元，这样就会影响到利润。今天我们来讲中国的人力成本和美国人力成本，在程序员和工程师上，基本上没有 6 倍的差距，所以当你的人力成本不是 6 倍差距的时候，你卖的东西还是 6 倍差距，那么相对于中国的这个利润就被压得很低。  </p><p>那刚才也讲到，大家都会聊利润率很低怎么办？包括现在行业发展空间小等等。今年我也发现企业现在卷得厉害。但其实本质原因就是生产力足够发达以后，供大于求。所有的企业都想追求效率，他们要找效率工具。效率工具对内是 CRM，对外就是 ERP 整个供应链的管理，当然供应链我不是很熟。对内CRM这一块，那需求是井喷的，尤其是在 SCRM 这个领域，我们会发现企业都不知道怎么玩。当你能带着方法论进场的时候，那你的有机会的。  </p><p>我觉得 SaaS 本质上卖的是最佳实践，本质上我告诉你这东西该怎么做。包括我现在做产品的一个底层的逻辑，跟大家讲的是说你要提供一个什么都能做的一个大平台，就是他（企业）可以在上面随便搭，搭自己想要的东西。同时提供一堆模板，然后这些模板他（企业）可以开箱即用。当企业用得越来越深的时候，他能随时灵活的改动模板。  </p><p>我觉得这是我底层对产品的一个追求，或者说是我底层所有产品设计的一个理念。今天其实句子相对而言比较幸运，我们懂一些最佳实践，然后在产品设计上，我们面临的挑战相对会小一些。包括在资本方面，我们其实也拿到了一些头部美元基金的投资，所以压力相对也小一些。数据上因为我们不是纯 AI 公司，所以我们对数据没有特别大的依赖，反而我们很容易收集了大量的数据。当然我们的数据保护的很好，我们对话数据还是非常大的，虽然不能媲美一些大厂的一些业务部门，他们的量级肯定是以十亿为单位，但对于我们这个阶段的 SaaS 公司来讲，绝对是非常多的数据量。  </p><p>句子现在面临最大的挑战其实就是人才，在这里做一个小广告，大家如果有兴趣加入一家飞速发展的SaaS 公司，我们不缺钱、产品和客户，我们就缺人才。我们公司各个部门都缺人，因为我们在扩张阶段，所以句子现在面临最大的问题可能就是人才。坦率讲，刚刚你讲到的说 offer 谁给的钱最多，人才一定会流向哪里，这是很正常的一个状态。  </p><p>我们经常发着 offer 就发现最能跟我们抢这个候选人的是美团，除了美团之外，还有很多大厂能提供更好的薪水。我们的薪水是可以 match 的，但是对于候选人来讲，他可能希望对于未来的确定性更多一些，而加入创业公司相对风险会更高一些。所以坦白讲现在句子面临最大的问题就是人才的问题。人的问题其实分为两块，一块刚刚讲到招人（的来源），我们是面临挑战的。另外其实我们对人的要求还是挺高的，虽然特别着急招人，但每个月招进来的人其实还挺少的。因为我现在还会进行终面，任何一个岗位我都会进行终面。  </p><p>在公司整个人员的整体管理可能是现在我面临的挑战。创业每阶段面临的挑战都不一样，创业最开始时，我经常和我合伙人聊天，他是一个比我更加沉稳，比我更沉得住气的一个人，跟他相比我可能会更激进急躁一些。在美国的时候，他和我说融到资就好了，这坎就过了；后面又说等你拿到这个客户就好了。我就总觉得过完这个坎后面就好了，但你会发现永远也结束不了，所以你说未来的挑战，坦率来讲我也不知道。  </p><p><strong>AI君</strong><br>但这个也是创业本身的乐趣所在。  </p><p><strong>李佳芮</strong><br>对，其实是你面对特别大的不确定性。  </p><p><strong>DJ</strong><br>拥抱不确定性，创业就是无限游戏，这样才好玩。刚才讲到招人这个问题，我们会把这个咱们公司相关的二维码和介绍的链接，之后会放到播客shownotes里面，大家感兴趣的话可以去点。  </p><p><strong>李佳芮</strong><br>我可以把我们 HR 的那个企业微信号放过来，让大家感受一下我们公司的产品，我们会放一个渠道二维码。这个渠道二维码就能知道多少人是从咱们这个播客过来，还配有对应的标签和自动回复。这也能体现我们在各个部门都需要效率和数据的关联。  </p><p><strong>DJ</strong><br>我还是比较鼓励这个大家加入像句子这样的公司的。不光是说对这家公司有所了解，在一个新的行业里，可能目前赛道比较小，但是从资本市场看整个大的赛道可能有千亿这样的一个规模，而且句子还有一个年轻的有冲劲的创始人。当时 Google 的创始人在招人时有讲过，如果你看到一个火箭的话，你就不要考虑那么多，先上去再说。虽然目前整个市场是低增长的，但是 SCRM 行业在爆发式的快速增长，就像是一个火箭一样。号召大家多投简历试一试，和佳芮多进行沟通。  </p><p><strong>AI君</strong><br>除了 SaaS 这一块，因为句子最早是从人工智能机器人开始做的，所以我也特别想问一下你是如何看待机器和人的关系，以及像智能客服、人工智能这个领域未来的发展。  </p><p><strong>李佳芮</strong><br>我正好去年也写了一本书——《Chatbot 从0到1》，就是专门讲如何搭建聊天机器人的。写这本书的契机其实是在 2017年左右的时候，当时我和百度联手做了一套视频课程，讲如何从零到一搭建机器人，在百度官网上介绍 Chatbot 课程的视频，还是当时我录制的。书里也聊到了我对机器和人的关系的理解，我觉得机器人本质上做的事情是生产力的提升。你会发现今天通篇我们都在聊效率的问题，因为大家都是急着赚钱，所以逼着大家必须要提升效率。如何做效率的提升是所有企业面临的问题，那效率也等同于标准化，流程化。所有问题追求的都是生产力的提升，效率的提升。  </p><p>从历史上看，第一次工业革命，机器替代人工，同一时期爆发了一波有钱的公司，你会发现整个行业、整个社会生产力进了一大步。第二次很大的工业革命是电气，本质上还是生产力的提升，用更高级的机器替代人工。再进一步是第三次工业革命，信息革命。今天这个数据量井喷的年代，整个信息量的产生，本质也是生产力的不断提升导致人类获取信息的速度变得更快了，人类积累信息的能力变得更强了，那它会推动全行业的发展。所以本质上我认为其实机器和人的关系就是提高生产力，提高效率。机器去解决效率，解决生产力的问题。  </p><p>尤其是我做聊天机器人的时候，前一阵我们正好和微软的 CTO一起聊这些问题，聊到机器会不会彻底替代人。人类的创造力我觉得很难像科幻片一样被完全替换，我从一个技术角度理性的考虑这事还是不现实。本质上机器做的事可能更多是增强，机器增强了在从<strong>两个维度</strong>进行增强。<br>最早的时代增强人的就是四肢，外力，机械臂。包括有了车，我们的腿就不需要那么快了，我们发现全球的距离变得越来越短，那这都是机器产生的能力，这是<strong>第一个维度</strong>，机器在提升效率。<br><strong>第二个维度</strong>其实它提升的是大脑，因为人类的大脑容量是有限的，了解东西是有限的，机器在帮助大脑外化。我可以在互联网搜索足够多的信息，我学了足够多的东西，然后我也不需要提前都知道。机器能够协助人更智能化。本质上我觉得可能人和机器还是一个互补共生的关系。在我的那本书最后部分也专门讲了人和机器的关系。  </p><p><strong>AI君</strong><br>我就想起 17 年的时候，人工智能特别火，也有好多那种预言式说机器要替代人了、人要失业了。往回倒想，工业革命的时代，当汽车替代了马车的时候，原来的马车夫失业，同时会有新的司机产生。在生产力提升的过程中，旧的职业会消失，新的职业会出现。所以本质上还是在进化，人和机器是更加紧密的关系。我们刚刚是从您公司的产品去了解，其实我们对您本人的经历也非常的感兴趣。想问一问您为什么会走上创业这条道路，能不能简单分享一下自己的故事。  </p><p><strong>李佳芮</strong><br>其实我创业确实是纯属偶然。很多人可能在大学的时候说我就要成立一家公司，甚至很多人是我以后工作的目标是为了创业。我完全没有这个想法，等我真正创业的时候，我都没想到我创业，我当时只是想找一份工作。然后我的一个契机是参加腾讯T派互联网创新创业大赛，当时我获得了银创奖，也是唯一拿到投资的团队。虽然我后来没有要现场的投资，但这个比赛对我来说是一个很大的转折点。比赛之前我和一个师兄成立了一个工作室。他问我在干嘛呢？我说我最近在写PHP。他问我要不要搞点什么事？大概是在2013年的时候，借蓝标的机会做了好多项目。然后 2014 年参加比赛，也没想到会拿奖。  </p><p>其实之前不管是参与工作室也好，还是这个比赛也好，当时的想法是等我找工作的时候，我的简历会更好看一些，这是一个非常质朴的初衷。结果没想到在比赛之后，当时超级课程表特别火，有一个号称超级课程表的投资人找我说投 300 万。我问了我一个腾讯的朋友，他说再帮我看看，结果他又给我搞了 500 万的投资，所以这样就逼着我必须做这件事。然后我就休了学去了深圳，第一次创业是在 2014 年的时候，当时我还是一个完全没有社会履历的 CEO，完全不知道怎么带团队。后来公司做死了以后，我要将之前的客户承接过来，桔子互动最早成立的初衷只是想把一些客户接过来。我当时为什么一直做微信生态，是因为身边都是腾讯、微信的人。这是当时的一些背景和原因。  </p><p>为了让公司活下去就接项目，然后做着项目就会思考：能够做什么更有价值的事情。我一直在想从项目转到产品，因为我一直是一个产品人。  </p><p>我第一个做的尝试就是一个舞蹈的社区，当时我面临的痛点是如何管理我的社群。最早都是我自己手工管理，社群量很小的时候，手工是没问题的。但是后来随着我们的粉丝越来越多，用户量越来越多，人工的工作量太大了，所以我就顺手写了一个机器人。聊天机器人是给我自己的社群应用的，机器人需要解决三个问题：<br><strong>第一个问题</strong>是自动化的问题，自动加好友通过进群；<br><strong>第二个问题</strong>是，群里很多人每天问我重复的问题。其实我在公众号有一个特别详细的清单，上面写得非常清楚，大家都不看，所以我就让聊天机器人解决搜索的问题，让机器人去回答每天重复的问题；<br><strong>第三个解决的问题</strong>是，我想找到更多社区的管理员，我需要去判断群里谁的活跃度最高能够当管理员。但社群数量太多了，我也不能天天自己去数，所以当时有机器人帮我去收集所有的信息，就能很容易判断谁说话最多，能够当管理员。  </p><p>当时我的目的是解决我自己的问题，但舞蹈社区没做好，后来我就拿着我做的社群产品问身边的朋友、问微信生态有诉求的客户。然后大家发现这个产品很好，我就说要不要做一个SaaS软件，这又是上一个背景。所以你会发现我做的每一块确实不是为了创业。  </p><p><strong>AI君</strong><br>有一种被时代选中的感觉，赶上了。  </p><p><strong>DJ</strong><br>我特别敬佩一种创业者，一直专注在一件事情上。我们其实也有自己尝试做一些事情，我发现追风口，其实是追不上的。像你刚刚说的，这时代变得快和慢其实都跟你没什么关系。但是有一些人他自己在做一些事情，对这件事感兴趣或者是他觉得需要解决问题，他会默默地做事，可能时间短，可能时间长。突然有一天这件事成了风口，它的价值被别人看到了，这是一个特别让人敬佩的一种创业道路。而不是像有的人创业成功纯靠运气，靠运气的人就是在追一个风口，等风口过去，这件事的可持续性就很低。但如果你一直专注在一件事情上，像你刚刚说的，你可能是国内最早的几家之一做 SCRM 的公司。而且句子在指数级的去增长，不管是认知还是技术，在这件事情上会变得越来越强。所以我们很荣幸，能够邀请到像你这样的创业者。  </p><p><strong>AI君</strong><br>确实，刚才光是听佳芮这么说的话，好像有很多幸运的成分。但偶然之中也有必然，因为这么多年一直在踏踏实实做一件事，一直在跟着时代的趋势看未来的方向。所以一定会有一个时间点能够去撞上这些东西。像您之前做过很多事情，做过技术，也做过产品，在做社群的时候其实也会涉及到营销，客户维系这种活。看起来很多很散的东西，但到最后好像都指向创立句子。  </p><p><strong>李佳芮</strong><br>冥冥之中逼着我走这条路。  </p><p><strong>AI君</strong><br>在创业的过程当中肯定也会遇到很多问题。想问问您在这个过程当中有没有一些印象特别深刻的事情，或者有没有一些感想可以分享给大家的。  </p><p><strong>李佳芮</strong><br>我有时候也会和创业的朋友一起聊，其实创业的时候，时间飞速得过。因为每天经历的事很多，所以时间也很快，经历的事多到我也记不太清。之前36氪的一个访谈也问过类似的问题，那个时候的感悟和现在不太一样。我觉得最近我有两个很大的变化，一个是我变得更柔软了，好像这个词是最准确的，更感性、有更多情感的。我觉得这个其实还蛮有意思，因为最早的时候创业，你一直只追求效率，有时候很功利，比如说如果参加一个饭局没有客户，没有什么价值的话，基本上我就不太爱去。  </p><p>我很少有纯社交的行为，比如说大家坐下来闲聊天，我就会觉得很难受。当然我也有很好的朋友，但很少纯聊天。但是后来你会发现人和人之间还是要有感性的交流，需要一些情感的流动。包括我们说AI、我们来讲聊天机器人、人和机器的这种关系，但人是需要去被爱，有需要去爱的，需要有这种情感。所以这是我最近发现我的一个变化，我和之前不太一样。<br>第二个很大的变化，我更有耐心了。有些话在不同阶段感受也不太一样，就像王兴说过的一句话。  </p><p><strong>DJ</strong><br>对未来越有信心，对现在越有耐心。  </p><p><strong>李佳芮</strong><br>对，最核心讲的就是耐心。这个体现在，最近我在谈很多比较好的候选人，我跟我合伙人说的，我说他拒绝我 20 次以后就来了、这个拒绝我15 次就来了、那个拒绝五次就来了…… 还有这个人他明年之内肯定会来，那个人他可能三年之后就来。我不着急，因为公司死不了。  </p><p>我在最早创业的时候，我找合伙人或者我找团队的核心成员，我很着急，我会要求你立刻给我一个结果。然后你拒绝我以后，我就非常沮丧，非常痛苦。是不是我不够好？我如何能更好？但很多时候你会发现人和人的选择和本质上你好不好没有必然关系，好不好只是重要关系之一，还有很多背景因素的。有时候是他当时的心境、整个的市场环境、他是不是要改变等等。包括最近我要挖一个腾讯的候选人，我们也认识好多年了，我要把他拉过来。当年我是去深圳创业之后，把他从北京搞到了深圳，他举家搬迁，当时带着他女朋友去了，然后就一直在。后来我的公司死了，他还一直在，后来换了女朋友结了婚。最近我也在跟他聊，一个新的变化就是他刚有孩子，最近要照顾女儿。我说等孩子再大一点，反正句子也死不了。  </p><p>类似这种事，其实有很多这样的候选人，我希望能过来跟我们一起来做事情的人。我变得不那么急躁了，除了这个候选人，还有很多事就不一一列举了。我会忽然发现我变得好像不那么急躁了，变得有耐心了。所以我觉得我当下的心态<strong>一个是柔软，一个是耐心</strong>。  </p><p><strong>AI君</strong><br>感觉刚才您说跟候选人的那一段的时候，我当时就在想跟我去招学员的时候，也挺像的。他今天看了我的文章，然后看了我的课咨询了一下，不来。过几天他可能又来问问，次数多了之后他总会来的。  </p><p><strong>李佳芮</strong><br>而且我跟 HR 说的是，你们做招聘就要像做销售一样，本质上就是个漏斗加转化率。  </p><p><strong>DJ</strong><br>对，我觉得慢就是快，快就是慢。你看佳芮年纪不大，做一件事情能做上八年之久。你觉得它很长，但你看她年纪也不大，这件事情它就形成了一个非常高的壁垒。有的人好像追求那种很短期的快，我见过一些这种快速成名的人。经济学有两个模型，一种是这种年少成名，（突然上去）然后呼下去了，然后就慢慢消失了；还有一种是这样的，慢慢地成长突然有一天他陡峭了，之后他不会下来的，因为你积累得足够长，这个东西会让你能够持续地去保持，不管是好的习惯还是好的技能。  </p><p><strong>DJ</strong><br>因为咱们今天是聊 SCRM行业，从专业角度，我认为是有非常大的洞察的，让我真的去了解到这个行业。另一方面从人的层面上去感受到，因为我们做这个节目，不知道你有没有去听前面的，我们会有一些人文色彩在里面，我们会觉得人是最重要的，不管是聊数据安全也好，还是聊品牌与人的关系也好，我们会觉得人是最重要。通过佳芮，我们这一期能够感受到一个特别强大的，现在柔软的女性创业者的力量，我觉得能够支撑我们，给我们很多的力量。那我们今天就先到这，感谢佳芮来参加我们的节目。  </p><p><strong>李佳芮</strong><br>感谢，辛苦二位.</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> Chatbot </tag>
            
            <tag> SaaS </tag>
            
            <tag> SCRM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入局5G消息！句子互动与来也、亚信、东信北邮等入驻硬核桃5G开发者社区</title>
      <link href="/interview/2021-12-16-5g-wechaty-walnut.html"/>
      <url>/interview/2021-12-16-5g-wechaty-walnut.html</url>
      
        <content type="html"><![CDATA[<p>5G消息商用即将开启，越来越多产业链企业加入布局。</p><p>句子互动作为聊天机器人开源框架Wechaty社区内最大的商业化公司，致力于帮助企业打造聚合所有IM消息的跨平台营销云，5G消息是其中非常重要的一环。</p><p>12月15日，在5G消息开发者的垂直技术社区“硬核桃社区”一周年大会上，句子互动入驻社区并分享了团队接下来在5G消息机器人方向的规划。中国信通院、中国通信企业协会、GSMA、中国移动、中国广电、中国联通和梦网、来也、亚信、东信北邮等行业企业的近百位专家领导也参与了周年活动并做了主题交流。</p><p><img src="/img/2021/12-5g-wechaty-walnut/group.jpg" alt="group"></p><p>句子互动CEO李佳芮在下午的“核能沙龙”上，分享了团队在5G消息商业化方面的规划和实践。</p><p><img src="/img/2021/12-5g-wechaty-walnut/rui.jpg" alt="rui"></p><p>Wechaty开源社区有5年的技术沉淀，拥有社区大量的开发者已完成的现有对话机器人场景应用。这些产品技术的积累可以在零代码修改的基础上复用给5G消息运营商的业务。同时，行业中已有很多在使用Wechaty的开发者和公司，都可以在第一时间成为未来运营商Chatbot的高质量供应商，做到人才和公司的高效复用。</p><p>Wechaty使用对商业最为友好的Apache-2.0许可协议，现有大量开发者和商业公司基于Wechaty为客户提供的商业产品和服务，都可以通过Wechaty迅速切入5G Chatbot新市场。</p><p>句子互动在企业微信机器人商业应用上已经被市场验证，正在为欧莱雅、Babycare、元气森林、58本地版等头部品牌提供私域营销服务，这些经验将在接下来5G Chatbot商业化探索上被复用。</p><p><img src="/img/2021/12-5g-wechaty-walnut/juzibot.jpg" alt="juzibot"></p><p>Wechaty与硬核桃社区已共同完成了Wechaty Puppet Walnut - 硬核桃5G消息的开发，接下来会有更多的应用随着句子互动的入驻落地应用。</p><p>以下视频是分享内容：</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="https://v.qq.com/txp/iframe/player.html?vid=q33224xl3nz" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> Wechaty </tag>
            
            <tag> Chatbot </tag>
            
            <tag> 5G </tag>
            
            <tag> 联通 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创业篇 - 女性开发者的创业之路</title>
      <link href="/interview/2021-12-03-coding-ladies.html"/>
      <url>/interview/2021-12-03-coding-ladies.html</url>
      
        <content type="html"><![CDATA[<p>本文是我在微软 Reactor 做的 <a href="https://mp.weixin.qq.com/s/MmC6nuETSi1iYpgZZ_7Ctw" target="_blank" rel="noopener">《Coding Ladies｜创业篇 - 女性开发者的创业之路》</a> 分享</p><blockquote><p>本月的 Coding Ladies 系列活动，聚焦 IT 行业中的女性从业者。我们邀请了 IT 行业几位杰出的女性从业者，来为我们分享她们在技术创业、技术教育、技术应用中的故事。希望通过她们的经验分享，可以激励更多女性，直面困难与挑战，勇于追求自身理想，实现自己的人生价值。<br>如今，女性创业者在中国的创业者中已占据不小的比重，女性企业家也早已不是屈指可数。IT 行业的女性在创业中会遇到哪些挑战？又有哪些优势？<br>本期 Coding Ladies，我们邀请到了句子互动创始人&amp;CEO 李佳芮，与光辉城市联合创始人&amp;CTO 朱一婷，同时也是两位微软最有价值专家，来跟大家聊聊女性创业之路上的挑战、经历与感悟。希望通过本期活动，可以给 IT 行业的女性从业者带来一些启发。</p></blockquote><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="//player.bilibili.com/player.html?aid=252717146&bvid=BV12Y411h7kX&cid=470147717&page=1" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><p>以下是 PPT 内容：</p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.001.jpeg" alt="1"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.002.jpeg" alt="2"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.003.jpeg" alt="3"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.004.jpeg" alt="4"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.005.jpeg" alt="5"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.006.jpeg" alt="6"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.007.jpeg" alt="7"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.008.jpeg" alt="8"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.009.jpeg" alt="9"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.010.jpeg" alt="10"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.011.jpeg" alt="11"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.012.jpeg" alt="12"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.013.jpeg" alt="13"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.014.jpeg" alt="14"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.015.jpeg" alt="15"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.016.jpeg" alt="16"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.017.jpeg" alt="17"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.018.jpeg" alt="18"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.019.jpeg" alt="19"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.020.jpeg" alt="20"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.021.jpeg" alt="21"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.022.jpeg" alt="22"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.023.jpeg" alt="23"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.024.jpeg" alt="24"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.025.jpeg" alt="25"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.026.jpeg" alt="26"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.027.jpeg" alt="27"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.028.jpeg" alt="28"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.029.jpeg" alt="29"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.030.jpeg" alt="30"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.031.jpeg" alt="31"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.032.jpeg" alt="32"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.033.jpeg" alt="33"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.034.jpeg" alt="34"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.035.jpeg" alt="35"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.036.jpeg" alt="36"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.037.jpeg" alt="37"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.038.jpeg" alt="38"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.039.jpeg" alt="39"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.040.jpeg" alt="40"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.041.jpeg" alt="41"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.042.jpeg" alt="42"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.043.jpeg" alt="43"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.044.jpeg" alt="44"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.045.jpeg" alt="45"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.046.jpeg" alt="46"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.047.jpeg" alt="47"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.048.jpeg" alt="48"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.049.jpeg" alt="49"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.050.jpeg" alt="50"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.051.jpeg" alt="51"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.052.jpeg" alt="52"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.053.jpeg" alt="53"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.054.jpeg" alt="54"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.055.jpeg" alt="55"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.056.jpeg" alt="56"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.057.jpeg" alt="57"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.058.jpeg" alt="58"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.059.jpeg" alt="59"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.060.jpeg" alt="60"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.061.jpeg" alt="61"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.062.jpeg" alt="62"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.063.jpeg" alt="63"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.064.jpeg" alt="64"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.065.jpeg" alt="65"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.066.jpeg" alt="66"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.067.jpeg" alt="67"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.068.jpeg" alt="68"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.069.jpeg" alt="69"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.070.jpeg" alt="70"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.071.jpeg" alt="71"></p><p><img src="/img/2021/12-coding-ladies/12-coding-ladies.072.jpeg" alt="72"></p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 微软 </tag>
            
            <tag> Microsoft </tag>
            
            <tag> MVP </tag>
            
            <tag> 程序员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感恩遇见，感恩同行，感恩成长 -- 句子互动 2021 感恩节</title>
      <link href="/interview/2021-11-25-juzibot-thanksgiving.html"/>
      <url>/interview/2021-11-25-juzibot-thanksgiving.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>其实还蛮感触的，创业路上一步一个脚印。回头看都是感动，经历时无不惊悚</p></blockquote><p><img src="/img/2021/11-juzibot-thanksgiving/pour-wine.jpeg" alt="倒酒"></p><p>这是我创业的第八个年头，这是我第一次过感恩节。</p><p>创业八年，在很多人看来，这是一个需要勇气的事情，但是当你处于时间的漩涡中，你会发现，时间真的很奇妙，在你不想谈论它的时候，它悄无声息的包裹着我们流淌；在不经意的走过某一天的时候，忽然发现，这个时刻需要矫情的纪念一下。</p><p>纪念创业这八年的一些人，一些事，或许最好的某一天，就是感恩节了。</p><p>我很庆幸，八年来，很多人走进了我的生命，或长或短的陪伴我，陪伴句子（桔子）互动度过了无数的惊悚瞬间。</p><p>对于一个一直往前跑的人来说最感恩的就是有人愿意陪她一起跑。</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="https://v.qq.com/txp/iframe/player.html?vid=l3315vw6hyj" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><h2 id="感恩过去"><a href="#感恩过去" class="headerlink" title="感恩过去"></a>感恩过去</h2><p>其实这次感恩节是一个偶然，起初是 HR 团队成功的完成了我的一个 2 周招进 15 个销售这样一个在今天的句子看起来是不可能完成的任务，结果正好赶上了感恩节，不如我们就在感恩节，庆祝最近一段时间我们完成的三件大事：</p><ul><li>HR 团队搭建完成</li><li>销售团队搭建完成</li><li>AI Lab 搭建完成</li></ul><p>聊着聊着，我们说不如，我们请来过去曾经帮助过我们的人，一起来度过句子互动的感恩节。</p><p>因为在过去的几千个日子里，在我最彷徨无措，接受各种人的帮助的时候，总是在内心想着未来要有报答。我记得好像在 2019 年的美国，我和高原聊过，我们最痛苦的日子，有很多看起来和句子完全没有关系的人，帮助了我们很多，我们要把他们都记录在纸上，有机会一定要好好报答他们。</p><p><img src="/img/2021/11-juzibot-thanksgiving/invitation.jpeg" alt="请柬"></p><p>但是现在的我忽然明白一个事情，其实很多人对你的帮助，就是帮助了，你未来根本没机会去予以回报，最好的方式，是把它接力下去，帮助更多的人。</p><p><img src="/img/2021/11-juzibot-thanksgiving/gift.jpeg" alt="礼品"><br><img src="/img/2021/11-juzibot-thanksgiving/scene.jpeg" alt="现场"><br><img src="/img/2021/11-juzibot-thanksgiving/delicacy.jpeg" alt="美食"></p><p>因为地点和时间的关系，我们仅仅请到了部分曾经帮助过句子互动的人，这张照片里，大部分都不是句子互动的人，但是都是在一些关键时刻，给予了很多帮助。</p><p><img src="/img/2021/11-juzibot-thanksgiving/group-photo.jpeg" alt="感恩节合照"></p><p>除了感恩这些人，还有我们的团队。</p><p><img src="/img/2021/11-juzibot-thanksgiving/dwelling-changing.jpg" alt="搬家合照"></p><p>我不敢奢望每一个人都陪我和句子坚持到终点，但我真心感恩，你们如此努力的陪我和句子走过每一段路。</p><h2 id="展望未来"><a href="#展望未来" class="headerlink" title="展望未来"></a>展望未来</h2><p>今天的句子互动，仅仅是一个开始，就已经坎坷异常。但我想我们依然很幸运，总能遇到愿意帮助我们的人，总能绝处逢生扳回一局。</p><p><img src="/img/2021/11-juzibot-thanksgiving/teambuilding.jpeg" alt="团建"></p><p>为已有的感恩，为没有的努力。句子互动在接下来，会有三大战略升级。</p><p><img src="/img/2021/11-juzibot-thanksgiving/strategic-upgrade.jpeg" alt="三大战略升级"></p><p><img src="/img/2021/11-juzibot-thanksgiving/globalization.jpeg" alt="全球化"></p><p><img src="/img/2021/11-juzibot-thanksgiving/one-liner.jpeg" alt="一句话介绍"></p><p>记得前一阵我们在整理数据的时候，我和伯昊在聊数据安全的问题。他问我，我们做的事情和数据相关，真的未来句子还会在纳斯达克上市么，难道不是港交所。我说，句子未来一定是一家全球化公司，因为她生来就是。</p><p>我们的管培生康龙在旁边忍不住笑说，今天就开始聊上市的话题了么？</p><p>创业的人都爱下赌注，我赌，我们能赢。</p><p>我保证，我们能赢。</p><h2 id="附录-PPT"><a href="#附录-PPT" class="headerlink" title="附录 PPT"></a>附录 PPT</h2><p>以下是感恩节全程的分享 PPT 内容。</p><p>前面是感恩，后面是句子未来的规划。记录下来，经过时间以后再来看，我们完成了多少。</p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-1.jpeg" alt="1"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-2.jpeg" alt="2"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-3.jpeg" alt="3"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-4.jpeg" alt="4"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-5.jpeg" alt="5"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-6.jpeg" alt="6"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-7.jpeg" alt="7"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-8.jpeg" alt="8"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-9.jpeg" alt="9"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-10.jpeg" alt="10"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-11.jpeg" alt="11"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-12.jpeg" alt="12"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-13.jpeg" alt="13"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-14.jpeg" alt="14"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-15.jpeg" alt="15"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-16.jpeg" alt="16"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-17.jpeg" alt="17"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-18.jpeg" alt="18"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-19.jpeg" alt="19"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-20.jpeg" alt="20"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-21.jpeg" alt="21"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-22.jpeg" alt="22"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-23.jpeg" alt="23"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-24.jpeg" alt="24"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-25.jpeg" alt="25"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-26.jpeg" alt="26"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-27.jpeg" alt="27"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-28.jpeg" alt="28"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-29.jpeg" alt="29"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-30.jpeg" alt="30"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-31.jpeg" alt="31"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-32.jpeg" alt="32"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-33.jpeg" alt="33"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-34.jpeg" alt="34"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-35.jpeg" alt="35"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-36.jpeg" alt="36"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-37.jpeg" alt="37"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-38.jpeg" alt="38"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-39.jpeg" alt="39"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-40.jpeg" alt="40"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-41.jpeg" alt="41"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-42.jpeg" alt="42"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-43.jpeg" alt="43"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-44.jpeg" alt="44"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-45.jpeg" alt="45"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-46.jpeg" alt="46"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-47.jpeg" alt="47"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-48.jpeg" alt="48"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-49.jpeg" alt="49"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-50.jpeg" alt="50"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-51.jpeg" alt="51"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-52.jpeg" alt="52"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-53.jpeg" alt="53"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-54.jpeg" alt="54"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-55.jpeg" alt="55"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-56.jpeg" alt="56"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-57.jpeg" alt="57"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-58.jpeg" alt="58"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-59.jpeg" alt="59"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-60.jpeg" alt="60"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-61.jpeg" alt="61"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-62.jpeg" alt="62"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-63.jpeg" alt="63"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-64.jpeg" alt="64"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-65.jpeg" alt="65"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-66.jpeg" alt="66"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-67.jpeg" alt="67"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-68.jpeg" alt="68"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-69.jpeg" alt="69"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-70.jpeg" alt="70"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-71.jpeg" alt="71"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-72.jpeg" alt="72"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-73.jpeg" alt="73"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-74.jpeg" alt="74"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-75.jpeg" alt="75"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-76.jpeg" alt="76"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-77.jpeg" alt="77"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-78.jpeg" alt="78"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-79.jpeg" alt="79"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-80.jpeg" alt="80"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-81.jpeg" alt="81"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-82.jpeg" alt="82"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-83.jpeg" alt="83"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-84.jpeg" alt="84"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-85.jpeg" alt="85"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-86.jpeg" alt="86"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-87.jpeg" alt="87"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-88.jpeg" alt="88"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-89.jpeg" alt="89"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-90.jpeg" alt="90"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-91.jpeg" alt="91"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-92.jpeg" alt="92"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-93.jpeg" alt="93"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-94.jpeg" alt="94"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-95.jpeg" alt="95"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-96.jpeg" alt="96"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-97.jpeg" alt="97"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-98.jpeg" alt="98"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-99.jpeg" alt="99"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-100.jpeg" alt="100"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-101.jpeg" alt="101"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-102.jpeg" alt="102"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-103.jpeg" alt="103"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-104.jpeg" alt="104"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-105.jpeg" alt="105"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-106.jpeg" alt="106"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-107.jpeg" alt="107"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-108.jpeg" alt="108"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-109.jpeg" alt="109"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-110.jpeg" alt="110"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-111.jpeg" alt="111"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-112.jpeg" alt="112"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-113.jpeg" alt="113"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-114.jpeg" alt="114"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-115.jpeg" alt="115"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-116.jpeg" alt="116"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-117.jpeg" alt="117"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-118.jpeg" alt="118"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-119.jpeg" alt="119"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-120.jpeg" alt="120"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-121.jpeg" alt="121"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-122.jpeg" alt="122"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-123.jpeg" alt="123"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-124.jpeg" alt="124"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-125.jpeg" alt="125"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-126.jpeg" alt="126"></p><p><img src="/img/2021/11-juzibot-thanksgiving/juzibot/juzibot-127.jpeg" alt="127"></p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> 感恩节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>句子互动创始人李佳芮：“做着做着，风口就砸向了我” | U30</title>
      <link href="/saas/2021-09-23-forbes-u30-interview.html"/>
      <url>/saas/2021-09-23-forbes-u30-interview.html</url>
      
        <content type="html"><![CDATA[<p>创业赶上了风口，但李佳芮经常说的是要做一个百年老店。“其实做企业就是在做长期价值。句子互动的发展路径几乎没有变化过，只是两年后的今天被风口砸中了而已。”  </p><p>在2021年的数月，句子互动每月新签合同额均有翻倍增长。句子互动服务的头部客户均有超过2次的年内增购，这在SaaS行业中也是罕见的情况。  </p><p>作为句子互动创始人，李佳芮同时负责产品、运营、市场和销售等多项工作，带领团队在2021年业务连续3个月实现每月翻倍增长的极佳业绩，并服务了猿辅导、欧莱雅等行业头部客户，针对教育和消费品的解决方案，为行业所复制。  </p><p>李佳芮介绍，2021年句子互动规划完成数千万收入，在私域构建和规模触达做到行业第一。  </p><p><img src="/img/2021/09-forbes-u30-interview/rui.webp" alt="Rui">  </p><blockquote><p>李佳芮从2013年开始就一直基于微信生态在为企业提供技术和运营服务。  </p></blockquote><p>李佳芮是一名连续创业者。  </p><p>2015年，李佳芮创立了句子互动的前身公司桔子互动，初衷是做社交媒体运营和开发项目。2016年李佳芮参与到开发Wechaty这个开源项目中，并成为该项目的联合作者。句子互动来自全球最大的聊天机器人开源框架Wechaty的运营团队和作者团队，其在Github上获得了11,000+Stars，并拥有数百位contributors,位列全世界开源项目前600。句子互动基于这一开源项目生产了对应的商业化产品。  </p><p>但李佳芮认为Wechaty不应该只解决李佳芮自己社区的问题，还应该为更多企业赋能，帮助他们更好地管理用户。当时，李佳芮已经接触了比较多的种子企业用户，所以李佳芮用这个产品询问了几个之前服务过的企业，他们都觉得非常棒并表明了强烈的需求。所以这就成为李佳芮创业的开端，进而有了Wechaty的商业化，有了今天的句子互动。  </p><p>“59分机器人”来自李佳芮2020年出版的《Chatbot从0到1：对话式交互实践指南》，是李佳芮在YC的时候和陆奇博⼠交流机器⼈时⾸次提出的。李佳芮说：“其实那个时候我说的59分不是指机器人不可用，而是我对行业所有Chatbot的一个观点。即使在今天，我的观点也没有太多变化。”  </p><p>在Chatbot从0到1的过程中，李佳芮遇到最大的挑战，是如何平衡客户对Chatbot的期待和技术的局限性。  </p><p>目前，李佳芮主导研发和推广句子互动的两套SaaS工具，通过结合Chatbot和自然语言处理的能力，将企业微信变成机器人，实现规模化提高私域流量运营的提效。  </p><p>“确实有一种业务做着做着，风口就砸向了我的感觉。但我们更相信时间的价值，胜过风口。”李佳芮觉得和风口相比，价值和积累更重要。  </p><p>今年，句子互动所在的Mar-Tech赛道中，企业微信运营工具忽然变成了最热的子赛道，这是李佳芮没想到的事。包括有赞、小鹅通等公司均在入局，其中不乏微盛、尘锋等行业头部公司。  </p><p>在李佳芮看来，虽然句子互动不是规模最大的团队，但找到了属于句子互动的发展路径，并且基于这一路径正在高速增长。  </p><p>但事实上，李佳芮从2013年开始就一直基于微信生态在为企业提供技术和运营服务。李佳芮也一直在探索什么样的SaaS工具能帮企业更好地管理企业的微信用户。后来2019年初，李佳芮被YC录取。在美国YC的3个月时间，李佳芮的思路变的越来越清楚，确定了做私域运营工具的创业方向。  </p><p>创业赶上了风口，但李佳芮经常说的是要做一个百年老店。“其实做企业就是在做长期价值。句子互动的发展路径几乎没有变化过，只是两年后的今天被风口砸中了而已。”  </p><p>早在2017年，结合⾃⼰多年基于微信⽣态为企业提供运营和技术服务的经验，李佳芮就意识到⼀件事情：微信已经逐渐替代了传统的电话短信，成为新一代的运营商，过去所有基于电话短信的业务，都值得在微信上重做一遍。特别是随着用户越来越习惯通过微信交流，他们更习惯于在聊天对话中直接获取服务。  </p><p>这是交互⽅式的演变，也是随着技术升级，信息服务下一阶段的必经之路。  </p><p>2019年，李佳芮曾预见，随着企业微信生态的逐渐开放，私域流量的下一个黄金十年在企业微信。就像张小龙所说：“技术的使命应该是帮助人类提高效率”，李佳芮作为一名一直做to B行业的技术人，也一直希望帮助商家提升效率。  </p><p>李佳芮对自身产品的定位底层逻辑很清楚。她说，“今天商家和用户的沟通方式变了，都是基于IM在做。那么现在商家缺少一个工具，帮助⾃⼰提升效率。我们一直在做的事情就是如何通过工具实现这个事情。”  </p><p>在李佳芮看来，SocialCRM本质上就是在IM上帮助商家重新做一遍生意，句子互动的产品就是新一代的、基于IM的，帮助商家高效管理用户，快速获客并提升转化的私域运营SaaS管理工具。  </p><p>李佳芮说：“今天在行业中，句⼦互动应该是服务了最多头部企业的企业微信SaaS服务商。和行业里其他做企微运营生态的公司不同，我们主要服务大客户为主。大客户成单周期通常会比小客户长很多，他们最开始的付费甚至比一些小客户还低，通过一些付费的尝试，大客户觉得这个工具真的给他们解决了实际问题，后面就会进行大规模的增购，而且会持续的增购。培育⼤客⼾的过程，虽然很漫⻓需要耐⼼，但是⻓期来看，则是⼀个⾮常健康的增⻓模型。”  </p><p>2017年李佳芮一个人辞职创业的时候就搬进了孵化器。  </p><p>回顾跨越死亡谷的融资历程，李佳芮说：“之所以一直钉在PNP就是因为他们持续的支持，就像联合创始人一样一直在帮忙，对接客户、对接资本、对接团队。后面包括YC的合伙人以及YC之后的TSVC和阿尔法公社，他们都是非常棒的一线美元基金，这些基金的创始人都自己真正地创过业，他们知道创业公司在早期会遇到什么困难，就会很理解创始团队。其实做Wechaty的时候，很多投资机构都是褒贬不⼀的，但是真成投资特别认可我们过去的努⼒，并且⼤家对未来想的还特别⼀致，会从资本的角度告诉我们未来怎么把市场做得更大，特别让我们感动。  </p><p>“真成投资创始人李剑威总曾对我说，‘其实按道理你们这么年轻的团队，我们一般是不投的，但是看到你们一直在Wechaty这件事上做了这么多年，我知道你们是沉得住气的。’总体来说，我们选择的资本一定要认可和承认我们的价值，有共同的价值观，对未来的判断有相同的认知。”李佳芮说。  </p><p>句子互动是下一代的、面向未来的、支持所有IM的营销云服务商。除企业微信外，李佳芮的团队也会布局5G消息、抖⾳、WhatsApp等多个即时通讯⼯具。  </p><p>李佳芮认为，智能对话的核心价值应该在解决问题的能力上，而不是停留在具体是人还是机器回答的这个表面问题上。  </p><p>迄今为⽌，没有任何已知的途径和⽅法能够让⼯具和⼈类⼀样对世界进⾏感知和交互、通过⾃我学习的⽅式解决所有领域的问题。各种“奇点”假说推论未来人工智能技术可能以指数级成长，却忽略了这样的指数级成长需要的是一系列可能需要百年甚至永远都不可能实现的重大技术发明和突破。  </p><p>解决的唯一方式，唯有“共生”。  </p><p>让机器做机器擅长的事情，让人类发挥人类的特长，共享未来。  </p><blockquote><p>原文链接：<a href="http://www.forbeschina.com/billionaires/57511" target="_blank" rel="noopener">http://www.forbeschina.com/billionaires/57511</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> saas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> saas </tag>
            
            <tag> Forbes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中关村U30榜单发布，句子互动CEO李佳芮入选</title>
      <link href="/saas/2021-09-19-zhongguancun-u30.html"/>
      <url>/saas/2021-09-19-zhongguancun-u30.html</url>
      
        <content type="html"><![CDATA[<p>9月24日，在2021中关村论坛平行论坛、开源创新发展论坛上，创青春-中关村U30发布2021年度优胜者榜单，句子互动CEO李佳芮入围榜单。  </p><p><img src="/img/2021/09-zhongguancun-u30/list.webp" alt="list">  </p><p>创青春-中关村U30由中国科协科学技术传播中心，北京市科学技术委员会、中关村科技园区管理委员会，共青团北京市委员会，北京市海淀区人民政府共同主办，面向年龄35岁以下的青年创业者，聚焦高精尖产业机构，寻找改变世界的青年创业力量，得到了众多青年创业者的积极参与和创服机构、投资机构的大力支持。  </p><p><img src="/img/2021/09-zhongguancun-u30/group.webp" alt="group">  </p><p>佳芮是一名连续创业者。</p><p>2015年，佳芮创立了句子互动的前身公司桔子互动，初衷是做社交媒体运营和开发项目。2016年，佳芮参与到开发Wechaty这个开源项目中，并成为该项目的联合作者。Wechaty是全球最大的聊天机器人开源框架，其在Github上获得了11,000+Stars，并拥有数百位contributors，位列全世界开源项目前600。句子互动基于这一开源项目生产了对应的商业化产品。</p><p>作为句子互动创始人，李佳芮同时负责产品、运营、市场和销售等多项工作，带领团队在2021年业务连续3个月实现每月翻倍增长的极佳业绩，并服务了猿辅导、欧莱雅等行业头部客户，针对教育和消费品的解决方案，为行业所复制。</p><p>句子互动是下一代的、面向未来的、支持所有IM的营销云服务商。除企业微信外，团队也会布局5G消息、抖⾳、WhatsApp等多个即时通讯⼯具。</p><hr><p>过去一年，句子互动与众多“正规军”一起深耕私域，共同打造了多个行业的典范：</p><ul><li>消费品行业我们与美宝莲纽约、Wonderlab、Babycare、元气森林等并肩作战；</li><li>教育行业我们服务了猿辅导、一起作业、网易有道和亿学教育；</li><li>线上服务行业我们帮助58同城、啄木鸟科技、元保保险等团队提升了运营效率。</li></ul><p>数千万客户的服务能力和标准化的运营打法让我们相信，句子互动可以帮助更多企业提高10倍以上的私域运营效率。</p><p><img src="/img/2021/09-zhongguancun-u30/juzibot.webp" alt="juzibot">  </p>]]></content>
      
      
      <categories>
          
          <category> saas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> saas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「微软比特熊故事汇」9月英雄故事：MVP视角下的当代程序员自我解读</title>
      <link href="/microsoft/2021-09-16-microsoft-bitbear-talk.html"/>
      <url>/microsoft/2021-09-16-microsoft-bitbear-talk.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2021/09-microsoft-bitbear-talk/hi-bits.jpeg" alt="hi-bits"></p><p>大家最近有没有看《失控玩家》？</p><p>《失控玩家》的主角是开放世界游戏《自由城》中的一个NPC，一个每天重复着同样生活的银行职员“盖”，在爱上一位玩家“鸡尾酒女孩”后，盖开始产生自我意识，并偏离设定好的行为树。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/free-guy.jpg" alt="free-guy"></p><p><strong>比特熊</strong>：《失控玩家》很自然让人想到前几年的《头号玩家》，《自由城》的灵感也来源于《GTA5》、《我的世界》、《堡垒之夜》、《Roblox》等游戏，它们都指向了最近很热门的一个概念——元宇宙。</p><p>如果你对“元宇宙第一股”《Roblox》来说还有些陌生，那《堡垒之夜》应该很熟悉了，这个因“大逃杀”玩法风靡的游戏已经成了现实中最接近“绿洲”的存在。</p><p>「比特熊故事汇」作为比特熊直播间系列栏目的首发，将定期邀请技术大牛和行业先锋做客。这里不仅讲最“热”的技术，还有更多待解锁的个人故事和趣味话题！在这里打个广告，欢迎热爱技术分享、有故事的朋友来到比特熊的直播间！</p><p><strong>比特熊</strong>：本熊这次有幸请到两位微软MVP——李佳芮和段清华，和大家聊聊元宇宙、聊天机器人、以及更多生活趣事。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/lijiarui.png" alt="lijiarui"></p><p><img src="/img/2021/09-microsoft-bitbear-talk/duanqinghua.png" alt="duanqinghua"></p><p><strong>比特熊</strong>：在之前的看电影系列，比特熊对佳芮老师已经有了许多接触！是非常有闪光点的程序员小姐姐。不仅主理着句子互动公司，很多活动中也总能见到佳芮的身影。<br>比特熊比较好奇的是清华老师简介里有一句“最懂金融的AI工程师” ，这句话的含义需要本尊来给我解一解。</p><p><strong>清华</strong>：是这样的，虽然“人工智能”这个词这几年炙手可热，但在我看来所谓的“AI工程师”行业里还是很少的。这个领域的知识从学术步入到工业阶段，到落地和实践的过程中有很多步骤，工程师只能依靠积累慢慢“产生”。<br>从毕业以来，我就一直在做和金融有关的事情，包括我创业之前的工作，也使得我参与过很多中国顶级金融机构的项目，了解了很多偏向金融的算法知识。当然我们不能单纯理解我最懂金融啊，我是在AI工程师里面最懂金融，这是有限定条件的。</p><p><strong>比特熊</strong>：原来是这样，那我除了人工智能方面的技术问题可以问清华老师，金融方面也可以请教啦！我知道两位还有一个共同身份微软MVP。</p><p>「微软MVP概念」微软最有价值专家是微软公司授予第三方技术专业人士的一个全球奖项。28年来，世界各地的技术社区领导者，因其在线上和线下的技术社区中分享专业知识和经验而获得此奖项。MVP致力于通过演讲、论坛问答、创建网站、撰写博客、分享视频、开源项目、组织会议等方式来帮助他人，并最大程度地帮助微软技术社区用户使用Microsoft技术。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/mvp.jpg" alt="mvp"></p><p><strong>比特熊</strong>：想问一下两位老师，成为MVP是怎样的体验呢？两位老师是不是在认识的时候就已经是MVP了呢？</p><p><strong>佳芮</strong>：我们认识的时候还没有成为微软MVP，而且我成为MVP比清华早一点点。</p><p><strong>清华</strong>：我觉得成为MVP的一个前提是对社区有更多的关注，比特熊也说了MVP是微软发给第三方的荣誉称号。我当初成为MVP的时候，好多人还以为我进微软了呢。<br>程序员接触社区肯定是最多的，外界戏称程序员就是不断地进行各种“Copy-Paste”，那复制粘贴是哪来的呢，就是从社区来的。“复制粘贴”肯定是开玩笑，我们都是遵守社区的协议和规章制度的，站在巨人的肩膀上。在这个过程中就会想对社区做出更多贡献，“我为人人，人人为我”。既然我从社区得到了很多，那我们是不是也可以付出一些，让整个社区、整个行业变得更好。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/talk-1.jpg" alt="talk-1"></p><p>包括我们做开源项目、写文章、发视频和教程，等等一些社区活动，都是在为社区进行更多的输出。我也是在这个过程中知道了MVP这个事情，我的MVP推荐人是我和佳芮的一个共同朋友，我把自己做过的一些贡献进行整理，和关于社区的想法一起提交给微软后就成为了MVP。</p><p><strong>佳芮</strong>：我是因为参加了一场技术分享，当时亚马逊和微软应该都是赞助商，分享的是“如何从0到1搭建聊天机器人”，然后也是讲如何用bot解决一些实际的问题。当时认识了Chris，MVP的负责人，她问我有没有兴趣成为MVP呀。我觉得还挺有意思的，就申请了。<br>我自己因为在创业，主要做的是SaaS、技术服务，用到了很多AI的技术，所以我们和微软的合作也很多，尤其是在Azure上。和Azure的很多部门都有合作，也推荐了很多大企业给我们，我们也会采购更多的Azure，有更多的交集。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/talk-2.jpg" alt="talk-2"></p><p><strong>比特熊</strong>：我知道两位不仅因为共同职业领域认识并成为朋友，还经常有一些合作，根据我的调查，这些事情其实很有实际应用价值，能不能跟我们分享一下。</p><p><strong>佳芮</strong>：我们一直在做一个小机器人。大家可能都遇到过这样的情况，群里发了很多文件，过两天再去找的时候，要么是下载失效，要么是找不到文件了。不止一个群的时候，就更难找到了。<br>如何把文件结构化的存储下来，是我和清华想解决的一个痛点，于是就有了这个微信小助理。它解决了三个问题：存储、搜索和推送。存储不止文件，还能把链接存储成文档，解决链接失效之类的问题。还可以识别自然语言生成To-do list，这也是一种存储。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/product-show-1.jpg" alt="product-show-1"></p><p><img src="/img/2021/09-microsoft-bitbear-talk/product-show-2.jpg" alt="product-show-2"></p><p>第二个是搜索，我觉得聊天机器人本质上解决的是搜索的问题，通过更快的方式（比如一句话）就能获取我需要的服务。包括找文件，问我的To-do是什么——“六点有什么安排呀”。第三个用可视化的目录展示信息。因为我创业，身边很多投资的朋友，大家都有要结构化、看到存储的东西的诉求。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/product-show-3.jpg" alt="product-show-3"></p><p><strong>比特熊</strong>：生活中这样的“机器人”其实无处不在，不知不觉让我们的生活变得很方便。比特熊以前对程序员或者工程师有“格子衫+眼镜”的印象，但现在发现程序员的生活面貌也有大变化，关于这点也想看看两位“身处其中”有什么实际感受？</p><p><strong>清华</strong>：可能现在大家不再是统一的格子衫，但还是能通过一些典型特征认出程序员的。这个行业，很多人一方面是因为工作忙，另一方面也是出于对技术的热爱，使得我们愿意把时间从生活倾斜到工作上。生活上的时间少了，就使我们养成一些固定的生活习惯，比如跟大家穿一样的衣服，用一样的机械键盘。<br>比如大家现在看到我穿的这款衣服，我大概有15件一模一样的。也不是完全一模一样，有两件是黑的，但条纹是一样的。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/t-shirt.jpg" alt="t-shirt"></p><p><strong>佳芮</strong>：以至于我一直觉得清华从来不换衣服，但我最惊讶的倒不是衣服没变过，因为我觉得对男生来说倒也正常，我最惊讶的是为什么他的衣服越来越新！</p><p><strong>清华</strong>：品牌也会更新换代的嘛！</p><p><strong>比特熊</strong>：说起来，《失控玩家》主角的衣柜也都是统一的“蓝衬衫+卡其裤”哦。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/closet.gif" alt="closet"></p><p><strong>佳芮</strong>：我认为这部电影非常好，因为工作的关系我想从人和机器的关系聊一聊。硬件变得越来越好，网速变得越来越快，人机交互的方式一直在发生变化。从最早的打电话，到和早期巨型计算机交流，再到鼠标键盘，通过触摸的方式，接下来可能是说句话就把事情给办了。<br>每次交互方式的变化都会巨大的产生商业机会，我们做的业务其实是下一代的基于即时通讯应用的跨平台的营销云。为什么说是下一代，我们原来通过网站、电话短信做的事今天用即时通讯来做。<br>我觉得人和机器的关系一直都是没什么变化的，机器一直在增强人的能力而不是替代人。不过大多数科幻片里，机器都是要完全取代人，矛盾也是由此引发的。</p><p><strong>比特熊</strong>：比特熊想起了柯洁，他输给AlphaGo后痛哭的照片大家应该都看过，但在采访中他表示自己其实是因为失误而懊悔，而不是单纯因为被AI打败难过。他觉得AI战胜人类本质是人类科技的进步，人类的新智慧以某种形式战胜了古老智慧，这其实是人类的自我超越。</p><p><strong>佳芮</strong>：对于我来说看到《失控玩家》的结尾我还蛮感动的，“代码是我写给你的情书”。</p><p><strong>比特熊</strong>：的确，这部电影不论是程序员主人公还是“失控”的guy，都很能引发共情，特别是正在处于这个行业领域和此刻世界的我们。电影里的许多情节简直就是“世另我”既视感！不过，在感叹于这些机器真高级的同时，人类的真实情感更让我觉得宝贵。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/mili-keys.jpg" alt="mili-keys"></p><p><strong>比特熊</strong>：这部电影也让我联想到最近大热的“元宇宙”。我在网上看到，说这个概念最早出自30年前发表的一部科幻小说《雪崩》，作者最初对他的表述是 元宇宙是与现实世界并行的一个虚拟空间，人们可以在其中生活，人类世界拥有的一切都可以在这个虚拟的数字世界找到，人类在现实世界里做过的事儿也可以在这个世界里完成。</p><p><strong>清华</strong>：人和人一开始只能面对面交流，后来可以打电话、用微信甚至用机器完成人和人的交流，或者完成人和这个世界的交流。再往后发展确实有可能出现类似元宇宙的东西，我们通过和元宇宙的内容交互，让它反馈给现实世界。因为如果完全我们不和现实世界互动，元宇宙就没什么意义了，那为什么要通过元宇宙和现实世界产生互动呢，我觉得它可以解决一些问题。<br>我经常问别人，你觉得未来50年的交通工具是什么，大家有各种幻想：50年后每个人都坐火箭，或者人人有单兵飞行器，或者很酷的飞行滑板。<br>这个时候我就会打断别人：2070年了为什么我还要出门呢？明显躺在家里更爽啊，至少是需要出门的时候才出门吧，上个班还要背着飞行器（笑）？</p><p><img src="/img/2021/09-microsoft-bitbear-talk/talk-3.jpg" alt="talk-3"></p><p>元宇宙至少解决了一个问题，就是我们只需要躺在家里跟元宇宙进行交互，不管是娱乐还是工作。元宇宙怎么反馈到现实世界是另外一个问题，比如说种地，不用派真人，我们是不是能把这件事情变成在元宇宙里面执行的一个操作，元宇宙再反馈到现实中的某个机器人。<br>这样子，元宇宙就变成了我们现实世界的一个映射，而且很明显也是一个更方便的映射，因为他只有信息的流动，没有物质的流动。把人这样一个巨型的物体，从一个地方运输到另一个地方需要的资源真的太多了。</p><p>只传送意识信息或者信号的话要快得多，未来世界为了减少像我这样的“巨型物质”的传送所带来的能量消耗，加快人和世界互相沟通，“元宇宙”还是很有必要的。</p><p><img src="/img/2021/09-microsoft-bitbear-talk/talk-4.jpg" alt="talk-4"></p><p><img src="/img/2021/09-microsoft-bitbear-talk/group-photo-1.jpeg" alt="group-photo-1"></p><p><img src="/img/2021/09-microsoft-bitbear-talk/group-photo-2.jpeg" alt="group-photo-2"></p><blockquote><p>比特熊有话说</p></blockquote><p><img src="/img/2021/09-microsoft-bitbear-talk/bitbear.jpeg" alt="bitbear"></p><p>程序员的世界其实很有趣，不只是外行搞不太懂的零和一。他们在做的事情不是让世界变得规整和机械，机器的进步是为了让人变得更好。或许他们会将“训练”和“测试”应用在日常生活中。但这样的他们是真实的甚至有点可爱。他们会在一些可以提升效率的事情上尽量节省时间，而把这些时间用在他们认为更有意义的事情上，不止技术，也有可能是全心投入到自己的爱好中，打游戏、运动甚至烹饪。</p><p>比特熊在这些“英雄”身上看到了他们最平凡、朴素的一面，当然还有他们身上难能可贵的对专业的钻研和对创新的持续追求。这些hero们在技术领域有着很多很亮眼的表现，而在现实生活中他们也有着自己的爱好和小习惯，让比特熊也能找到太多共同话题！他们喜欢通过任何窗口进行分享，如果你真心提问，我想他们很愿意回答。</p>]]></content>
      
      
      <categories>
          
          <category> microsoft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Microsoft </tag>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>福布斯中国发布2021年度30 Under 30榜单</title>
      <link href="/saas/2021-09-16-forbes-u30.html"/>
      <url>/saas/2021-09-16-forbes-u30.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2021/09-forbes-u30/teaser.webp" alt="teaser">  </p><p>2021年，新世纪的第22个年头，中国正经历百年难遇的巨大变局。商业社会生态变迁、国际关系站上拐点、新冠疫情的常态化均考验人们的信心。未来怎样？答案在年轻人身上。  </p><p>在中国，更深层次变革正在推进，消费、科技、医疗、碳中和等，无论是技术创新，还是其所引发的商业模式创新，为新旧经济动能的替换带来了产业支撑，也给青年群体带来了百年未有机遇。青年之势，百年之变。  </p><p>福布斯一贯以前瞻性的目光，寻找那些年龄在30岁以下，在业内崭露头角，或者展现出成为未来行业及社会翘楚的潜在力量。他们砥砺前行，不负韶华，在平凡中铸就伟大！这项评选被称为30 Under 30。  </p><p>今年的入围条件是1991年1月1日以后出生 ( 对上榜者年龄的计算也以1 月1 日为界)。他/她通常而言是一位优秀的创业者，公司关键岗位的创变推动者、一个较大团队的领导者、某个关键项目的负责人、某项科技发明的引领者以及不限于上述情况的各种开创者、领导者。通常，这些上榜者的公司总部或者核心业务在中国内地，评选涵盖那些在中国内地创业的外籍人士。  </p><p>10个行业300位年轻人登上2021福布斯中国30 Under 30 榜单。这些上榜者包括优秀的创业者、青年科学家、英姿飒爽的运动健儿和投身公益的年轻人等。上榜者中，年龄最小的为14岁，是体育领域的奥运跳水冠军全红婵。在东京奥运会女子单人10米台决赛中，全红婵五个动作拿下三个满分，以历史最高分夺冠。  </p><p>300名上榜者的平均年龄为27.7岁，比去年年轻0.2岁，半数以上拥有硕士及以上学历。  </p><p>从性别看，三分之一左右上榜者为女性。女性上榜者占比较高的领域为体育、艺术时尚和生活方式以及社会企业。男性上榜者占比最高的行业是工业制造和能源环保。  </p><p>北京、上海、深圳仍是上榜者最集中的城市。杭州、广州紧随其后。苏州、长沙、成都也因良好的创业氛围吸引年轻人。  </p><p>从教育背景上看，毕业于清华大学和浙江大学的上榜者占比较多，北京大学紧随其后。  </p><p>科技赋能的主旋律下，今年涌现出一批聚焦于前沿科技以及企业服务赛道的创业者。一方面，中国各行各业正经历数字化转型、降本增效的大潮；另外一方面，AI制药、新材料等新兴行业的崛起，也将一批聚焦“硬”科技的年轻人推向前台。同时，随着新能源、碳中和等新机遇的涌现和深入，不断演变出大量新技术、新产品和新商业模式，助力更多行业迈向低碳、绿色、可持续发展之路。  </p><p>青春无敌，未来可期。科研领域同样有不少新星闪耀，候选者的学术版图不再是清华、北大等传统科研高校，新型科研机构开始崭露头角，更有来自陕西、甘肃等西部地区的科学工作者参评。社会变革进一步塑形科研方向，那些渴望摘得科学果实的年轻人，正向着世界级难题发起一轮又一轮的挑战。  </p><p>今年榜单评选主要从影响力、绩效和创新三个维度考察候选者。我们邀请了近50位知名企业家、风险投资人、艺术家、高校教授，以及业内意见领袖担任评委，他们是各自领域的专家。福布斯中国按照行业和领域对申请者进行初步筛选，之后提交资料由评委挑选出他们认为合适的人选。福布斯中国编辑部进行统计和协调，最终得出候选名单。  </p><p>和往年一样，我们的评委们专业、高效地完成甑选工作。感谢他们，让我们的工作得以顺利推进，也让外界看到当下中国年轻人的风采。  </p><p>青春逢盛世，奋斗正当时！  </p><p><img src="/img/2021/09-forbes-u30/saas.webp" alt="saas">  </p><p>篇幅原因，我只放了企业科技榜单，更多内容可查看原文： <a href="https://www.forbeschina.com/entrepreneur/57412" target="_blank" rel="noopener">福布斯中国发布2021年度30 Under 30榜单</a></p>]]></content>
      
      
      <categories>
          
          <category> saas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> saas </tag>
            
            <tag> Forbes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神策数据CEO桑文锋：To B企业的“铁人四项”——产品、营销、服务和组织要齐头并进丨未来科技营</title>
      <link href="/saas/2021-08-24-saas-study.html"/>
      <url>/saas/2021-08-24-saas-study.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>坚持产品化，能用产品去解决的问题不要用服务解决，能用服务解决不要用咨询去解决，把咨询尽量服务化，服务尽量产品化；</p></blockquote><p>桑文锋认为To B企业的运作就像一只蝴蝶，拥有蝴蝶效应。其核心是三个方面：产品、营销、服务。其中产品是躯干，营销和服务是两只翅膀。而其背后更是需要强大的组织支撑。这四方面要齐头并进，不能有短板。</p><p>“在做决策时如果认知与市场普遍认知并没有本质区别时，建议创业者稍等一等，因为这时往往容易做出错误的决策。”桑文锋强调他十分重视认知问题，“我认为认知是未来的常识，正确的认知是未来发展的动力。”</p><p>在分享中，桑文锋多次提及创业多年来他最大的变化：对市场的敬畏不断提高。他表示市场是不以个人意志为转移的，创业者需要从IPM思维（想法-产品-市场）转变到MRP思维（市场-需求-产品）。真正弄清楚“市场是否足够大”“凭什么是你”两个问题。</p><p>桑文锋曾是百度8年大数据元老，从无到有构建了百度用户日志大数据平台，任大数据部技术经理。离开百度后，创办了神策数据，提供大数据分析和营销科技相关产品与服务，致力帮助中国企业实现数字化经营。2019年神策数据就已实现过亿营收。神策数据也成为同行中最受资本青睐的公司，6年融资5轮，其背后不乏襄禾资本、晨兴资本、DCM资本、华平投资、红杉资本中国基金等知名投资机构。</p><p>以下为分享实录，小饭桌作了不影响原意的整理，以飨读者。</p><p>To B企业的运作就像一只蝴蝶，拥有蝴蝶效应。我认为其核心是三个方面：产品、营销、服务。其中产品就像蝴蝶的躯干，而营销和服务分别是蝴蝶的翅膀。营销是如何把东西卖出去，服务是如何让客户用好产品，尤其是我们神策这类的产品型的To B公司。当然，其背后则需要一个强大的组织做支撑。</p><p><img src="/img/2021/08-saas-study/1.webp" alt="1"></p><p>所以我认为To B企业就是铁人四项：营销、产品、服务、组织，我们神策一直都是围绕这四方面思考，在我看来四方要齐头并进，不能有短板。</p><h2 id="1-产品：从可用到可卖再到规模化"><a href="#1-产品：从可用到可卖再到规模化" class="headerlink" title="1. 产品：从可用到可卖再到规模化"></a>1. 产品：从可用到可卖再到规模化</h2><p>首先在产品方面，我十分重视认知问题，即我们在这件事情上跟市场上的普遍认知有什么不同。我认为认知是未来的常识，就是在未来大家普遍认同、习以为常的事情。正确的认知是未来发展的动力，做决策、推新品时如果认知和市场上并没有什么本质区别，市场上大多数企业都在做着相似的事情，其表达的核心认知也是相似的时候，我建议创业者等一等，因为这时往往容易做出错误的决策。</p><p><img src="/img/2021/08-saas-study/2.webp" alt="2"></p><p>同时认知产生力量，正确的认知产生动力，错误的认知产生阻力，如果一个“认知”没有引领你进入产生动力的阶段，我认为它不是你的认知，而仅仅是你了解的一个知识点。类似网上曾流行的一句话“学了那么多的道理，依旧过不好这一生”，原因就在于你学了那么多的道理只是当作文件沉下去了，而不是成为一个升级包，也没有提升你操作系统的质量，因此它是没有价值的。</p><p>另外我认为看清变量对创业方向的把握而言也十分重要，创业者需要看清到底是市场、技术等哪个因素出现变化，针对性制定战略。</p><p><img src="/img/2021/08-saas-study/3.webp" alt="3"></p><p>神策在打造产品的时候，都是边做边总结，现在回首整体系统性的分析，To B和To C产品还是有很多不同的。To B产品我认为需要经历三个阶段：可用、可卖、规模化。</p><p>创业者们要做出真正有价值的东西，可用可卖。因为与To C产品不同的是，很多B端客户可能根本不了解你们产品的价值，也不清楚自己真正需要什么，但是出于对你的认可和信任就买了。</p><p>因此，往往你在产品可用之前就销售给客户了，这样就会形成假象，你认为卖得出去的产品一定是好东西。而事实却不是这样的，你的产品可能是不可用的，没有价值的。</p><p>另外，To B领域与To C不同的一点是，To B有时你并没有真正了解客户的需求，而客户也没有真正理解你的产品，但是在这种情况下往往仍然能够成交。这样就会带来困扰，让你不知道你要做什么动作，作用到哪里去。</p><p>最后就会进入第三个阶段——规模化，首先是销售规模化。我经常看到一些To B公司销售团队搭建的很慢，这与创始人本身的局限性是有关的，因为我们这些技术类型的人很多不善于跑客户，尤其是早期产品和方案还都不成熟。有的是直接招聘个销售让他去跑，还有的想先将产品打磨成熟然后再推向市场。</p><p>事实上，你晚一天推向市场就晚一天做市场验证，也就晚一天实现反馈，更晚一天实现迭代的循环。所以，我认为产品还是要早些推向市场，在这个过程中就可以迅速收集市场反馈然后去迭代。</p><p>在市场团队方面，我现在的核心要求就是获取有效线索，其次是品牌建设。不过我建议早期初创公司没必要做品牌建设，市场更多的还是做有效线索获取。</p><p>总结一下，在产品打造方面，不需要等到产品成熟了再推向市场，而是尽早把产品推向市场验证，得到反馈然后去迭代。另外就是要保持开放的心态，不断的学习，听取建议。</p><p>在To B产品打造方面我们总结了四条原则，第一是极致，永远做90分的产品而不是60分，永远有进步空间能做到更好，市场往往是99：1，如果想要做到赢者通吃，就要把事情做到极致；第二，坚持产品化，能用产品去解决的问题不要用服务解决，能用服务解决不要用咨询去解决，把咨询尽量服务化，服务尽量产品化；第三，不卖期货，只销售已有的功能，或者是三个月内确定发布的功能，不要过度许诺。很多其他 To B公司的销售不管产品能不能满足客户需求，都先把单子签过来，让产研团队交付，就会让团队很被动，打乱内部节奏；最后是价值交付，产品迭代要面向价值交付，这一点To C跟To B区别很大，To C产品发布即交付，客户即使用，但是To B产品发布和使用之间往往隔了半年时间，功能上线但是客户出于一些原因顾虑并没有立即使用，所以在打造产品的时候就要考虑交付的过程，不然就会出现产品功能发布了，但交付团队都不明白新功能有什么用的问题。</p><p><img src="/img/2021/08-saas-study/4.webp" alt="4"></p><p>另外，近两年我的认知有了更大的变化，就是我对市场越来越敬畏了。有时候不是你不努力，而是市场就是如此，是不以人的意志为转移的。我们需要从IPM思维（想法-产品-市场）转变到MRP思维（市场-需求-产品）。一般融资到了C轮之后投资人的逻辑就非常简单了，只关心两个问题：第一个“市场有多大”，第二个“凭什么是你”。</p><p><img src="/img/2021/08-saas-study/5.webp" alt="5"></p><h2 id="2-服务：产品化交付的补充"><a href="#2-服务：产品化交付的补充" class="headerlink" title="2. 服务：产品化交付的补充"></a>2. 服务：产品化交付的补充</h2><p>我认为To B产品核心有三个环节，一是需求感知，我们了解客户的需求是什么，二是产品迭代，三是价值交付，其中价值交付就与服务强相关。</p><p>在服务体系打造上我们分成三层，第一层就是产品矩阵，能用产品解决不要用服务，第二层就是服务，服务如果必不可少那就提升效率，通过流程化、组织化、工具化等方式。第三层是咨询，不过要尽量不做，或者尽量少做，只有战略级客户才会提供咨询，其余主要提供标准服务。</p><h2 id="3-商业模式：市场决定产品和服务"><a href="#3-商业模式：市场决定产品和服务" class="headerlink" title="3. 商业模式：市场决定产品和服务"></a>3. 商业模式：市场决定产品和服务</h2><p>在商业模式方面即SaaS Model，有许多数据指标需要我们关注。对于To B公司、SaaS公司营收是硬性指标，营收提高规模自然提高。P/S 倍数、续费率也是个关键指标，国内To B公司整体续费率比美国低20个点，国外平均续费率达到120%，中国较好的能达到100%，不过我们市场不同，我认为什么样的市场决定了什么样的产品和服务。另外就是年增长率，如果企业后期的增长率低于30%，那价值就很小了，还有毛利率，国内与美国比差距也是很大的。</p><p>还有一个有趣的指标值得去关注，就是营销费用占整体营收的比例，大型的SaaS公司他们中位数是50%，我认为最核心的还是以营销规模保持增长率保持营收规模。我目前关注更多的，还有服务中的客户数、续约率，服务中客户数这个指标反应了我们的健康度情况，所以客户的有效管理是很重要的，要了解有多少存活用户、多少流失用户，为什么流失。</p><h2 id="4-组织建设：用先进的认知统一思想"><a href="#4-组织建设：用先进的认知统一思想" class="headerlink" title="4. 组织建设：用先进的认知统一思想"></a>4. 组织建设：用先进的认知统一思想</h2><p>最后探讨一下组织建设，我们神策的管理理念就是两句话：用先进的认知统一思想，用科学的方法提升效率。认知是对未来的常识，就是现在很少有人认知到，但是未来会成为常识，但我们也不要期望自己了解的认知别人永远不知道，如果别人永远不知道说明这个认知的价值就没有那么大。</p><p>统一思想就是让少数人先进的认知变成组织的共识，因为CEO接受的信息是更广的，遇到的问题也更复杂，认知迭代也更快，但是你的团队可能没有跟上去，所以我们需要把这些认知写出来交给团队探讨共创，通过这种方式将少部分的认知变成一个群体的共识，只有这样才能发挥更大的力量。</p><p>另外科学方法，核心就是做假设检验，通过观察抓住规律去检验，具体就是两个方面，一个方面就是标准化、流程化，使其可重复，而另外一方面就是假设检验，可以证伪，这样才可以迭代。</p><p>神策的管理框架有三条，第一个是思想统一，战略共识，第二个是目标管理与团队协同，第三个是关键问题驱动与复盘。首先思想统一，战略共识，我认为认知对于组织管理很重要的原因，就是To B与To C的不同，在于C端用户不直接接触你团队的人，直接使用产品，而B端用户更多是人直接去对接服务的，核心就是“产品+人”，所以团队聚集的人越来越多，组织建设就十分重要了。</p><p>在组织建设方面，我们就需要向中国最成功的“创业团队”——共产党学习。我认为其成功的核心要素有四点：一是建立共同信仰；二是不断复盘反省；三是反复锤炼；四是建立组织机制，以目标管理促进团队协同。</p><p><img src="/img/2021/08-saas-study/6.webp" alt="6"></p><p>首先是共同信仰。信仰的威力是巨大的，当你拥有了信仰，就不会纠结许多鸡毛蒜皮的事情。在公司中，如果员工没有对整个事业的信仰，就会只关注如何对自己更有利。</p><p>那么信仰如何建立，信仰就是对一个问题的解答，大问题产生大信仰。那么我们这些创业团队为什么招人难，因为你回答的问题不够大，人才引进过来之后认为这个事情不够大，没有办法去吸引他为之奋斗20年。</p><p>其次就是反省机制，你从一个长线来看，它的大方向不变，虽然路途中有一些问题，但都及时的反省做出调整。其内部机制是批评与自我批评，反对本本主义，整风运动，这种及时纠偏的能力是其长久发展的生命力。</p><p>第三，一个伟大的组织是需要经历锤炼的，意志不坚定的、掉队的，不断被淘汰掉。经过几次战役、长征等锤炼后，这个团队的凝聚力等能量不断增强，威力也越来越大。</p><p>最后是组织机制，党委制、多人决策机制等。无论更换谁，组织不会散。现在很多创业团队，某一个高管走了就带走一批人，队伍就散了，那么你就要考虑是不是你的组织机制不行。</p><p>我总结企业管理的核心两个层面，一个是思想管理，一个是行动管理。思想管理怎么做，一个是树立愿景，志同道合其实就是在做思想管理，你的使命你的愿景是实际的，不是虚的。怎么成为实际的，就是不断拿着案子来探讨，是不是契合你的使命和愿景。能作为衡量标准，能不断地探讨，企业文化就是活的，而不是只挂在墙上。</p><p>另外是目标管理团队协同，这里就体现了OKR的价值。OKR这个管理方法像一个降落伞被打开了，每一层节点都打开了，做这些节点之间的对齐，其威力是非常大的。而且OKR本身需要在线化，写出来让大家看到，需要复盘。</p><p>关键问题驱动，这是在具体问题解决上我最喜欢的一个管理方法。问题永远有而且特别多，但是我们其实只需不断地抓住关键问题。在我看来，关键问题就是通向目标的主干路径上的阻塞性问题。</p><p>最后一点就是复盘和共创，复盘是面向过去的集体学习，共创是面向未来的集体学习。</p><p>复盘适合一线，共创对段位要求就比较高了。复盘肯定是集体，一个人复盘了解到的信息是不充分的，看问题的视角也是有偏颇的。同时要实事求是，要有高级的认知，五个小学生一起复盘如何做项目是无效的，还是需要老师点拨一下的。</p><p>共创就是让少数人的认知脱颖而出，然后让大家的认知对齐建立共识。</p><h2 id="5-桑文锋与未来科技营学员精彩对话实录"><a href="#5-桑文锋与未来科技营学员精彩对话实录" class="headerlink" title="5. 桑文锋与未来科技营学员精彩对话实录"></a>5. 桑文锋与未来科技营学员精彩对话实录</h2><ul><li>学员：请问您是如何由一个技术产品专家转变为一个企业家的？</li><li><p>桑文锋：<br>过奖了，还需要进步。不过这些年确实有很大的改变和进步，我在百度时，学到更多的是如何将一件事做到90分，但并没有学到如何决定哪些事要做，以及如何将做出来的东西卖出去。<br>创业前三年我认为最大的进步还是在营销上。之后我最大的变化还是在于对市场的重视和敬畏，当你拥有市场思维时，认知才会真正发生比较大的变化，否则的话还是做产品卖产品，没有站在市场的角度去思考问题。当你发生这种变化时，你会发现你的动作、公司内部的排兵布阵都会不同。</p></li><li><p>学员：首先请问SaaS产品如何去定价，又如何确定定价的增长幅度？其次想请教您“产品+交付”型的公司，销售的过程中，涉及到售前、销售和售后等，如何给链条上的员工进行比较公平的利益分配、建立激励机制？</p></li><li><p>桑文锋：<br>在定价方面，首要原则是价值决定价格，为什么有的一次性买卖只需要5000元，但你按年收费，每年20万，因为提供的服务不一样。至于定多少价格我认为市场本身会平衡的，期间肯定会不断地做调整。不过上调的价格肯定有一个区间，如果你超过了客户对你产品性价比的估量，那客户肯定不会买账。另外就是竞争情况，如果你的市场地位高那么价格高，第三、四名价格就可能调不上去。我们十分认同711便利店的理念，不是追求价格，而是追求这个价格上的物有所值。<br>第二个激励机制这个问题上，其实我们过去这一年多也在调整。起初客户谈成了，只给销售做了提成激励；2年之前我们开始设季度奖，与服务客户的续费情况挂钩；到目前为止我们更重视客户经营，就是包干到户，以经营小组进行分领域服务。不过我们还在迭代，希望更成体系。</p></li><li><p>学员：我想请教一下SaaS的垂直化与通用化问题，如何在行业垂直与产品标准化的通用上做权衡和决策？第二个问题是接下来神策要深入到营销领域，肯定会有行业属性强相关的部分，如何构建一支行业属性的咨询和销售以及服务团队？</p></li><li>桑文锋：<br>其实从2019年国庆之后我们就开始组建这个行业团队，我们成立了一个项目制的子公司，这个子公司就是基于神策的API，基于PaaS给客户做定制化开发的，我们后面也期望发展其他的合作伙伴共同去做。虽然的确我们在围绕具体某个行业打造解决方案，但我们的理想状态是不为某个行业做产品定制化开发，还是期望产品化平台化更强的，我们目前为止还没有到围绕一个行业，去研发一个单独的行业级产品的阶段。</li></ul><p>文章转载自： <a href="https://mp.weixin.qq.com/s/Jnb_U0Lol5uDPVyCiXP5uw" target="_blank" rel="noopener">小饭桌</a></p>]]></content>
      
      
      <categories>
          
          <category> saas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> saas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U&amp;AI Camp | AI for SDGs Youth Bootcamp - AI企业家如何推进实现可持续发展目标</title>
      <link href="/presentation/2021-08-10-ai-for-sdgs-youth-bootcamp.html"/>
      <url>/presentation/2021-08-10-ai-for-sdgs-youth-bootcamp.html</url>
      
        <content type="html"><![CDATA[<p>由清华大学人工智能国际治理研究院（I-AIIG）主办，联合国开发计划署（UNDP）支持、多家人工智能学术机构参与的“U&amp;AI Camp | AI for SDGs Youth Bootcamp——AI促进可持续发展青年创造营”已经启动全球招募，更多活动信息请关注官网：<a href="http://www.ai4sdgbootcamp.org" target="_blank" rel="noopener">www.ai4sdgbootcamp.org</a></p><p>四家科技公司创始人将带来《AI Entrepreneurs Advancing the SDGs——人工智能企业家如何推进实现可持续发展目标》主题圆桌讨论。</p><h2 id="SDG-授予李佳芮的-感谢信"><a href="#SDG-授予李佳芮的-感谢信" class="headerlink" title="SDG 授予李佳芮的 感谢信"></a>SDG 授予李佳芮的 感谢信</h2><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/loa.jpg" alt="loa"></p><h2 id="活动信息"><a href="#活动信息" class="headerlink" title="活动信息"></a>活动信息</h2><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/teaser.webp" alt="teaser"></p><h2 id="课程信息"><a href="#课程信息" class="headerlink" title="课程信息"></a>课程信息</h2><ul><li>时间：2021年8月10日 北京时间20:00-21:00（GMT+8:00）</li><li>主题：Panel Discussion: AI Entrepreneurs Advancing the SDGs——圆桌讨论：人工智能企业家如何推进实现可持续发展目标</li><li>语言：英语</li><li>课程简介：谁是利用人工智能来应对我们紧迫挑战的创变者？我们邀请了四家不同公司的领导者分享他们的工作和经验。他们分别是：<ul><li>The Ocean Data Alliance（海洋数据联盟）正在与全球城市网络合作，制定比较型智能海洋城市行动计划，将海洋数据投入解决海洋和气候危机的工作。</li><li>Owkin使用联合学习技术来加速医学研究，联合医院与制药公司共同探索医学洞见。</li><li>Defudger正在开发一个三层检测系统，能够验证数字内容的真实性，并在线更正错误信息。</li><li>JuziBot（句子互动）是一家在微信平台上为教育、医疗卫生、保险等客户提供智能营销和销售服务的初创公司。</li></ul></li><li>参与形式：线上</li><li>课程报名：<a href="https://undp.zoom.us/webinar/register/WN_zlU91tUvTRiI5nuxTBzT5A" target="_blank" rel="noopener">https://undp.zoom.us/webinar/register/WN_zlU91tUvTRiI5nuxTBzT5A</a></li></ul><h2 id="导师简介"><a href="#导师简介" class="headerlink" title="导师简介"></a>导师简介</h2><h3 id="多米尼克·马特·科瓦奇"><a href="#多米尼克·马特·科瓦奇" class="headerlink" title="多米尼克·马特·科瓦奇"></a>多米尼克·马特·科瓦奇</h3><p>Defudger首席运营官兼联合创始人</p><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/defudger.webp" alt="defudger"></p><p>自 2018 年以来，多米尼克一直在运营科技初创公司，与此同时，他在丹麦和德国完成了创业加速器。<br>他参加了十多次技术会议、研讨会和社区活动，在那里他对合成媒体和假新闻检测的未来发表了自己的见解。</p><h3 id="李佳芮"><a href="#李佳芮" class="headerlink" title="李佳芮"></a>李佳芮</h3><p>句子互动创始人 &amp; 首席执行官，微软人工智能最具价值专家 (AI MVP)</p><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/jiaruili.webp" alt="jiaruili"></p><p>李佳芮是GitHub 7,400+ Stars 开源项目 Wechaty 联合作者，创建并管理覆盖全球基于微信平台的聊天机器人开发者社区。</p><p>该社区帮助开发人员创作人工智能聊天机器人并搭建彼此交流的平台。目前，社区覆盖了来自中国、美国、英国、澳大利亚、加拿大等10多个国家的近10000名专注研究聊天机器人的开发者。</p><p>李佳芮是微信生态产品的开发、设计和运营专家，著有《Chatbot从0到1：对话式交互设计实践指南》。</p><p>过去六年中，她曾为百余家企业提供微信生态技术和运营服务，包括亚马逊、腾讯、京东、新华网、联想、微软、飞利浦、鹏金所等。</p><h3 id="史蒂文·阿德勒"><a href="#史蒂文·阿德勒" class="headerlink" title="史蒂文·阿德勒"></a>史蒂文·阿德勒</h3><p>海洋数据联盟首席执行官兼创始人</p><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/steven.webp" alt="steven"></p><p>史蒂文·阿德勒是海洋数据联盟的首席执行官和创始人。海洋数据联盟在联合国成立，致力于提供解决重大海洋问题的方案。</p><p>在加入海洋数据联盟之前，史蒂文是 IBM 的首席数据战略家和 IBM 技术领导研究院的成员。他协助创建了互联网保障和数据治理行业。</p><p>他曾在美国商务部数据咨询委员会、纽约公民自由委员会任职，并且是 W3C 和 OASIS 行业标准委员会的联合主席。</p><p>他拥有四项专利和两项美国总统志愿者领导奖，与他人合著了海洋科学论文、智慧城市白皮书，并在TEDx平台发表了关于非洲开放数据的演讲。</p><h3 id="托马斯·克洛泽尔"><a href="#托马斯·克洛泽尔" class="headerlink" title="托马斯·克洛泽尔"></a>托马斯·克洛泽尔</h3><p>Owkin首席执行官兼联合创始人</p><p><img src="/img/2021/08-ai-for-sdgs-youth-bootcamp/owkin.webp" alt="owkin"></p><p>托马斯是 Owkin公司的首席执行官兼联合创始人，主导医学研究和商业智能领域。他曾是巴黎亨利蒙多医院临床肿瘤血液学的助理教授。</p><p>托马斯还是威尔康奈尔医学院阿里·梅尔尼克实验室的前成员，在那里他联合领导了多个关于预测 B 细胞淋巴瘤对化疗的耐药性的项目。</p><p>托马斯引领Owkin的全球企业战略，在公司每个项目中主张以患者为中心，在开发突破性医疗技术的同时，优先考虑患者的健康。</p><p>活动链接： <a href="https://mp.weixin.qq.com/s/8srclmz8k8WXmVRade3wog" target="_blank" rel="noopener">今晚8点！U&amp;AI圆桌讨论 | 四家科技公司创始人共探AI企业家如何推进实现可持续发展目标</a></p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
            <tag> AI </tag>
            
            <tag> SDGS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wechaty 社区 &amp; 硬核桃社区：大学生玩转5G消息？So Easy！</title>
      <link href="/project/2021-07-30-walnut-5g-press.html"/>
      <url>/project/2021-07-30-walnut-5g-press.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>近期 硬核桃社区开展了一场面向在校大学生的开发者活动。<br>硬核桃@钢铁嘉 IronJia、Wechaty@李卓桓、Wechaty@李佳芮一直在活动中指导学生的开发工作。<br>昨天，传来了他们的最新进展——</p></blockquote><p>“<strong>可以收到！</strong>”</p><p>大二学生张瑞宁和邵琦在硬核桃社区的环境中成功发出了他们的第一条5G消息。</p><p>他们是“<strong>开源软件供应链点亮计划-暑期2021</strong>”（以下简称 暑期2021）活动中，参与“<strong>5G Chatbot项目</strong>”开发的两位学生。</p><p>他们是如何与硬核桃、5G消息结缘的呢？</p><p>这要从一场大学生暑期活动说起。</p><h2 id="01-大学生暑期活动"><a href="#01-大学生暑期活动" class="headerlink" title="01.大学生暑期活动"></a>01.大学生暑期活动</h2><p><img src="/img/2021/07-walnut-5g-press/student.webp" alt="student"></p><p>“暑期2021”（<a href="https://summer.iscas.ac.cn/" target="_blank" rel="noopener">https://summer.iscas.ac.cn/</a>），由中科院软件所与 openEuler 社区共同举办。</p><p>旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。</p><p>活动联合各大开源社区，针对重要开源软件的开发与维护提供项目，面向全球高校学生开放报名。</p><p>学生可自主选择感兴趣的项目进行申请，中选后可获得该软件资深维护者（社区导师）亲自指导的机会。</p><p>根据项目的难易程度和完成情况，参与者还可获取活动奖金和奖杯。</p><h2 id="02-”5G-Chatbot项目”"><a href="#02-”5G-Chatbot项目”" class="headerlink" title="02.”5G Chatbot项目”"></a>02.”5G Chatbot项目”</h2><p><img src="/img/2021/07-walnut-5g-press/walnut-wechaty.webp" alt="walnut-wechaty"></p><p>此次“暑期2021”活动中的“5G Chatbot项目”，是<strong>硬核桃5G消息开发者社区</strong>(<a href="http://www.5g-msg.com)与**Wechaty社区**(wechaty.js.org)首次合作，专为大学生开发者倾力打造的暑期项目。" target="_blank" rel="noopener">www.5g-msg.com)与**Wechaty社区**(wechaty.js.org)首次合作，专为大学生开发者倾力打造的暑期项目。</a></p><p>希望借此机会吸引社会各界关注5G消息行业发展，培养和发掘更多优秀的大学生开发者参与到5G消息行业中来。</p><p>“5G Chatbot项目”期间，硬核桃社区与Wechaty社区保持紧密合作，积极关注项目进展，帮助学生解决开发中遇到的问题，邀请技术大牛进行分享。</p><p>现阶段，两位大学生开发者已经正式投入“5G Chatbot项目”开发，并成功接入硬核桃5G消息开发环境，进行测试。</p><p>两位学生表示，开发中最大的问题就是5G消息在网上的参考资料很少，刚开始上手很难。但是在硬核桃导师 <strong>@钢铁嘉 IronJia</strong> 的帮助下，问题很快得到了解决。</p><p>在谈到对5G消息的认识时，学生张瑞宁说，“我觉得5G消息的功能非常强大，不仅支持纯文本消息，还支持图片、音频、视频、定位等富媒体消息，<strong>拓展了传统短信业务的功能，而且使用起来非常便捷。</strong>”</p><p>“<strong>我们认为5G消息具有广阔的应用前景，所以共同选择了这个项目。</strong> 5G消息是5G时代的生态级应用，基于GSMA RCS和UP标准构建，具备富媒体化、轻量化、交互化等特质。<strong>5G消息实现原生消息界面一站式线上业务体验，能形成更高效益的引流转化，是一种集成程度更高、可代替App的全新人机交互服务模式</strong>，将给企业客户带来极高的服务价值。”学生邵琦说。</p><h2 id="03-未来，更多的开发者活动"><a href="#03-未来，更多的开发者活动" class="headerlink" title="03.未来，更多的开发者活动"></a>03.未来，更多的开发者活动</h2><p><img src="/img/2021/07-walnut-5g-press/future.webp" alt="future"></p><p>公示的项目报告显示，两位学生从了解接口技术规范，到接入硬核桃环境进行编码和接口测试，再到最后成功进行接收和发送消息的测试</p><p>仅用了短短12天的时间。</p><p>“由于我们开始对服务器不熟悉占用了一些时间，而且暑假了嘛，其他活动也比较多，如果说<strong>实际的代码时间可能也就2个小时</strong>。”学生邵琦表示。</p><p>短期内，两位学生计划通过 Wechaty 加载 wechaty-puppet-5g-msg 模块，实现一个“ding/dong”功能，接收到文字消息‘ding’时，自动回复消息‘dong’。</p><p>硬核桃导师 <strong>@钢铁嘉 IronJia</strong> 谈起这次项目过程时说，“学生们对项目非常感兴趣，也非常的积极，技术基础也不错，未来可期。我们也很惊喜，他们可以在这么短的时间内成功使用我们的开发工具，某种程度上也增加了我们对自身产品的信心。希望我们可以帮助更多开发者更好的成长。”</p><p>未来，硬核桃社区还会参与和举办更多开发者活动，打造更多服务5G消息开发者的开发工具。</p><p>欢迎在校师生、Chatbot技术爱好者、各界研究人员参与到5G消息应用的开发中来，共同促进5G消息行业的发展。</p><p>“未来属于青年，希望寄予青年。”</p><p>注：5G Chatbot项目，<a href="https://wechaty.js.org/2021/07/15/ospp-plan-5g-chatbot-puppet/" target="_blank" rel="noopener">开发支持电信运营商 5G Chatbot/RCS 的 Wechaty 接入 Puppet 模块</a>，简称 5G Chatbot项目，项目ID：210220088</p><blockquote><p>编辑：硬核桃社区<br>Source: <a href="https://mp.weixin.qq.com/s/31qVyvmbHm4wHjeZNovvMg" target="_blank" rel="noopener">硬核桃 Walnut Hardcore</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wechaty </tag>
            
            <tag> ospp </tag>
            
            <tag> ospp-2021 </tag>
            
            <tag> wechaty-puppet-5g </tag>
            
            <tag> china-unicom </tag>
            
            <tag> 中国联通 </tag>
            
            <tag> 硬核桃社区 </tag>
            
            <tag> 5G </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Season Of Docs (GSoD) Guide</title>
      <link href="/presentation/2021-07-10-google-season-of-docs-guide.html"/>
      <url>/presentation/2021-07-10-google-season-of-docs-guide.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://developers.google.com/season-of-docs" target="_blank" rel="noopener">Google Season of Docs</a> is an annual program organized by Google.</p><p>This year, Wechaty has been recongnized by Google and accepted by the Season of Docs (GSoD) program! We are very proud of participating in GSoD’21!</p><p>Here is the related blog:</p><ul><li><a href="https://wechaty.js.org/2021/04/30/google-season-of-docs/" target="_blank" rel="noopener">Google Season of Docs ❤️ Wechaty</a>, Written By <a href="https://wechaty.js.org/contributors/huan/" target="_blank" rel="noopener">Huan</a></li><li><a href="https://wechaty.js.org/2021/05/08/gsod-2021-selected-technical-writers/" target="_blank" rel="noopener">Hello Wechaty GSoD’21 Technical Writers!</a>, Written By <a href="https://wechaty.js.org/contributors/huan/" target="_blank" rel="noopener">Huan</a></li><li><a href="https://wechaty.js.org/2021/06/22/gsod-2021-first-month-evaluation/" target="_blank" rel="noopener">GSoD’21 First Month Evaluation</a>, Written By <a href="https://wechaty.js.org/contributors/rohitesh-kumar-jain" target="_blank" rel="noopener">Rohitesh Kumar Jain</a></li></ul><p>We have some guide for GSoD like what we did in <a href="https://wechaty.js.org/2021/06/24/summer-wechaty-guide/" target="_blank" rel="noopener">OSPP - a Chinese clone of Google’s summer of code</a>. All of the tech writers involved in the project are required to complete their weekly work and phased work :</p><ul><li>Weekly work<ul><li>Every workday commit</li><li><a href="https://docs.google.com/spreadsheets/d/1QglSl5JuZuVom84Or8yGhHb3_YbRMDBPgccxoMmnBa0/edit#gid=978979489" target="_blank" rel="noopener">Wechaty GSoD’21 Weekly Follow-Ups</a></li><li>Weekly Zoom Meeting</li></ul></li><li>Phased work<ul><li>Proposal blog</li><li>Mid-term blog</li><li>Final blog</li></ul></li></ul><h2 id="Weekly-Work"><a href="#Weekly-Work" class="headerlink" title="Weekly Work"></a>Weekly Work</h2><p>A volunteer will organize the weekly meeting and write meeting notes &amp; publish blog posts with zoom meeting recording videos on YouTube embedded.</p><p>Here is the guideline for video-recording/downloading/uploading</p><ul><li>Download the recording which has a shared screen along with the gallery view</li><li>Crop the video at the beginning and the end of the meeting, the video should start to form the beginning of the meeting</li><li>Add a beautiful thumbnail to the video</li><li>Highlight the most important agenda of the video by adding timestamps like <a href="https://www.youtube.com/watch?v=hTkM_XPpFfU" target="_blank" rel="noopener">kick-off meeting recording</a></li></ul><blockquote><p>Refer from: <a href="https://wechaty.js.org/2021/05/12/gsod-2021-volunteering-proposal/" target="_blank" rel="noopener">Google Season of Docs 2021 Team Proposal - Volunteering</a></p></blockquote><h3 id="PR-Reviewing-amp-Approving-Workflow"><a href="#PR-Reviewing-amp-Approving-Workflow" class="headerlink" title="PR Reviewing &amp; Approving Workflow"></a>PR Reviewing &amp; Approving Workflow</h3><h4 id="For-writers"><a href="#For-writers" class="headerlink" title="For writers"></a>For writers</h4><p>Writers who are in the same team are <strong>REQUIRED</strong> to review each other’s PR, and give “Request changes” or “Approve”<br>Writers are encouraged to give “Request changes”, “Approve”, or “Comment” to any PRs. (please contribute to the whole team by doing it!)</p><h4 id="For-volunteers"><a href="#For-volunteers" class="headerlink" title="For volunteers"></a>For volunteers</h4><p>Volunteers are <strong>REQUIRED</strong> to review all PRs created by writers and give “Request changes” or “Approve”</p><h4 id="Mentors-are-in-charge-of-reviewing-the-PR-after"><a href="#Mentors-are-in-charge-of-reviewing-the-PR-after" class="headerlink" title="Mentors are in charge of reviewing the PR after"></a>Mentors are in charge of reviewing the PR after</h4><ul><li>Volunteers create an issue list about the high priority PR</li><li>PR passed all the CI tests (CLA &amp; unit testings)</li><li>PR gets approved by all the project team members (if applicable, 0-1 approval)</li><li>PR gets approved by all volunteers (2 approvals)</li></ul><h2 id="Phased-Work"><a href="#Phased-Work" class="headerlink" title="Phased Work"></a>Phased Work</h2><p>The three blogs at the beginning, middle and the end should be committed to <strong><a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org</a> Repo</strong>. Before submitting the report, you can read the <a href="https://wechaty.js.org/2021/06/23/the-wechaty-way/" target="_blank" rel="noopener">Wechaty community specifications</a> and know wechaty better:</p><ol><li>Introduction of Wechaty</li><li>Community communication channels</li><li>Meeting specifications</li><li>Blog publishing specifications</li><li>Issue release specification</li><li>PR release specification</li></ol><p>It is important to note that the blog publishing specifications describe in detail how to submit a blog, how to embed a video in the blog, etc., which will be used in the mid-term and final reports. The specific requirements for the three reports are as follows.</p><h3 id="Proposal-Blog"><a href="#Proposal-Blog" class="headerlink" title="Proposal Blog"></a>Proposal Blog</h3><p>All of the tech writers have already finished this part. Here is some specification, if you have time, you can modify the previous blog to make it more beautiful.</p><h4 id="1-Personal-Profile"><a href="#1-Personal-Profile" class="headerlink" title="1. Personal Profile"></a>1. Personal Profile</h4><p>Create your contributor profile (if you are a first-time contributor). You can commit to <a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org</a> Repo’s <code>jekyll/_contributors</code> directory.</p><p>You can refer to the following developer introduction content writing page:</p><ul><li><a href="https://wechaty.js.org/contributors/rohitesh-kumar-jain/" target="_blank" rel="noopener">Rohitesh Kumar Jain</a>, Volunteers Team.</li><li><a href="http://wechaty.js.org/contributors/sajenjeshan1222/" target="_blank" rel="noopener">sajen sarvajith</a>, Landing Page Team.</li><li><a href="http://wechaty.js.org/contributors/soumi7/" target="_blank" rel="noopener">Soumi Bardhan</a>, References Team.</li><li><a href="http://wechaty.js.org/contributors/sbis04/" target="_blank" rel="noopener">Souvik Biswas</a>, Tutorial Team.</li></ul><h4 id="2-Proposal-report"><a href="#2-Proposal-report" class="headerlink" title="2. Proposal report"></a>2. Proposal report</h4><ul><li>Title: <code>GSoD 2021-Proposal-your_title</code></li><li>File name: <code>2021-XX-XX-gsod-plan-XX</code></li><li>Category: <code>gsod</code></li><li>Tag(at least include): <code>google</code>,<code>gsod-2021</code>,<code>gsod</code>,<code>docs</code>,<code>plan</code></li><li><p>Content at lease includes as follows:</p><ul><li>Team Member</li><li>Proposal Video Presentation</li><li>Proposal Introduction</li><li>Roles and Responsibilities</li><li>Team Goal/Deliverables</li><li>Proposal Timeline</li></ul></li><li><p><a href="https://wechaty.js.org/2021/05/12/gsod-2021-volunteering-proposal/" target="_blank" rel="noopener">Google Season of Docs 2021 Team Proposal - Volunteering</a></p></li><li><a href="https://wechaty.js.org/2021/05/11/gsod-2021-team-proposal-tutorials/" target="_blank" rel="noopener">Google Season of Docs 2021 Team Proposal - Tutorials</a></li></ul><h3 id="Mid-term-Blog"><a href="#Mid-term-Blog" class="headerlink" title="Mid-term Blog"></a>Mid-term Blog</h3><p>There will be a GSoD Mid-term Demo Day, volunteers can organize this Mid-term Demo Day on a regular weekly zoom meeting.</p><p>Each writer in the same team should submit a mid-term blog together with the YouTube Midterm demo day video and a summary of the mid-term work. The video needs to be uploaded to youtube, and contact Huan to add it to the playlist of wechaty.</p><p>Report template as follows:</p><ul><li>Title: <code>GSoD 2021-Mid-Term-your_title</code></li><li>File name: <code>2021-XX-XX-gsod-mid-term-XX</code></li><li>Category: <code>gsod</code></li><li>Tag(at least include): <code>google</code>,<code>gsod-2021</code>,<code>gsod</code>,<code>docs</code>,<code>mid-term</code></li><li>Content at lease includes as follows:<ul><li>Proposal<ul><li>Team Member</li><li>Description/Abstract</li><li>Timeline</li></ul></li><li>Proposal Mid-term Video Presentation</li><li>Progress<ul><li>Work Done</li><li>Problems encountered and solutions</li><li>Follow-up work arrangement</li></ul></li></ul></li></ul><h3 id="Final-Blog"><a href="#Final-Blog" class="headerlink" title="Final Blog"></a>Final Blog</h3><p>Each writer in the same team should submit a final blog together with the YouTube final video and a summary of the whole work. The video needs to be uploaded to youtube, and contact Huan to add it to the playlist of wechaty.</p><p>The final Blog is to be written after most of PRs get merged, volunteers will announce the time to write a final blog when it is ready.</p><p>Report template as follows:</p><ul><li>Title: <code>GSoD 2021-Final-your_title</code></li><li>File name: <code>2021-XX-XX-gsod-final-XX</code></li><li>Category: <code>gsod</code></li><li>Tag(at least include): <code>google</code>,<code>gsod-2021</code>,<code>gsod</code>,<code>docs</code>,<code>final</code></li><li>Content at lease includes as follows:<ul><li>Proposal<ul><li>Team Member</li><li>Description/Abstract</li><li>Timeline</li></ul></li><li>Outcome<ul><li>Links to the added documentation</li><li>Proposal Final Video Presentation</li><li>Problems encountered and solutions</li></ul></li><li>Voluteer Assessment</li></ul></li></ul><h2 id="Submit-Expense"><a href="#Submit-Expense" class="headerlink" title="Submit Expense"></a>Submit Expense</h2><p>As <a href="https://developers.google.com/season-of-docs/docs/org-payments" target="_blank" rel="noopener">GSoD Payment Intro</a> showed:</p><ul><li>Organizations will receive 40% of the grant after hiring a technical writer. Organizations will receive invitations to submit their first expense starting June 10, 2021.</li><li>Organizations will receive the remaining 60% of the grant after successful completion of the Season of Docs program. Organizations will receive invitations to submit their final expense starting December 14, 2021.</li></ul><p>So for all of the tech writers in Wechaty:</p><ul><li>Get the first 40% of the base stipend after submitting the mid-term blog and reviewed by volunteers and mentors.</li><li>Get the remaining stipends after they submitting the final-term blog and reviewed by volunteers and mentors.</li></ul><p>Tech writers can submit expenses on <a href="https://opencollective.com/google-season-of-docs/expenses/new" target="_blank" rel="noopener">Wechaty-GSod-Opencollective</a>, see more at <a href="https://docs.opencollective.com/help/expenses-and-getting-paid/expenses" target="_blank" rel="noopener">Opencollective docs about expenses and getting paid</a></p><h2 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h2><p>To Be Added in the future.</p><h2 id="After-GSod"><a href="#After-GSod" class="headerlink" title="After GSod"></a>After GSod</h2><p>After the GSoD’21, tech writers should publish a blog post talking about the whole project of GSoD’21 Wechaty from your perspective</p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wechaty </tag>
            
            <tag> Google </tag>
            
            <tag> gsod </tag>
            
            <tag> gsod-2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源之夏 2021 指导手册</title>
      <link href="/presentation/2021-06-24-summer-wechaty-guide.html"/>
      <url>/presentation/2021-06-24-summer-wechaty-guide.html</url>
      
        <content type="html"><![CDATA[<p>开源软件供应链点亮计划-暑期 2021 的见面会在 <a href="https://wechaty.js.org/contributors/ninetailskim/" target="_blank" rel="noopener">ninetailskim</a>的主持下圆满完成，关于开源软件供应链点亮计划的详细内容，详见 <a href="https://wechaty.js.org/2021/06/24/wechaty-soc-kick-off-meeting/" target="_blank" rel="noopener">Wechaty Summer of Code 2021 Kickoff Meeting</a></p><h2 id="开源软件供应链点亮计划组委会活动里程碑"><a href="#开源软件供应链点亮计划组委会活动里程碑" class="headerlink" title="开源软件供应链点亮计划组委会活动里程碑"></a>开源软件供应链点亮计划组委会活动里程碑</h2><p><img src="/img/2021/06-summer-wechaty-guide/agenda.webp" alt="agenda"></p><p>注：所有通过结项考核的同学都会收到对应项目的全额奖金，项目是否评为优秀不影响奖金的发放。</p><h3 id="组委会官方指南"><a href="#组委会官方指南" class="headerlink" title="组委会官方指南"></a>组委会官方指南</h3><ul><li>学生参与的日程，详见 <a href="https://summer.iscas.ac.cn/help/student/" target="_blank" rel="noopener">学生指南</a></li><li>社区导师参与的日程，详见 <a href="https://summer.iscas.ac.cn/help/mentor/" target="_blank" rel="noopener">导师指南</a></li><li>社区参与的日程，详见 <a href="https://summer.iscas.ac.cn/help/community/" target="_blank" rel="noopener">社区指南</a></li></ul><h2 id="Wechaty-社区工作"><a href="#Wechaty-社区工作" class="headerlink" title="Wechaty 社区工作"></a>Wechaty 社区工作</h2><p>Wechaty 社区秉持开源开放的的原则，所有会议记录、在线会议、阶段性报告等视频、文档资料都会对社区完全开放。对自己的视频、文档资料介意开放的同学，请谨慎考虑加入。</p><p>参与项目的同学和导师需要分别完成 <strong>日常工作</strong> 和 <strong>阶段性工作</strong>：</p><ul><li>日常工作<ul><li>学生每周在 issue 下回复进度报告</li><li>导师每周在 issue 下根据学生的进度报告进行评分</li></ul></li><li>阶段性工作<ul><li>2021.7.15 期初报告</li><li>2021.8.28 期中 Demo Day</li><li>2021.8.30 期中报告</li><li>2021.9.30 期末报告</li></ul></li></ul><p>以下是具体的要求、模板以及过往学生的内容参考</p><h3 id="日常工作"><a href="#日常工作" class="headerlink" title="日常工作"></a>日常工作</h3><p>日常工作以 OSPP 2020 的优秀学生突出贡献奖获得者<a href="https://wechaty.js.org/contributors/univerone/" target="_blank" rel="noopener">江姗姗</a>的周报告和导师总结为例，详见<a href="https://github.com/wechaty/summer-of-wechaty/issues/10" target="_blank" rel="noopener">编写一个“每日一句”插件</a></p><h4 id="报告模板"><a href="#报告模板" class="headerlink" title="报告模板"></a>报告模板</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># [项目名称] 进度报告</span></span><br><span class="line"></span><br><span class="line">日期：XXXX-XX-XX</span><br><span class="line"></span><br><span class="line"><span class="section">## 本周完成的成果</span></span><br><span class="line"><span class="bullet">1. </span>XX </span><br><span class="line"><span class="bullet">1. </span>XX</span><br><span class="line"></span><br><span class="line"><span class="section">## 本周遇到的困难和需要配合的地方</span></span><br><span class="line"><span class="bullet">1. </span>XX</span><br><span class="line"></span><br><span class="line"><span class="section">## 下周的开发计划和预计成果</span></span><br><span class="line"><span class="bullet">1. </span>XX</span><br><span class="line"></span><br><span class="line"><span class="section">## 其他需要说明和同步的事项</span></span><br><span class="line"><span class="bullet">1. </span>XX</span><br></pre></td></tr></table></figure><h4 id="导师评分模板"><a href="#导师评分模板" class="headerlink" title="导师评分模板"></a>导师评分模板</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># [项目名称] 导师评分</span></span><br><span class="line"></span><br><span class="line">日期：XXXX-XX-XX</span><br><span class="line"></span><br><span class="line"><span class="section">## 本周进度报告的评分</span></span><br><span class="line"><span class="bullet">- </span>[ ] 1: Deliverable not acceptable</span><br><span class="line"><span class="bullet">- </span>[ ] 2: Deliverable is below expectations</span><br><span class="line"><span class="bullet">- </span>[ ] 3: Deliverable is OK</span><br><span class="line"><span class="bullet">- </span>[ ] 4: Deliverable is above expectations</span><br><span class="line"><span class="bullet">- </span>[ ] 5: Deliverable is perfect</span><br><span class="line"></span><br><span class="line"><span class="section">## 其他需要说明和同步的事项</span></span><br><span class="line">XXX</span><br></pre></td></tr></table></figure><h3 id="阶段性工作"><a href="#阶段性工作" class="headerlink" title="阶段性工作"></a>阶段性工作</h3><p>期初、期中和期末三篇报告要<strong>以博客的方式提交到[ <a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org</a> Repo</strong> ]中，在提交报告之前，可以先阅读 <a href="https://wechaty.js.org/2021/06/23/the-wechaty-way/" target="_blank" rel="noopener">Wechaty 社区规范</a>, 至少了解下面内容：</p><ol><li>Wechaty 的介绍</li><li>社区沟通渠道</li><li>会议规范</li><li>博客发布规范</li><li>Issue 发布规范</li><li>PR 发布规范</li></ol><p>尤其要注意的是在博客发布规范中详细的介绍了如何提交博客、如何在博客中嵌入视频等，在期中、期末报告中会用到。具体三篇报告的要求如下。</p><h4 id="期初报告"><a href="#期初报告" class="headerlink" title="期初报告"></a>期初报告</h4><h5 id="1-个人介绍"><a href="#1-个人介绍" class="headerlink" title="1. 个人介绍"></a>1. 个人介绍</h5><p>请将自己的介绍以 markdown 的方式提交到 <a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org</a> Repo 的 <code>jekyll/_contributors</code> 目录下。</p><p>可以参考以下的开发者介绍内容编写页：</p><ul><li><a href="https://raw.githubusercontent.com/wechaty/wechaty.js.org/master/jekyll/_contributors/wj-mcat.md" target="_blank" rel="noopener">吴京京, wj-mcat, Creator of python-wechaty</a></li><li><a href="https://raw.githubusercontent.com/wechaty/wechaty.js.org/master/jekyll/_contributors/univerone.md" target="_blank" rel="noopener">江姗姗, univerone, OSPP 2020的优秀学生突出贡献奖获得者</a></li></ul><h5 id="2-期初报告"><a href="#2-期初报告" class="headerlink" title="2. 期初报告"></a>2. 期初报告</h5><ul><li>标题： <code>OSPP 2021-期初报告-你的标题</code></li><li>文件名： <code>2021-XX-XX-ospp-plan-XX</code></li><li>报告 category 为：<code>project</code>, <code>ospp</code></li><li>报告 tag 至少包括：<code>summer-of-wechaty</code>,<code>summer-2021</code>,<code>ospp</code>,<code>ospp-2021</code>,<code>plan</code></li><li>报告内容至少包括：<ul><li>项目名称</li><li>合作者介绍</li><li>导师</li><li>项目介绍</li><li>项目计划</li></ul></li></ul><h5 id="3-OSPP-2020-学生期初报告参考："><a href="#3-OSPP-2020-学生期初报告参考：" class="headerlink" title="3. OSPP 2020 学生期初报告参考："></a>3. OSPP 2020 学生期初报告参考：</h5><ul><li><a href="https://wechaty.js.org/2020/07/19/go-wechaty-plugin-dev-plan/" target="_blank" rel="noopener">暑期2020 为 go-wechaty 设计实现插件体系 计划书</a></li><li><a href="https://wechaty.js.org/2020/07/18/python-wechaty-groupchat-assistant-bot/" target="_blank" rel="noopener">基于python-wechaty的群聊助手机器人</a></li><li><a href="https://wechaty.js.org/2020/07/29/wechaty-puppet-lark-plan-blog/" target="_blank" rel="noopener">基于开放 API 封装 Wechaty 接口下的飞书聊天机器人：期初</a></li><li><a href="https://wechaty.js.org/2020/07/18/python-wechaty-meme-bot/" target="_blank" rel="noopener">基于Python-wechaty建立一个斗图机器人</a></li><li><a href="https://wechaty.js.org/2020/07/18/wechaty-words-per-day-plugin-plan/" target="_blank" rel="noopener">暑期2020 编写一个“每日一句”插件 计划书</a></li><li><a href="https://wechaty.js.org/2020/07/28/wechaty-rpa-kuaishou-plan/" target="_blank" rel="noopener">暑期2020[基于 RPA 封装 Wechaty 接口下的快手聊天机器人]计划书</a></li><li><a href="https://wechaty.js.org/2020/07/28/wechaty-puppet-douyin/" target="_blank" rel="noopener">基于RPA封装的Wechaty接口下的抖音聊天机器人</a></li><li><a href="https://wechaty.js.org/2020/08/19/puppet-work-plan/" target="_blank" rel="noopener">暑期2020 基于开放 API 封装 Wechaty 接口下的企业微信聊天机器人 计划书</a></li><li><a href="https://wechaty.js.org/2020/07/30/go-wechaty-gh-optimization-poc/" target="_blank" rel="noopener">暑期2020 Go-wechaty Github Action optimization 计划书</a></li><li><a href="https://wechaty.js.org/2020/07/27/java-wechaty-transplant/" target="_blank" rel="noopener">Wechaty Java 移植组件开发</a></li><li><a href="https://wechaty.js.org/2020/07/19/wechaty-puppet-dingtalk/" target="_blank" rel="noopener">基于开放 API 封装 Wechaty 接口下的钉钉聊天机器人 具体计划</a></li></ul><h4 id="期中报告"><a href="#期中报告" class="headerlink" title="期中报告"></a>期中报告</h4><p>期中报告提交之前会有一个 OSPP 的 Mid-term Demo Day， 导师和学生会在线上进行期中汇报。提交的期中报告包括 Mid-term Demo Day 的视频和期中报告内容总结。<a href="https://wechaty.js.org/2020/08/22/summer-2020-wechaty-soc-midterm-demo-day/" target="_blank" rel="noopener">点击这里查看暑期2020中期路演日（Mid-Term Demo Day）会议实况</a></p><h5 id="学生开发者"><a href="#学生开发者" class="headerlink" title="学生开发者"></a>学生开发者</h5><h6 id="1-期中-Demo-Day-视频"><a href="#1-期中-Demo-Day-视频" class="headerlink" title="1. 期中 Demo Day 视频"></a>1. 期中 Demo Day 视频</h6><p>每位开发者需要进行中期的展示，视频将添加至博客、提交到组委会中，并剪辑成完成的路演日视频，向全社区展示，吸引更多的开发者参与到对应的项目中：</p><ul><li>提交3-5分钟的、有真人出镜（视频会议软件录制）的、基于PPT的展示。</li><li>提交不限时长的、有真人出镜（视频会议软件录制）的 Live Code。</li></ul><p>学生要在8月26日之前将视频链接回复在对应项目的 Github Issue 下面进行提交，视频由同学们直接上传到Youtube / B站中，并直接将视频的链接和将视频以iframe方式附在各个博客中：</p><ul><li>视频需要上传到 youtube 中，并联系 <a href="https://wechaty.js.org/contributors/huan/" target="_blank" rel="noopener">Huan</a> 添加到 wechaty 的 playlist 中。</li><li>考虑到国内用户，可以上传到 bilibili 或者腾讯视频中</li></ul><p>可以参考去年优秀学生突出贡献奖获得者<a href="https://wechaty.js.org/contributors/univerone/" target="_blank" rel="noopener">江姗姗</a>的视频：</p><ul><li><a href="https://www.bilibili.com/video/BV1vT4y157x5/" target="_blank" rel="noopener">期中汇报视频</a></li><li><a href="https://www.bilibili.com/video/BV1ih411d75h" target="_blank" rel="noopener">Live Coding 视频</a></li></ul><h6 id="2-期中报告"><a href="#2-期中报告" class="headerlink" title="2. 期中报告"></a>2. 期中报告</h6><p>在8月30日前，以Pull Requests形式在<a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org Repo</a>中提交博客。</p><ul><li>标题： <code>OSPP 2021-期中报告-你的标题</code></li><li>文件名： <code>2021-XX-XX-ospp-mid-term-XX</code></li><li>报告 category 为：<code>project</code>, <code>ospp</code></li><li>报告 tag 至少包括：<code>summer-of-wechaty</code>,<code>summer-2021</code>,<code>ospp</code>,<code>ospp-2021</code>,<code>mid-term</code>，<code>ospp</code></li><li>报告内容至少包括：<ul><li>项目信息<ul><li>项目名称</li><li>方案描述</li><li>时间规划</li></ul></li><li>项目进度<ul><li>已完成工作</li><li>遇到的问题及解决方案</li><li>后续工作安排</li></ul></li><li>项目成果<ul><li>期中汇报的视频，可以参考 <a href="https://wechaty.js.org/2020/08/24/add-video-to-wechaty-blog/" target="_blank" rel="noopener">使用jekyll include在wechaty博客中快速插入视频</a></li><li>Live Coding/Demo 视频</li></ul></li></ul></li></ul><p>可以完整复制本文对应的Markdown作为博客内容模板，但也可添加更多的补充信息。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">“[<span class="string">开源软件供应链点亮计划-暑期2021</span>](<span class="link">https://summer.iscas.ac.cn</span>)”（以下简称 暑期2021）是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动。旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目，并向全球高校学生开放报名。 学生可自主选择感兴趣的项目进行申请，并在中选后获得该软件资深维护者（社区导师）亲自指导的机会。 根据项目的难易程度和完成情况，参与者还可获取“开源软件供应链点亮计划-暑期2021”活动奖金和奖杯。</span><br><span class="line"></span><br><span class="line">本项目 [项目名称] 系 暑期2021 支持的开源项目。</span><br><span class="line"></span><br><span class="line"><span class="section">## [项目名称]信息</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>导师：[导师名称]  </span><br><span class="line"><span class="bullet">- </span>学生：[学生名称]  </span><br><span class="line"><span class="bullet">- </span>项目介绍：[Github Issue 链接，如 https://github.com/wechaty/summer/issues/74]  </span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>项目名称：  </span><br><span class="line"><span class="bullet">- </span>方案描述：  </span><br><span class="line"><span class="bullet">- </span>时间规划：  </span><br><span class="line"></span><br><span class="line"><span class="section">## 项目进度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>已完成工作：  </span><br><span class="line">  <span class="emphasis">*根据原定方案和时间规划，描述当前已有的工作成果*</span>  </span><br><span class="line"><span class="bullet">- </span>遇到的问题及解决方案：   </span><br><span class="line">  <span class="emphasis">*可以侧重描述总结与心得*</span>  </span><br><span class="line"><span class="bullet">- </span>后续工作安排：  </span><br><span class="line">  <span class="emphasis">*描述是否需要调整工作计划等*</span>  </span><br><span class="line"></span><br><span class="line"><span class="section">## 项目成果</span></span><br><span class="line"></span><br><span class="line">项目仓库: <span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">github.com</span>/<span class="attr">XX</span>/<span class="attr">XX</span>&gt;</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="section">### live coding视频:</span></span><br><span class="line">&#123;% raw %&#125; </span><br><span class="line">&#123;% include iframe.html src="视频链接" %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line"><span class="section">### PPT展示视频:</span></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% include iframe.html src="视频链接" %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line"><span class="section">### 项目PPT:</span></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% include iframe.html src="pdf链接" %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line"><span class="section">## 联系我们</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>项目链接：[Github Issue 链接，如 https://github.com/wechaty/summer/issues/74]  </span><br><span class="line"><span class="bullet">- </span>联系方式：</span><br></pre></td></tr></table></figure><h6 id="3-OSPP-2020-学生期中报告参考："><a href="#3-OSPP-2020-学生期中报告参考：" class="headerlink" title="3. OSPP 2020 学生期中报告参考："></a>3. OSPP 2020 学生期中报告参考：</h6><ul><li><a href="https://wechaty.js.org/2020/08/19/wechaty-puppet-lark-mid-term-blog/" target="_blank" rel="noopener">基于开放 API 封装 Wechaty 接口下的飞书聊天机器人：期中</a></li><li><a href="https://wechaty.js.org/2020/08/15/wechaty-words-per-day-plugin-mid-term/" target="_blank" rel="noopener">暑期2020 编写一个“每日一句”插件 POC 成果展示</a></li><li><a href="https://wechaty.js.org/2020/08/14/python-wechaty-groupchat-assistant-bot-poc/" target="_blank" rel="noopener">暑期2020 基于python-wechaty的群聊助手机器人 POC 成果展示</a></li><li><a href="https://wechaty.js.org/2020/08/20/wechaty-puppet-kuaishou-mid-term/" target="_blank" rel="noopener">暑期2020 基于 RPA 封装 Wechaty 接口下的快手聊天机器人 中期报告</a></li><li><a href="https://wechaty.js.org/2020/08/17/java-wechaty-transplant-midpoc/" target="_blank" rel="noopener">Wechaty Java 移植组件开发</a></li></ul><h5 id="社区导师"><a href="#社区导师" class="headerlink" title="社区导师"></a>社区导师</h5><h6 id="1-“暑期2021”组委会评审报告"><a href="#1-“暑期2021”组委会评审报告" class="headerlink" title="1. “暑期2021”组委会评审报告"></a>1. “暑期2021”组委会评审报告</h6><p>08月16日 - 08月22日期间，将评审报告在组委会的 Gitlab 上的 Issue 中提交，并配合组委会进行中期审核。</p><h6 id="2-Wechaty-社区中期博客评审"><a href="#2-Wechaty-社区中期博客评审" class="headerlink" title="2. Wechaty 社区中期博客评审"></a>2. Wechaty 社区中期博客评审</h6><p>在8月30日前以Pull Requests形式在wechaty.github.io的学生对应博客下，补充评审结果的相关信息。</p><p>可以完整复制本文对应的Markdown作为博客内容模板，但也可添加更多的补充信息。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 评审对象</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>评审内容：<span class="emphasis">*中期报告|结项报告*</span></span><br><span class="line"><span class="bullet">- </span>提交人：<span class="emphasis">*学生姓名*</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 评审结果</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>项目完成度：<span class="emphasis">*评价学生是否按照原定方案实施项目，以及完成情况如何*</span></span><br><span class="line"><span class="bullet">- </span>学生参与度：<span class="emphasis">*评价学生在项目实施过程中是否积极参与*</span></span><br><span class="line"><span class="bullet">- </span>代码贡献量：<span class="emphasis">*评价学生在该项目中，为开源项目贡献的代码量*</span></span><br><span class="line"><span class="bullet">- </span>综合评价及建议：<span class="emphasis">*总结性评价，并给出改进建议*</span></span><br><span class="line"><span class="bullet">- </span>最终评审结果：“通过” 或者 “不通过” （“不通过” 意为着项目终止，且学生将无法获得相应的奖金）</span><br></pre></td></tr></table></figure><h4 id="期末报告"><a href="#期末报告" class="headerlink" title="期末报告"></a>期末报告</h4><h5 id="1-期末视频"><a href="#1-期末视频" class="headerlink" title="1. 期末视频"></a>1. 期末视频</h5><ul><li>视频需要上传到 youtube 中，并联系 <a href="https://wechaty.js.org/contributors/huan/" target="_blank" rel="noopener">Huan</a> 添加到 wechaty 的 playlist 中。</li><li>考虑到国内用户，可以上传到 bilibili 或者腾讯视频中</li></ul><p>可以参考去年飞书项目参与学生，今年飞书项目导师<a href="https://wechaty.js.org/contributors/roxanne718/" target="_blank" rel="noopener">范蕊</a>的视频：</p><ul><li><a href="https://www.youtube.com/watch?v=eutz5EMlJCI" target="_blank" rel="noopener">SOC-基于开放 API 封装 Wechaty 接口下的飞书聊天机器人-结项汇报</a></li><li><a href="https://www.youtube.com/watch?v=_y5DktHdL9U" target="_blank" rel="noopener">SOC-基于开放 API 封装 Wechaty 接口下的飞书聊天机器人-Demo演示</a></li></ul><h5 id="2-期末报告"><a href="#2-期末报告" class="headerlink" title="2. 期末报告"></a>2. 期末报告</h5><ul><li>标题： <code>OSPP 2021-结项报告-你的标题</code></li><li>文件名： <code>2021-XX-XX-ospp-final-XX</code></li><li>报告 category 为：<code>project</code>, <code>ospp</code></li><li>报告 tag 至少包括：<code>summer-of-wechaty</code>,<code>summer-2021</code>,<code>ospp</code>,<code>ospp-2021</code>,<code>final</code></li><li>报告内容至少包括：<ul><li>项目信息<ul><li>项目名称</li><li>方案描述</li><li>时间规划</li></ul></li><li>项目总结<ul><li>项目成果</li><li>期末汇报视频</li><li>期末汇报 PPT</li><li>遇到的问题及解决方案</li></ul></li><li>导师审核<ul><li>评审对象</li><li>评审结果</li></ul></li></ul></li></ul><h5 id="3-OSPP-2020-学生期中报告参考：-1"><a href="#3-OSPP-2020-学生期中报告参考：-1" class="headerlink" title="3. OSPP 2020 学生期中报告参考："></a>3. OSPP 2020 学生期中报告参考：</h5><ul><li><a href="https://wechaty.js.org/2020/09/27/go-wechaty-plugin/" target="_blank" rel="noopener">暑期2020 为 go-wechaty 设计实现插件体系 结项报告</a></li><li><a href="https://wechaty.js.org/2020/09/26/chassist-bot-final/" target="_blank" rel="noopener">暑期2020 基于python-wechaty的群聊助手机器人 结项成果展示</a></li><li><a href="https://wechaty.js.org/2020/09/30/wechaty-puppet-lark-final-blog/" target="_blank" rel="noopener">基于开放 API 封装 Wechaty 接口下的飞书聊天机器人：期末</a></li><li><a href="https://wechaty.js.org/2020/09/27/python-wechaty-meme-bot-final/" target="_blank" rel="noopener">基于Python-wechaty建立一个斗图机器人 POC 结项博客</a></li><li><a href="https://wechaty.js.org/2020/09/26/wechaty-words-per-day-plugin-final/" target="_blank" rel="noopener">暑期2020 编写一个“每日一句”插件 结项报告</a></li><li><a href="https://wechaty.js.org/2020/10/13/wechaty-puppet-douyin-final-term/" target="_blank" rel="noopener">基于RPA封装的Wechaty接口下的抖音聊天机器人结项报告</a></li><li><a href="https://wechaty.js.org/2020/09/28/puppet-work-final/" target="_blank" rel="noopener">暑期2020 基于开放 API 封装 Wechaty 接口下的企业微信聊天机器人 终结成果展示</a></li></ul><h2 id="OSPP-2020-更多内容介绍"><a href="#OSPP-2020-更多内容介绍" class="headerlink" title="OSPP 2020 更多内容介绍"></a>OSPP 2020 更多内容介绍</h2><ul><li><a href="https://wechaty.js.org/2020/07/20/wechaty-soc-kick-off-meeting/" target="_blank" rel="noopener">Wechaty Summer of Code 2020 Kickoff Meeting</a></li><li><a href="https://docs.google.com/document/d/1fVCk8qRYc4RKGMf2UY5HOe07hEhPUOpGC34v88GEFJg/edit#heading=h.5ztnno5qivcb" target="_blank" rel="noopener">Middle Term Demo Day</a></li><li>结项<ul><li><a href="https://wechaty.js.org/2020/12/31/summer-2020-student-developers/" target="_blank" rel="noopener">OSPP 项目总结： 今年夏天，Wechaty 社区与 9 位开源后浪的故事</a></li><li><a href="https://wechaty.js.org/2020/11/14/summer-2020-wechaty/" target="_blank" rel="noopener">开源软件供应链点亮计划暑期 2020 公布结果：基于 Wechaty 开发的项目斩获突出贡献奖和最具潜力两大奖项！</a></li><li><a href="https://wechaty.js.org/2021/02/17/summer-wechaty-nanjing-summit-journey/" target="_blank" rel="noopener">获奖学生： 一次愉快的南京开源峰会之旅</a></li></ul></li><li><a href="https://docs.google.com/spreadsheets/d/1XcDoIczyIclqXP1p90Sz7S0n4Q22xjFzJmjPFlU2g1E/edit#gid=1646451274" target="_blank" rel="noopener">OSPP 2020 项目介绍、期初、期中、期末报告汇总表</a></li></ul><h2 id="优秀项目评选"><a href="#优秀项目评选" class="headerlink" title="优秀项目评选"></a>优秀项目评选</h2><p>2020年，经过3个月的努力，最终151位同学通过了结项审核，同学们的结项报告及日常研发工作得到了社区及组委会的一致认可。从项目角度（项目完成质量、代码的可读性、文档的完整度使得项目具有可延续性）、社区角度（学生对社区的贡献度、完成项目对社区的重要性等）、学生角度（学生参与活动的进步程度和快速学习能力）、开源角度（学生展现出未来持续贡献开源的潜力和意愿）等多方面综合评审后，得出了<a href="https://isrc.iscas.ac.cn/summer2020/#/announcement" target="_blank" rel="noopener">暑期2020的最终奖项</a></p><ul><li>Wechaty 社区的 @univerone (江姗姗) 同学荣获暑期2020的优秀学生突出贡献奖！</li><li>Wechaty 社区的 @kxz18 (孔详哲) 同学荣获暑期2020的优秀学生最具潜力奖！</li></ul><p>今年，Wechaty 还会为特别优秀的同学和项目提供如下奖项：</p><ul><li>Wechaty 优秀项目奖</li><li>结项之后，优质项目将会被 merge 到 Wechaty 官方 org 下。</li></ul><p>期待在2021年的夏天，你也能在3个月后，顺利通过结项审核，并赢得 OSPP 颁发的优秀奖励！</p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wechaty </tag>
            
            <tag> open-source </tag>
            
            <tag> summer-2021 </tag>
            
            <tag> summer-of-wechaty </tag>
            
            <tag> ospp </tag>
            
            <tag> ospp-2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wechaty 社区开源协作最佳实践指南</title>
      <link href="/presentation/2021-06-23-the-wechaty-way.html"/>
      <url>/presentation/2021-06-23-the-wechaty-way.html</url>
      
        <content type="html"><![CDATA[<p>Wechaty (Conversational RPA SDK) 2016 年发布于 GitHub，是一个基于 Apache-2.0 许可证的开源项目。经过5年多的发展，现在 Wechaty 开源社区已经拥有数十位 Committers，百余位 Contributors ，并被超过一万名 GitHub 开发者 Star。目前，使用 Wechaty 的开发者已覆盖数万人，并拥有基于微信群的数千人活跃开发者群。</p><p>Wechaty 社区的 Contributors 遍布全球多个国家地区，和各大互联网公司，职业背景从程序员到设计师，从大学教授到创业者，非常多样化。GitHub 上有千余个开源项目基于 Wechaty 构建了聊天机器人，这些开发者用户也极大地促进了社区的活跃和发展。</p><p>Wechaty自身对代码质量的管理，使用了 GitHub Actions 的 DevOps 工具完成了 CI/CD 工作流，从自动化单元测试到自动打包集成测试，从自动发布 NPM 包到自动构建和发布对应版本的 Docker Image ，实现了全自动的社区代码发布，极大的提高了社区的协同效率。</p><p>在开源社区管理上，Wechaty 遵循 The Apache Way ，拥有 PMC / Committer 管理制度，和完善的 Issue / PR / Release 等管理制度。截止2021年，Wechaty 已经有近百万次 NPM 安装下载，并由社区自发推动了 Python, Go, Java, Scala, .NET, PHP, Rust 等语言的适配和发布，是国内最活跃的 Conversational AI Chatbot 开发者社区。</p><h2 id="Wechaty-介绍-PPT"><a href="#Wechaty-介绍-PPT" class="headerlink" title="Wechaty 介绍 PPT"></a>Wechaty 介绍 PPT</h2><p>通过阅读下面3个PPT，你可以对Wechaty及其发展历程有一个基础的了解。</p><ul><li>2016: <a href="https://docs.google.com/presentation/d/13oUOIEnzdLWO6KZWztD_pMuu22AQ3SIMjk2wp8f-f18/edit#slide=id.g194ee6e600_0_51" target="_blank" rel="noopener">Wechaty 101: from v0.0 to v0.7</a></li><li>2016-2020: <a href="https://docs.google.com/presentation/d/1eRNrKnCpdnsmplTwtZzmtGZgrPoNCmOnitmHKVc6iVU/edit#slide=id.g8568e8a985_3_8" target="_blank" rel="noopener">Open-source Wechaty: 2016 to 2020</a></li><li>2021: <a href="https://docs.google.com/presentation/d/1aJ9j0VoRk0Dkyyajy3Z-zEI0QcpmpTjcCcabEXxo4JM/edit#slide=id.p" target="_blank" rel="noopener">Wechaty 2021</a></li></ul><h2 id="社区沟通"><a href="#社区沟通" class="headerlink" title="社区沟通"></a>社区沟通</h2><p>Wechaty 社区持续秉承信息开放透明：</p><ul><li>首选沟通渠道是 <a href="https://gitter.im/wechaty/wechaty" target="_blank" rel="noopener">Gitter</a>, 因为 Gitter 保存了所有的历史沟通记录，即使你是刚刚加入社区的开发者，你也能追溯到第一天社区成员都讨论过哪些内容。</li><li>次优选的沟通渠道是加入我们的 Mailing List (发送邮件给 <a href="mailto:wechaty@googlegroups.com" target="_blank" rel="noopener">wechaty@googlegroups.com</a> 即可加入)，我在 2019 年和 Apache 基金会主席 Craig 聊过： <strong>If it didn’t happen on list, it didn’t happen.</strong> 保证社区内容开放透明并以邮件存档是一件非常重要的事情，所以我们也非常推荐大家通过 Wechaty 的 Mailing List 来沟通。</li></ul><p>以下是 Wechaty 的所有沟通渠道：</p><ul><li><a href="https://gitter.im/wechaty/wechaty" target="_blank" rel="noopener">Gitter</a></li><li>Mailing List：发送邮件给 <a href="mailto:wechaty@googlegroups.com" target="_blank" rel="noopener">wechaty@googlegroups.com</a> 即可加入</li><li><a href="https://github.com/wechaty/wechaty#raising_hand-join-us" target="_blank" rel="noopener">WeChat Room: WeChaty Developers’ Home</a>  </li><li><a href="https://github.com/wechaty/wechaty/discussions" target="_blank" rel="noopener">Discussion</a></li><li><a href="https://stackoverflow.com/questions/tagged/wechaty" target="_blank" rel="noopener">Stack Overflow</a></li><li><a href="https://t.me/wechaty" target="_blank" rel="noopener">Telegram</a></li><li><a href="https://twitter.com/chatieio" target="_blank" rel="noopener">Twitter</a></li></ul><h2 id="Wechaty-更多链接"><a href="#Wechaty-更多链接" class="headerlink" title="Wechaty 更多链接"></a>Wechaty 更多链接</h2><p>除了社区沟通的渠道，你也可以在这里了解更多 Wechaty 相关内容。</p><ul><li><a href="https://wechaty.js.org/blog/" target="_blank" rel="noopener">Blog</a>： 这里是可以看到 Wechaty 的所有博客</li><li><a href="https://wechaty.js.org/contributors/" target="_blank" rel="noopener">Wechaty Contributors</a>： 来这里可以看到所有 Wechaty Contributor 的介绍</li><li><a href="https://docs.google.com/document/d/1fVCk8qRYc4RKGMf2UY5HOe07hEhPUOpGC34v88GEFJg/edit#heading=h.64c95c3y2l4v" target="_blank" rel="noopener">Meeting Notes</a>：Wechaty 的每次会议记录的内容。</li><li><a href="https://wechaty.js.org/docs/marketing/branding/" target="_blank" rel="noopener">Branding Guides</a>：使用 Wechaty 的 logo 等素材内容</li><li><a href="https://www.youtube.com/playlist?list=PL8hd9KDTdarDXf_Rxtr8meKhxtgcXMInh" target="_blank" rel="noopener">YouTube</a>： Wechaty 所有的视频清单</li><li><a href="https://opencollective.com/wechaty" target="_blank" rel="noopener">Open Collective</a>：为 Wechaty 捐赠的唯一通道</li><li><a href="https://drive.google.com/drive/folders/1KTnB3EOZo3nFRFSWoFc2-7LM7MgKQLzM" target="_blank" rel="noopener">Google Drive</a>： Wechaty 所有的文件存档</li><li><a href="https://photos.google.com/share/AF1QipOWKUfUkjw-VzE0skrjmCwbwIWwuBiI7Li4UCbdXH62n8iH2ITnvDbPTsx4eBl8dw?key=cy1NdWFoUGpXanVmczVHSm84TVg1LXJWeW5HTDhR" target="_blank" rel="noopener">Photo Album</a>：Wechaty 活动的精选照片</li><li><a href="https://docs.google.com/document/d/1fVCk8qRYc4RKGMf2UY5HOe07hEhPUOpGC34v88GEFJg/edit#heading=h.64c95c3y2l4v" target="_blank" rel="noopener">Hall of Fame</a>：了解 Wechaty 名人堂</li></ul><h2 id="Wechaty-会议流程最佳实践指南"><a href="#Wechaty-会议流程最佳实践指南" class="headerlink" title="Wechaty 会议流程最佳实践指南"></a>Wechaty 会议流程最佳实践指南</h2><p>Wechaty 社区希望每一次会议尽可能让所有参与者都能专注参与，并且获得正向产出，保证会议简洁高效和社区透明，Wechaty 的会议有以下三个重要工具及使用指南。</p><h3 id="1-Wechaty-Meeting-Notes"><a href="#1-Wechaty-Meeting-Notes" class="headerlink" title="1. Wechaty Meeting Notes"></a>1. Wechaty Meeting Notes</h3><p>Meeting Notes 有以下几个价值：</p><ul><li><strong>透明</strong>：社区开的每一个会都会记录在 <a href="https://docs.google.com/document/d/1fVCk8qRYc4RKGMf2UY5HOe07hEhPUOpGC34v88GEFJg/edit#heading=h.64c95c3y2l4v" target="_blank" rel="noopener">Meeting Notes</a> 中，即使你刚刚加入社区，你也可以在 Meeting Notes 里面看到过去的会议内容。</li><li><strong>高效</strong>：俗话说，“不打无准备之仗”，同样的道理，“不开无准备之会”，做好开会前的准备工作，对开好一个会起到至关重要的作用， 每次开会之前，参会者都要提前在 Meeting Notes 里面写好会议议题，保证参会的人在参会之前明确知道讨论内容，提高开会效率。</li></ul><p>这是 Meeting Notes 的模板内容(可以在 Meeting Notes 最底部拿到文字版，我这里放了图片方便看格式)：</p><p><img src="/img/2021/06-the-wechaty-way/meeting-notes.png" alt="meeting-notes"></p><p>具体使用流程指南：</p><ol><li>组织者在开会之前来 <a href="https://docs.google.com/document/d/1fVCk8qRYc4RKGMf2UY5HOe07hEhPUOpGC34v88GEFJg/edit#heading=h.64c95c3y2l4v" target="_blank" rel="noopener">Meeting Notes</a> 写好会议地点和时间，通常情况下，会议都是公开的，任何人都可以通过 Meeting Notes 中的 Zoom 链接视频参会。</li><li>参会者要在 <strong>Attendees</strong> 中注册自己的信息，包括：<ol><li>姓名</li><li>一句话介绍</li><li>邮箱（非常重要，因为主持人后续可能会发送邮件到这个邮箱）</li><li>时区（Wechaty 作为一个国际型社区，经常会有海外的参会者）</li></ol></li><li>开会之前，参会者要在 Agenda 中写下你的议题，以 <strong>[姓名] 内容</strong> 的方式写进去，这样可以让参会者知道哪些人有哪些不同的议题</li><li>除了会议议题外，你也可以在 Question 的版块写下你的问题，问题同样也可以被其他人评论，填写格式依然是 <strong>[姓名] 内容</strong></li><li>任何人在都可以任何时候都可以评论其他人的议题，评论方式是在内容下一行，缩进斜体的方式以 <strong>[姓名] 内容</strong> 的方式填写进去。</li><li>我们非常鼓励在开会其他人发表意见的时候，你同步在 Meeting Notes 在议题下发表评论，因为你写的内容大家都会看到，越多的讨论就会有越多的产出。</li><li>需要注意的是，Agenda 和 Question 是一定要在会议开始前写进去的，这样保证参会者能提前了解内容； 但是评论是可以在任何时候（会议前&amp;会议中）写进去的，这样保证会议的内容都可被存档。</li></ol><h3 id="Zoom-会议"><a href="#Zoom-会议" class="headerlink" title="Zoom 会议"></a>Zoom 会议</h3><p>社区在条件允许的情况下，尽可能保证每一次会议都可以线上参与，参与的方式是使用 Zoom 会议，每次zoom会议都会进行视频录制，这样没有参会的人也可以看会议的视频回放。</p><ul><li>Zoom 下载地址：<a href="https://zoom.us/download#client_4meeting" target="_blank" rel="noopener">Download</a></li><li>参会链接：<a href="https://zoom.us/j/6505033788" target="_blank" rel="noopener">https://zoom.us/j/6505033788</a>  </li><li>参会密码：huan</li></ul><h3 id="会议视频"><a href="#会议视频" class="headerlink" title="会议视频"></a>会议视频</h3><p>为了保证会议的沉淀，重大线上会议会要求的主持者在会议结束后将会议视频上传到 <a href="https://www.youtube.com/playlist?list=PL8hd9KDTdarDXf_Rxtr8meKhxtgcXMInh" target="_blank" rel="noopener">Youtube</a> 同时完成以下内容：</p><ul><li>在<strong>公开范围</strong>里设置成 <code>公开</code></li><li>添加到 wechaty 的 playlist 中（主持人若没有添加权限，可以找 <a href="https://wechaty.js.org/contributors/huan/" target="_blank" rel="noopener">Huan</a> 申请）</li><li>撰写视频说明</li><li>在视频说明中，通过添加 <code>00:00</code> 等时间的方式，在视频进度条上添加视频章节，具体可以参考：<a href="https://support.google.com/youtube/answer/9884579?hl=zh-Hans" target="_blank" rel="noopener">Youtube 如何在进度条上添加章节</a> 章节会将视频拆分为多个部分，方便观看者快速跳转到视频的不同部分。</li></ul><p><a href="https://www.youtube.com/watch?v=hTkM_XPpFfU&amp;list=PL8hd9KDTdarDXf_Rxtr8meKhxtgcXMInh&amp;index=43" target="_blank" rel="noopener">Wechaty ❤️ Google Season of Docs: Kick-off meeting with 20 Technical Writers!</a> 就是一个很好的示例。因为一次会议的时间很长，其他人看视频的时候就可以很容易根据下图介绍知道 <strong>视频中 0:01:41 的时候讲的内容是 Introducing the Meeting Agenda</strong>， 同时点击 <strong>0:01:41</strong> 可以快速跳转到视频播放的地方。</p><p><img src="/img/2021/06-the-wechaty-way/youtube-example.jpg" alt="youtube-example"></p><p>上传视频以后，主持人要去社区发布一个会议的博客，并嵌入视频内容，这样就能保证这次会议进行了存档并可以共享个社区的任何开发者。</p><h3 id="会议博客"><a href="#会议博客" class="headerlink" title="会议博客"></a>会议博客</h3><p>为了保证社区的每一次会议都能够有内容沉淀，重大会议后需要些会议博客，<a href="#Wechaty 博客发布规范">博客撰写</a>会在下一个小节介绍。 一次会议博客至少要包括下面的内容：</p><ul><li>会议背景介绍</li><li>会议合影</li><li>参会人</li><li>Zoom 会议视频</li><li>会议议程（不要把Meeting Notes 的会议议程粘进去，而是用 Youtube 中做好的视频切割链接，这样方便读者可以快速的看自己关注的会议内容）</li></ul><h4 id="会议博客例子"><a href="#会议博客例子" class="headerlink" title="会议博客例子"></a>会议博客例子</h4><p>Wechaty 社区组织 Google Season Of Docs 的 Tech Writer 的会议博客 <a href="https://wechaty.js.org/2021/05/08/gsod-2021-selected-technical-writers/" target="_blank" rel="noopener">Hello Wechaty GSoD’21 Technical Writers</a> 是一个很好的会议博客案例，完整的包含了上面的要求，建议第一次写会议博客的人先来看下这个案例。</p><h2 id="Wechaty-博客发布流程指南"><a href="#Wechaty-博客发布流程指南" class="headerlink" title="Wechaty 博客发布流程指南"></a>Wechaty 博客发布流程指南</h2><p>任何人都可以通过在 <a href="https://github.com/wechaty/wechaty.js.org" target="_blank" rel="noopener">wechaty.js.org</a> Repo 下面通过发布 PR 的方式发布博客。</p><ul><li><a href="https://github.com/wechaty/wechaty.js.org#how-to-post-a-blog" target="_blank" rel="noopener">如何发布一篇 Wechaty 博客</a></li><li><a href="https://github.com/wechaty/wechaty.js.org#guidelines-for-writing-a-blog-post" target="_blank" rel="noopener">Wechaty 博客的撰写指南</a></li><li><a href="https://github.com/wechaty/wechaty.js.org#how-to-run-tests" target="_blank" rel="noopener">本地测试保证博客内容没有问题</a></li><li><a href="https://github.com/wechaty/wechaty.js.org#how-to-preview-your-changes" target="_blank" rel="noopener">本地预览</a></li></ul><h3 id="在博客中插入视频"><a href="#在博客中插入视频" class="headerlink" title="在博客中插入视频"></a>在博客中插入视频</h3><p>下面是在会议博客中嵌入视频的代码的简单案例，作为<code>include</code>标签的src参数传入视频链接即可。</p>undefined<p><a href="https://wechaty.js.org/contributors/univerone/" target="_blank" rel="noopener">univerone</a> 写了一篇非常详细的博客<a href="https://wechaty.js.org/2020/08/24/add-video-to-wechaty-blog/" target="_blank" rel="noopener">使用jekyll include在wechaty博客中快速插入视频</a>，介绍了如何优雅的在博客中插入视频，有兴趣的同学也可以深入博客研究。</p><h3 id="小白入门发布博客"><a href="#小白入门发布博客" class="headerlink" title="小白入门发布博客"></a>小白入门发布博客</h3><p>如果你是完全小白，可以参考 <a href="https://wechaty.js.org/contributors/atorber/" target="_blank" rel="noopener">atorber</a> 的这篇博客: <a href="https://wechaty.js.org/2021/04/22/how-to-publish-blog-on-wechaty/" target="_blank" rel="noopener">入门：小白如何在wechaty社区发布自己的第一篇博客（一）</a> 通过大量的截图一步一步告诉你如何发布Wechaty博客。</p><h2 id="Wechaty-Issue-发布流程指南"><a href="#Wechaty-Issue-发布流程指南" class="headerlink" title="Wechaty Issue 发布流程指南"></a>Wechaty Issue 发布流程指南</h2><p>社区希望遇到任何代码问题，都通过 issue 进行交流。</p><p>强烈反对把代码截图或者日志截图直接发到微信群里，问大家为什么运行不了，或者直接问这事什么错误。一个截图是无法给出全面信息的，而且非常不利于归档传播给更多的开发者。当你提出一个有价值的 issue 的时候，实际上可以极大的避免其他开发者踩坑。</p><p>当然，在发布 issue 之前，也强烈建议你在 issue 列表中进行搜索，看这个 issue 是不是别人已经提过了，甚至已经有人给出了很好的解决办法。</p><p>发布 issue 的时候，建议按照 issue 模板发布 issue， 这样方便社区里的人更好的为你提供帮助。issue 分为3个类别：</p><h3 id="1-报-Bug"><a href="#1-报-Bug" class="headerlink" title="1. 报 Bug"></a>1. 报 Bug</h3><p>模板内容见：<a href="https://github.com/wechaty/wechaty/blob/master/.github/ISSUE_TEMPLATE/wechaty-bug-report.md" target="_blank" rel="noopener">Bug Report</a></p><p>报 Bug 最重要的事情是<strong>复现</strong>，只有可复现的bug，才可被解决。具体来讲，至少需要你给出以下的信息：</p><ul><li>Wechaty 版本号、使用了哪一个 wechaty puppet、node 的版本和操作系统</li><li>详细的描述这个bug</li><li>明确的复现步骤</li><li>按照你的步骤操作后，期待出现的现象</li><li>按照你的步骤操作后，实际出现的现象</li><li>相关的完整日志</li></ul><h3 id="2-提新需求"><a href="#2-提新需求" class="headerlink" title="2. 提新需求"></a>2. 提新需求</h3><p>模板内容见：<a href="https://github.com/wechaty/wechaty/blob/master/.github/ISSUE_TEMPLATE/wechaty-feature-request.md" target="_blank" rel="noopener">Feature Request</a></p><p>当你提出希望社区增加一个新的功能的时候，你需要详细的描述出为什么需要，以及你期待的这个需求具体的样子。你描述的越详细，越容易得到其他开发者的支持。被其他开发者支持的多的需求，越容易被提到更高的优先级上。</p><h3 id="3-问问题"><a href="#3-问问题" class="headerlink" title="3. 问问题"></a>3. 问问题</h3><p>模板内容见：<a href="https://github.com/wechaty/wechaty/blob/master/.github/ISSUE_TEMPLATE/wechaty-question.md" target="_blank" rel="noopener">Question</a></p><p>社区不希望你在 issue 中提问，最好的方式是去 <a href="https://stackoverflow.com/questions/tagged/wechaty" target="_blank" rel="noopener">StackOverflow</a> 上提问。</p><p>Wechaty 的 Contributor <a href="https://stackoverflow.com/users/2125837/xpt" target="_blank" rel="noopener">xpt</a> 在 StackOverflow 有超过 10K 的 reputation, 他专门为 wechaty 创建了 tag，所以你在 StackOverflow 上通过搜索 wechaty 是能看到所有关于wechaty的问题的。同时，也建议开发者去  <a href="https://stackoverflow.com/questions/tagged/wechaty" target="_blank" rel="noopener">StackOverflow</a> 提问并打上 wechaty 的标签，方便其他开发者搜索相关问题。</p><h2 id="Wechaty-PR-发布流程指南"><a href="#Wechaty-PR-发布流程指南" class="headerlink" title="Wechaty PR 发布流程指南"></a>Wechaty PR 发布流程指南</h2><p>如果你不是 PR 一个博客，在 wechaty PR 之前一定要新建一个 issue，说清楚你要解决的问题，然后再发一个 PR， 并在这个 PR 中关联对应的 issue 链接，这样做的目的是明确告诉大家你提这个 PR 在解决什么问题，而不是只是提交一堆代码。</p><p>此外，开发者在提交 PR 之前一定要按照 PR 模板的要求：</p><ul><li>明确这是一个新功能开发还是一个bug修复</li><li>为这次提交的内容增加了测试用例</li><li>通过 CI 测试，展示形式是 Github Action 变绿了</li><li>完成 CLA 的签署</li><li>关联相关的 Issue 链接</li></ul><p><img src="/img/2021/06-the-wechaty-way/pr.png" alt="pr"></p><h2 id="Wechaty-RFC"><a href="#Wechaty-RFC" class="headerlink" title="Wechaty RFC"></a>Wechaty RFC</h2><p>如果是一个比较大的提案，建议先提一个 proposal，描述一下你要干什么、为什么要干这个事情、它能带来什么收益、方案是什么以及分析备选方案的优缺点等，我们会让你提个 Issue 进行讨论，最后以讨论后的 proposal 为基础，开始后面的开发。</p><p>如这是 Wechaty Commiter <a href="https://wechaty.js.org/contributors/windmemory/" target="_blank" rel="noopener">高原</a> 发布的<a href="https://github.com/wechaty/wechaty/issues/1776" target="_blank" rel="noopener">提案</a>：</p><p><img src="/img/2021/06-the-wechaty-way/rfc.png" alt="rfc"></p><h2 id="进阶，了解-Apache-Way，知道如何更好的参与开源项目"><a href="#进阶，了解-Apache-Way，知道如何更好的参与开源项目" class="headerlink" title="进阶，了解 Apache Way，知道如何更好的参与开源项目"></a>进阶，了解 Apache Way，知道如何更好的参与开源项目</h2><p>最后，在这里为大家推荐一系列 Apache Way 的资料，让你更好的理解开源项目的运作，也欢迎你以 Apache Way 的方式参与到社区的建设中。</p><h3 id="官方内容"><a href="#官方内容" class="headerlink" title="官方内容"></a>官方内容</h3><ul><li><a href="http://incubator.apache.org/" target="_blank" rel="noopener">孵化场的地址</a></li><li><a href="http://incubator.apache.org/cookbook/" target="_blank" rel="noopener">生命周期</a></li></ul><h3 id="佳芮推荐："><a href="#佳芮推荐：" class="headerlink" title="佳芮推荐："></a>佳芮推荐：</h3><ul><li><a href="http://www.apache.org/foundation/" target="_blank" rel="noopener">Apache 介绍</a></li><li><a href="http://apache.org/theapacheway/" target="_blank" rel="noopener">什么是 Apache Way，Apache Way 是指 Apache 管理和运营项目的方法</a></li><li><a href="http://incubator.apache.org/whoweare.html#the_incubator_project_management_commitee_pmc" target="_blank" rel="noopener">什么是 Incubator PMC</a></li><li><a href="https://selfserve.apache.org/" target="_blank" rel="noopener">什么是 Infrastructure Team</a></li><li><a href="https://www.youtube.com/watch?v=TQwrH0PlpZg" target="_blank" rel="noopener">视频-ASF是如何运营的以及他的价值</a></li><li><a href="https://www.youtube.com/watch?v=hpAv54KIgK8" target="_blank" rel="noopener">视频-如何高效管理开源项目</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wechaty </tag>
            
            <tag> open-source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chatbot SDK Wechaty 获国内顶级开源组织颁发大奖</title>
      <link href="/interview/2020-12-31-open-source-award-wechaty.html"/>
      <url>/interview/2020-12-31-open-source-award-wechaty.html</url>
      
        <content type="html"><![CDATA[<p>​​12月30日，Wechaty开源社区再度拿下重要荣誉，由中国开源云联盟举办的《第十届中国云计算标准和应用大会》上，Wechaty与阿里、小米、华为等巨头并列，入选中国优秀开源项目。</p><p><img src="/img/2020/12-open-source-award-wechaty/oss-honor.jpg" alt="中国开源云联盟 - 2020优秀开源项目 - Wechaty"></p><p>中国开源云联盟（COSCL）成立于2012年8月，是我国最顶级开源组织之一，现有我国180余家开源生态圈产、学、研、用成员单位，致力于联合国内开源产业界相关方，在中国共同推动开源生态系统搭建、技术社区建设、开源项目培育、开源团体标准研制、开源技术推广应用等工作。</p><p>参选项目方案要具备很强的技术专业特点以及深入的行业贡献，同时，还要考察技术未来发展前景等多个维度，考评制度非常严格，此次，拿下优秀开源项目荣誉，证明了Wechaty得到了行业的高度认可。</p><p>Wechaty是2016年基于Apache-2.0许可证发布的开源对话式交互人机界面SDK，具备极简开发、多语言、丰富组件等关键能力，并支持微信、Whatsapp、Gitter、飞书、快手等各大即时通讯工具对话平台，已经广泛应用在教育、零售、社区管理等领域。</p><p>Wechaty 联合作者李佳芮表示，Wechaty在行业中已成为了创新者，Wechaty除了具备聊天对话机器人的基础功能之外，还内置了丰富的插件模块，并且拥有灵活扩展支持通用IM平台的Puppet插件，最终实现跨即时通讯工具对话平台的交互统一化，为客户在对话式交互人机界面应用场景上快速开发的同时降低管理成本；并且，Wechaty运营中聚合了Wechaty开源社区的大量开发者开源项目，电商、教育、社区等，通过Wechaty降低开发门槛，可以达到传统应用系统快速对话式交互化，为开发者带来极大的便利性。</p><p>未来，Wechaty将继续保持开源开放，与更多的人工智能、对话人机界面上下游生态伙伴合作共赢。​​​​</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wechaty </tag>
            
            <tag> open-source </tag>
            
            <tag> award </tag>
            
            <tag> honor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft MVP Blog: Six Lines Of Code. Two MVPs. One Chatbot.</title>
      <link href="/interview/2020-11-10-six-lines-code-two-ai-mvps-one-chatbot.html"/>
      <url>/interview/2020-11-10-six-lines-code-two-ai-mvps-one-chatbot.html</url>
      
        <content type="html"><![CDATA[<p><strong>Six lines of code. Two MVPs. One chatbot.</strong></p><p>This is the proposition behind Wechaty, a RPA SDK which enables for bot development with just six lines of JavaScript, Python, Go, and Java, and cross-platform support including Linux, Windows, MacOS, and Docker.</p><p>Created by AI MVPs <a href="https://mvp.microsoft.com/en-us/mvp/jiarui%20li-5003226" target="_blank" rel="noopener">Jiarui Li</a> and <a href="https://mvp.microsoft.com/en-us/mvp/Huan%20%E2%80%86%20LI-5003061" target="_blank" rel="noopener">Huan Li</a>, the open-source repository on GitHub has enabled more than 10,000 developers from countries around the world to make AI chatbots and connect to each other.</p><p>“We found that although the chatbot has become one of the hot spots of the internet and something which has been integrating and affecting everyone’s lives, for most developers it remained really difficult to build a chatbot,” the Chinese duo says.</p><p>“Now, thanks to Microsoft AI techniques like BotFramework and Cognitive Service, developers can build a chatbot quickly without any mathematical and algorithmic skills. With Wechaty, developers can use basic software and engineering skills to build an intelligent chatbot at a very low cost.”</p><p>For developers, Wechaty helps raise working efficiency and save time in three ways.</p><p>First, developers save the time of creating a basic framework, which usually takes three to six months. Second, the open-source ecosystem enables developers to leverage the work of others in their solutions. Third, Wechaty supports dozens of instant messaging platforms, so one chatbot can be migrated seamlessly between WeChat, WeChat Work, Gitter, WhatsApp, DingDing, Telegram, and others.</p><p>Launching in 2016, the duo has since built Microsoft AI plugins for Wechaty and given several tech talks at Microsoft Summit. Moreover, the duo has published a book, titled “Chatbot Zero to One: Practice Guide to Conversational Interaction Design,” in order to share their experience of building a chatbot using Microsoft technology.</p><p>During its history, Wechaty has been updated 24 times, attracted about 10,000 developers, and received more than 100 contributors.</p><p>“We built Wechaty to provide the community with a good communication platform,” the duo says. “They are passionate to test, find problems, and submit the quantity of pull requests to help Wechaty repair and grow in return. Certainly, we could say that without these fantastic contributors and community, we could not have today’s high-quality Wechaty!”</p><p>Wechaty actively supports this community with hundreds of technical blogs and videos, docs, and case studies available on the <a href="https://wechaty.js.org" target="_blank" rel="noopener">official website</a>. Further, the team organizes <a href="https://www.bot5.ml" target="_blank" rel="noopener">Bot Friday</a>, a weekly club for chatbot builders and chatbot entrepreneurs which discusses and explores technical problems.</p><p>“As Microsoft MVPs, we are always excited to hear “Thank you for sharing. Your project helps us to understand how AI-related projects can make a positive difference in the world’,” the duo says.</p><p>“In the future, we have a great vision to upgrade Wechaty from a Conversational SDK to SaaS, which will offer a more convenient and efficient service to everyone.”</p><p>For more on Wechaty, check out their <a href="https://github.com/wechaty/wechaty" target="_blank" rel="noopener">Github</a>.</p><blockquote><p>Source: <a href="https://techcommunity.microsoft.com/t5/microsoft-mvp-award-program-blog/six-lines-of-code-two-mvps-one-chatbot/ba-p/1861785" target="_blank" rel="noopener">Microsoft MVP Award Program Blog</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 句子互动 </tag>
            
            <tag> 微软 </tag>
            
            <tag> AI </tag>
            
            <tag> Wechaty </tag>
            
            <tag> Chatbot </tag>
            
            <tag> MVP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一位90后女CEO的创业信条：相信时间看得见</title>
      <link href="/interview/2020-06-25-lijiarui-interview.html"/>
      <url>/interview/2020-06-25-lijiarui-interview.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作为一个90后连续创业者，李佳芮始终坚持去做一件长期有价值的事情，并且相信，只要长期有价值就要果断去做，然后慢慢在后面等着收果。</p></blockquote><p>和句子互动创始人&amp;CEO李佳芮的第一次见面，是在两年前百度的一次活动上，当时她作为百度AI加速器的成员在会上做了演讲；时间辗转，再见李佳芮已经是今年4月，在微软的在线技术峰会上，句子互动作为微软的金牌社区她受邀在会上发言。所以，这次约访足足跨越了两年多的时间，而用她的话说，这两年多的时间，她慢慢找准了方向，公司运转也进入正轨，现在的时机刚刚好。</p><p>见面一坐定，我便问她，“当初为什么会选择当一个‘程序媛’？”她说，“因为从小数学就特别好，还通过数学竞赛参加自主招生考上了北邮，稀里糊涂就学了计算机。”虽然采访过不少科技界的成功人士，但这却是我第一次在采访时被“噎”到恨不得“回炉重造”。</p><p>坐在我对面的，是一个90后连续创业者，从在校期间的工作室到如今的句子互动，她经历了数次创业，服务过数百个科技公司，有过高光时刻也走过至暗时光。听着她侃侃而谈，更像是在听一个朋友讲述自己的故事。</p><p>所以，在落笔之前，我花了整整一下午时间去仔细翻看了她的个人博客，里头写满了她的经历和感悟。我发现，她不只是数学好，她的文字同样让人甘之如饴；她不只沉迷于工作，还热爱生活，既喜欢舞蹈、瑜伽，也爱马拉松、攀岩和拳击。她最喜欢的一句话，是“时间看得见”。而这，也正是支撑她在创业这条路上一直走下去的重要信念。</p><h2 id="专注微信生态，做“Social版”的CRM"><a href="#专注微信生态，做“Social版”的CRM" class="headerlink" title="专注微信生态，做“Social版”的CRM"></a>专注微信生态，做“Social版”的CRM</h2><p>2017年，李佳芮创立了现在的句子互动，选定的方向是基于微信生态提供智能对话服务，通过将业务场景梳理、数据收集、对话脚本撰写、系统搭建、评估反馈等进行标准化，帮助企业搭建符合真实业务场景的对话机器人。如今，句子互动的客户已经覆盖教育、保险、大健康等多个领域，包括京东金融、腾讯广告、美团点评、神州数码、作业帮等等。</p><p>“只要你在微信生态里做生意，就一定会用到我们的产品。”李佳芮说。目前，句子互动有三个产品线——句客宝、句子秒回和Wechaty。其中，句客宝是基于企业微信的智能对话服务产品，句子秒回是基于个人微信的智能对话服务产品，而Wechaty则是Github上一个坐拥超过7,000 Stars的知名开源 Chatbot 项目，主要面向开发者。</p><p><img src="/img/2020/06-interview/product.png" alt="product"></p><p>更确切地讲，句子秒回和句客宝都是SaaS产品，用户只要在句子互动的官网上直接扫码注册，由后台自动进行配置就可以直接使用。其核心解决的是三个与用户交互的环节——他是谁？怎么去和他聊天？以及什么时候跟他聊天？换言之，这也是长期困扰企业的三个问题，即引流、转化和运营。</p><p>举例来说，企业可以在后台设定好所有销售话术和素材然后下发给销售人员，在和客户沟通的过程中，智能对话机器人就可以根据具体的对话场景推荐合适的话术。除此之外，智能对话机器人还可以追踪客户行为并帮助销售人员寻找合适的沟通时机，比如，当用户打开产品链接或者朋友圈链接时、当产品试用时长到了某一个周期时，机器人就会发送相关通知，提醒销售人员及时跟进。</p><p>所以，李佳芮对自己产品的定位是一个“Social版”的CRM，其选定的行业一般有两个共性：第一，客单价高，比如培训教育、金融保险等等；第二，他们的售卖品是非标配的，这意味着销售人员需要花大量的时间去和客户沟通，匹配客户的定制化需求。而对于这些场景，“智能对话”就能很好地帮助完成引流、销售转化、售后运营等一系列的工作。</p><h2 id="从一个个项目到一个个产品，持续不断地“折腾”"><a href="#从一个个项目到一个个产品，持续不断地“折腾”" class="headerlink" title="从一个个项目到一个个产品，持续不断地“折腾”"></a>从一个个项目到一个个产品，持续不断地“折腾”</h2><p>不过，在创立句子互动之初，李佳芮也走了不少弯路。“2017年到2018年，当时我们的主要产品还是差旅机器人，那段时间商业化做得很差，浑浑噩噩一年多，基本上没有找到明确的方向，甚至有一段时间业务全宕掉了。”她坦白说，“当时真的挺想放弃的，但没想到事情迎来了转机。”</p><p>这个转机发生在2018年中旬，句子互动申请并且收到了美国创业孵化器Y Combinator的Offer，于是李佳芮和她的合伙人也在2019年的1月到3月，飞往美国参加了Y Combinator W19 batch，并在那之后迅速拿到了TSVC(清谷资本) 和阿尔法公社的投资。</p><p><img src="/img/2020/06-interview/founders.jpg" alt="founders"></p><p>“从那之后，事情就慢慢变顺了。”李佳芮说，“现在回过头来再去看那一年多的时间，其实给了我两个特别大的积累——第一个就是Wechaty这个开源项目，虽然当时完全没有收入，但我们也做得很‘嗨’，现在它已经成为全球最大的微信机器人开发社群，甚至有很多开发者自发把它翻译成了多语言版本；第二个是让我对Chatbot有了更多的认识和实践，当时我基本上把包括Google、微软、百度、腾讯等行业内所有的对话平台全玩了一遍，并在今年出版了中文首本对话式交互书籍《Chatbot 从0到1》，我们在YC中国的导师，前微软全球执行副总裁/奇绩创坛（原YC中国）创始人兼CEO陆奇也为这本书做了序。”</p><p>虽然兜兜转转，但李佳芮一直围绕着微信的生态去做产品，而这些产品最初的出发点都是为了解决自己的痛点——这大概就是一个开发者的独到思维，所有问题都可以用代码来解决。</p><p>言归正传，2015年，李佳芮创立了句子互动的前身公司，名为桔子互动，初衷是想接社交媒体运营项目。但由于不满足于项目外包服务，李佳芮开始琢磨做一个产品。因为自己喜欢跳舞，她开发了一个舞蹈教学分解视频平台“舞哩”，邀请一帮舞蹈小伙伴录制了300多期教学视频，帮助舞蹈爱好者快速学习成品舞。但随着粉丝的增长，李佳芮手上需要管理的微信社群越来越多，她又开始琢磨如何让自己“躺着就把事干了”，比如自动通过好友申请、自动申请入群，回答粉丝重复性的问题，以及进行群管理等等——于是，就有了最早的Wechaty。</p><p>从一个个项目到一个个产品，李佳芮从没停止过“折腾”。除了舞哩之外，她还做过婚礼轻应用“喜鹊说”，并在研二期间创立了婚庆O2O平台蛮蛮互动。因为这个项目，李佳芮拿到了创业以来的第一笔投资，并在2015年为此休学从北京去了深圳。</p><p>“但这个项目很快就终结了，因为它非常重线下运营和资源，而我们团队谁都没结过婚，不懂行业又没资源，所以我只能回北京复学。”李佳芮转而又说，“不过，这些事都很有意思，因为一直在微信生态，所以积累了很多客户资源。”</p><h2 id="工作与生活的权衡，个人状态与公司业务走上正轨"><a href="#工作与生活的权衡，个人状态与公司业务走上正轨" class="headerlink" title="工作与生活的权衡，个人状态与公司业务走上正轨"></a>工作与生活的权衡，个人状态与公司业务走上正轨</h2><p>几经周折，在六七年的时间里，李佳芮慢慢找到了自己的定位。她发现自己的优势并不在线下运营，而在于技术背景和产品基因。因此，她锁定了微信生态，专注于在线智能对话机器人的场景落地。</p><p>但这个过程并不容易，据李佳芮说，从2017年到2018年，她基本上都在公司呆到凌晨两三点才离开，早上八九点又回到办公室继续工作。更多时候，她会长时间呆在公司，醒了就工作、困了就睡觉，完全日夜颠倒。“直到去年，我的工作和生活仍旧处于一个长期失衡的状态，几乎时刻都在工作。”这样的状况，让李佳芮一度陷入了焦虑甚至崩溃，“虽然公司大方向已经确定，我们也拿到了投资，但具体在细节上怎么去落，在我们真正扎进去的时候，才发现之前很多尝试是有问题的。”</p><p>对于那段时间的煎熬，也许可以用她在某篇文章中的这段话来总结：“其实拉投资并不是一个困难的事情，而真正做出有价值并被市场认可的产品，带领公司持续向前走，才是困难的事情。作为创始人，你会变得自我怀疑，变得沮丧，唯有你知道这是你坚持的理想，才能陪你走过这些难熬的日子。”</p><p>于是，从去年年底到今年年初，李佳芮花了几个月的时间去调整自己的状态，并对公司团队进行了一番大换血。“现在我们团队状态非常好，基本不需要我再亲自盯着，大家都能发挥自己积极性和主动性去做事。”她很欣慰地说。</p><p><img src="/img/2020/06-interview/team.jpg" alt="team"></p><p>在这期间，她还花了大量的时间和客户聊天、做竞品调研，从中了解客户的问题和市场产品的不足。基于这些，她再次明确了句子互动的产品定位，即“围绕用户全生命周期的整体解决方案”。她表示，智能对话服务产品不应该单纯地帮用户去做裂变加粉和爆粉，而应该从全生命周期考虑，打通全量数据，最终提升用户的体验。</p><p>但是，最重要的问题在于，全量数据的获取阻力是非常多的。比如，对销售人员来说，他们的第一目标是成单，所以并不愿意花太多时间进行数据录入。因此，句子互动做了两件事：第一，在UI体验上给予足够的反馈，并且尽可能地实现自动化，减少繁琐的操作；第二，通过游戏化环节和榜单设计，激励他们完成任务并进行打卡。</p><p><img src="/img/2020/06-interview/jukebao.png" alt="jukebao"></p><p>“总之，现在公司已经慢慢走上了正轨。而如今微信已经成为了一种新的基础设施，我认为所有过去基于电话、短信的业务都值得重做一遍，其中迸发出来的机会将是巨大的。”李佳芮说，所以，这也会继续成为句子互动未来发力的方向。</p><h2 id="去做长期有价值的事情，相信时间看得见"><a href="#去做长期有价值的事情，相信时间看得见" class="headerlink" title="去做长期有价值的事情，相信时间看得见"></a>去做长期有价值的事情，相信时间看得见</h2><p>在采访的最后，我问她，作为女性创业者有没有觉得很难的时候。她说，自己更愿意这么理解这个问题——创业过程中最大的挑战是什么，其中女性的优势又是什么。然后，她又回答了这两个问题，她说，对创业者来说最大的挑战就是要持续不断地创新，要在黑暗中摸索出一条路来；而作为女性，她认为自己更善于和客户沟通，也更容易得到沟通的机会。</p><p>回看她的整个创业经历，看似有着很多机缘巧合，但其实都是一点一滴的积累供养和孕育出的机会。如李佳芮所说，“创业的本质就是一个不断验证和试错的过程，以前我总希望得到立竿见影的效果，但后来，你会发现，自己做的很多事情都是在播种。”“就像我们在两年前认识，才促成了今天的采访。在我的创业过程中，有很多客户都是这样积累下来的。”</p><p>也许，这就是她一直强调“相信时间看得见”的原因。因为，她始终坚持去做一件长期有价值的事情，并且相信，只要长期有价值就要果断去做，然后慢慢在后面等着收果。“当然，有一点很重要，就是在这个过程中千万别‘死’，要不断折腾，成为一个靠谱的人，才能做成一个值得信赖的公司。”李佳芮笑说。</p><p>文章转载自： <a href="http://soft.zhiding.cn/software_zone/2020/0617/3127076.shtml" target="_blank" rel="noopener">至顶网</a></p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 句子互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人微信频繁封号，品牌要如何稳定搭建私域流量？</title>
      <link href="/interview/2020-06-01-lijiarui-siyuliuliang.html"/>
      <url>/interview/2020-06-01-lijiarui-siyuliuliang.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>上周的云分享我们有幸邀请到句子互动的创始人李佳芮做客，跟我们聊了聊在微信生态圈如何有效得构建私域流量，以及作为tech公司创始人的创业心得。</p></blockquote><p><img src="/img/2020/06-lijiarui-siyuliuliang/teaser.png" alt="teaser"></p><h2 id="1-如何用智能对话解决传统社群运营痛点"><a href="#1-如何用智能对话解决传统社群运营痛点" class="headerlink" title="1. 如何用智能对话解决传统社群运营痛点"></a>1. 如何用智能对话解决传统社群运营痛点</h2><p>李佳芮在2017年发现了微信生态智能对话服务的新机会，创立句子互动。专注于将智能对话落地到微信等社交生态，通过设计专业的对话系统对接流程，帮助企业搭建符合真实业务场景的对话机器人。句子互动围绕微信生态为客户提供的智能营销和销售的SaaS工具，助力包括京东金融、腾讯广告、美团点评等企业客户。</p><p>分享的一开始佳芮就与我们分享了传统运营的痛点， 以及智能对话如何能够高效得解决这些问题的。在创立自己的舞蹈社和给其他百家公司做社交媒体策划的工作过程中，她发现当时客服都处于手动操作的阶段， 对于客户的转化、标签、大批量类似问题的回复都依赖人工不能高效得解决。</p><p>对此，她总结了自己的三点需求：首先她希望所有的微信好友请求和拉群的操作能够自动化完成。其次，对于首次加好友或者进群的常见问题回答能由机器人自动回答。同时，因为运营多个微信群，佳芮希望机器人能自动识别群里说话最多的人来担当社群管理员。</p><p>针对自己的这三点要求，佳芮设计了聊天机器人代码以及开源项目社区，这个社区此后的创业路上为句子互动的差异化打发有着重要的影响。</p><p><img src="/img/2020/06-lijiarui-siyuliuliang/products.jpg" alt="products"></p><p>在此基础上推出的句子互动产品“智能对话”为企业解决了容易漏掉客户信息， 团队协作困难，无法评估团队表现和消耗团队大量精力做重复工作的问题。从事微信运营的品牌和个人一定遇到过这样的情况，过多的信息，有限的人力资源，常在工作效率与信息管理上权衡，一不小心就漏掉重要的内容。</p><p>佳芮分享道，句子互动大多数的用户来自于教育、旅游、健康、金融等行业，这些行业都有三个类似的特点：客单价高，其次销售人员需要大量时间在微信上沟通完成转化，同时因为客单价高常常接到需要特殊化定制的要求。“智能对话”能够完成引流，销售转化，售后运营等一系列的运营需求。</p><h2 id="2-私域流量运营-amp-疫情下的策略"><a href="#2-私域流量运营-amp-疫情下的策略" class="headerlink" title="2. 私域流量运营 &amp; 疫情下的策略"></a>2. 私域流量运营 &amp; 疫情下的策略</h2><p>句子互动作为基于微信生态的智能对话服务，其终端的运营环节与私域流量紧密相关。李佳芮也详细的为我们介绍了私域流量的产生以及重要性。对于品牌方，拥有私域流量就意味这自己拥有的粉丝，在销售成本极其低廉的情况下可以更加精准地运营客户，向客户主动发起通讯。</p><p>佳芮在前期的实践中意识到，在微信公众号所积累的私域流量有一定的弱点。比如：流量的培育周期长 ，一旦封号将流失所有的资源积累，同时公众号很难主动向粉丝个体发起通讯。而这三个问题都在微信个人号的私域流量运营中得到很好的解决。个人号的朋友圈，群就是流量阵地。</p><p>同时李佳芮谈到， 面对个人微信号封号， 限流，设置标签难等问题， 私域流量的下一个黄金十年在企业微信。疫情期间，企业微信号的注册量成倍增长，显然运营者已经意识到了企业微信号的便捷与机遇。与此同时，疫情加速推进了消费者的线上消费习惯， 扩大了线上消费的年龄区间，企业此时如果能抓住机遇， 沉淀每一个消费者，对疫情之后的发展将起到长足的影响。</p><p><img src="/img/2020/06-lijiarui-siyuliuliang/wechat-and-wechat-work.png" alt="wechat-and-wechat-work"></p><p>在私域流量的运营上，李佳芮也毫无保留得与我们分享了很多实用的小tips。其中她分享作为品牌方，为避免用户流失，保持私域流量的活度。品牌需要真心得和客户做朋友，提供有温度的交流，在面对客户的微信朋友圈中保持一定程度的个人分享让客户感受到你是一个有血有肉的人。另外为每个客户设立标签（自动化打标签）以便于建立更完整的用户画像，在客户需要的时候为他们提供他们需要的个性化内容。最后，私域流量的运营是一个精细化的，需要长期投入的过程。企业需要在产品、内容、服务、用户关系每个方面都尽量提供好的客户体验。</p><h2 id="3-创业管理透明度-amp-合作支持"><a href="#3-创业管理透明度-amp-合作支持" class="headerlink" title="3. 创业管理透明度 &amp; 合作支持"></a>3. 创业管理透明度 &amp; 合作支持</h2><p>句子互动的成功也不是一路顺利， 李佳芮分享了她是如何与自己的团队建立与磨合成如今渐入佳境的分工模式。其中她提到了几点建议：创业初期，要找准Product-Market Fit,时刻注重现金流。其次，要好好运用在YC alumni的人脉和资源。再次，团队合作的透明度非常重要。</p><p>作为创始人，她让句子团队都了解创业不是一蹴而就的事情， 真正的成功是长久的努力。她鼓励大家都能够平衡生活与工作， 这样有更健康的身体和心理状态迎接长久的挑战。李佳芮还分享了在公司管理中公开和透明的重要性。定期与团队分享公司目前的状态与步调，可以使大家对于各自每个时间段工作的重心、团队节奏有清楚的了解。为了做到公开与透明，佳芮近一年来持续与团队分享周报，与投资人分享月报，并得到了积极的反馈。这个流程不但帮助公司更好地总结工作，也加强了团队成员的交流。</p><p><img src="/img/2020/06-lijiarui-siyuliuliang/juzi-founders.png" alt="juzi-founders"></p><p>关于团队，佳芮还分享了一个小故事来告诉我们创始合伙人的信任与支持是她成功的基石。YC 期间她就听说Airbnb的三个创始人在不同的地方办公管理公司不同的区域，有的时候一年甚至才能见上一次。但是他们依然能合作无间全都赖于他们对于彼此的信任以及每个人都能在危机的时候主动承担更多的责任。在句子互动的成长过程中，佳芮也有因为自己的事情，无暇顾及工作的时候，她的合伙人就暖心告诉她，公司有我们呢，你要处理什么事情就去处理吧。听了佳芮的分享，也希望大家在创业的路上都能遇见暖心的小伙伴。那些愿意与你一起分担挑战与责任的，定会是与你一起抓住下个机会的人。</p><p>交流中，李佳芮还谈到私域流量运营的个中环节如何环环相扣；企业应该关注哪些关键数据从而评估私域流量的运营；以及在创业管理层面创业者应该如何注重现金流。</p><p>视频需要加入职图充电付费才能观看，我和职图申请了句子互动的特别通道，需要的小伙伴添加下面的小伙伴微信，回复【句子互动】，获取免费的课程。</p><p><img src="/img/2020/06-lijiarui-siyuliuliang/get-vedio.jpg" alt="get-vedio"></p><p>文章转载自 <a href="https://mp.weixin.qq.com/s/EDKx0R43tGUMv4IKf488Fw" target="_blank" rel="noopener">职图充电-个人微信频繁封号，品牌要如何稳定搭建私域流量？</a></p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信生态 </tag>
            
            <tag> 私域流量 </tag>
            
            <tag> 职图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用 QnAMaker.ai 构建一个投融资聊天机器人 - Azure Show</title>
      <link href="/presentation/2020-05-19-qnamaker-juzi-bot-for-investors-rui.html"/>
      <url>/presentation/2020-05-19-qnamaker-juzi-bot-for-investors-rui.html</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 Azure Show 的从零开始，第一期的嘉宾 Rui Li，李佳芮句子互动创始人，连续创业者，微软人工智能最有价值专家（AI MVP），GitHub 10000+ Stars开源项目Wechaty作者，创建并管理了覆盖全球的微信聊天机器人开发者社区，《Chatbot从0到1：对话式交互设计指南》作者。句子互动围绕微信生态为客户提供智能营销和销售服务，帮助企业引流并实现转化，客户覆盖教育、保险、大健康等多个领域。曾入选百度AI加速器，获得PreAngel、Plug and Play，Y Combination, TSVC和阿尔法公社多家中美机构投资。</p><p><img src="/img/2020/azure-show/azure-show.png" alt="Azure Show"></p><h2 id="Azure-Show"><a href="#Azure-Show" class="headerlink" title="Azure Show"></a>Azure Show</h2><p>Azure Show 是由微软最有价值专家、微软技术社区区域总监卢建晖和微软开发者关系PM朱兴亮共同发起的一个关于微软Azure、开源技术、还有技术社区相关的线上节目。每期节目由MVP面对面、开源故事、从零开始以及Azure101组成，邀请微软技术社区的代表人物以及行业中的技术大牛，与大家分享Azure与开源技术的相关内容，每两周一期，会通过公众号、哔哩哔哩以及油管同步上线，欢迎大家关注。</p><p><a href="https://github.com/Wechaty/wechaty" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg" alt="Powered by Wechaty"></a></p><h2 id="Open-source-Wechaty"><a href="#Open-source-Wechaty" class="headerlink" title="Open-source Wechaty"></a>Open-source Wechaty</h2><p>Wechaty 联合作者李佳芮，用 20 分钟教会你如何用 Azure Cognitive Service QnAMaker.ai 来构建一个能够自动回答投资人问题的 Chatbot !</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="//player.bilibili.com/player.html?aid=200660732&bvid=BV1az411q79A&cid=192776564&page=1" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><ul><li>Youtube: <a href="https://www.youtube.com/watch?v=ZYjYAT2g-1Q" target="_blank" rel="noopener">https://www.youtube.com/watch?v=ZYjYAT2g-1Q</a></li></ul><h2 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h2><blockquote><p>本期是我们Azure Show的首秀，谢谢各位小伙伴的关注，非常感谢本期嘉宾Kris，卓桓、佳芮以及我的搭档兴亮的大力支持，还有帮忙进行视频处理的小董。想在最后跟大家聊聊为什么要开设这个线上节目。自2012年成为微软最有价值专家（MVP）以来，开始在各个社区与同行们讨论技术，分享代码，在这个过程中，既是一种分享，也是一种收获。通过社区，不仅解决了自己碰到的一些技术难题也认识到很多好朋友。MVP这个社区，汇聚了来自各个行业，各个国家的IT同行，他们乐于分享，乐于互助，我期待通过这个节目，邀请到更多的行业大牛与大家分享，分享 Azure 的知识，分享他们的开源项目，分享技术社区中的点点滴滴，希望能给大家带来点干货！从第二期开始，我们将正式启动Azure 101活动，帮助大家从0开始认识Azure的知识。第一期节目，也是一次探索，后续我们会不断改进，也欢迎大家留言或者在公众号后台留下你们的建议与意见，</p></blockquote><p><img src="/img/2020/azure-show/azure-show-mvp.png" alt="huan"></p><p>Source: <a href="https://mp.weixin.qq.com/s/szB4YSEAJZxDLSNZr-_3Sw" target="_blank" rel="noopener">Azure Show 第一期 开播啦！嘉宾梁迪&amp;李卓桓&amp;李佳芮</a></p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 句子互动 </tag>
            
            <tag> 微软 </tag>
            
            <tag> AI </tag>
            
            <tag> Wechaty </tag>
            
            <tag> Chatbot </tag>
            
            <tag> Azure Show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陆奇：Chatbot将成为未来的基础设施和重要的人机交互窗口</title>
      <link href="/chatbot/2020-04-20-juzibot-chatbot-0-1.html"/>
      <url>/chatbot/2020-04-20-juzibot-chatbot-0-1.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2020/04-juzibot-chatbot-0-1/luqi.png" alt="luqi"></p><blockquote><p>由奇绩创坛创始人、前百度总裁、前微软全球执行副总裁陆奇博士作序，句子互动创始人<a href="https://pre-angel.com/peoples/jiarui-li/" target="_blank" rel="noopener">李佳芮</a>、聊天对话领域资深投资人<a href="https://pre-angel.com/peoples/zhuohuan-li/" target="_blank" rel="noopener">李卓桓</a>、资深互联网从业者李云军合著的的<a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>付梓出版。</p></blockquote><p>在序言中，陆奇博士以资深对话式交互专家和投资人的视角，以面向未来的视野，展望了聊天机器人（Chatbot）行业和技术的发展。</p><p>其中提到：</p><ul><li>Chatbot将成为大量自然语言处理算法最好的落地场景之一。</li><li>Chatbot将成为未来的基础设施。</li><li>Chatbot将成为未来重要的人机交互窗口。</li></ul><p>除此之外，陆奇博士也提到了更多有关聊天机器人（Chatbot）行业和技术的细节，现编辑后全文摘录如下。</p><h2 id="1-Chatbot将成为未来的基础设施"><a href="#1-Chatbot将成为未来的基础设施" class="headerlink" title="1. Chatbot将成为未来的基础设施"></a>1. Chatbot将成为未来的基础设施</h2><p>我们非常高兴为《Chatbot 从 0 到 1：对话式交互设计实践指南》作序，并十分愿意将这本书推荐给广大读者：无论你是希望了解 Chatbot 的公司管理层，或是产品经理、项目经理，还是即将面临 Chatbot 开发需求的开发人员，相信读完此书，你都将收获良多。</p><p>李佳芮创立的句子互动公司是 2018 年 YC 中国建立后的第一批入选项目，她因此前往硅谷参与了为期三个月的 YC 创业营。</p><p>2019 年，我们成立了全面本地化的创业投资加速品牌“奇绩创坛”，和李佳芮的团队保持着频繁的交流，成为朋友，彼此支持。</p><p>我们很高兴看到这样一位有自主学习驱动力的创业者，将自己在人工智能人机对话领域的经验出版成书，帮助整个行业的从业者一起进步。</p><p>近几年，随着人工智能技术的爆发，依托自然语言处理技术的创业方向异常火热。而我们也相信，Chatbot 将成为大量自然语言处理算法最好的落地场景之一。</p><p>为什么 Chatbot 将成为未来的基础设施？原因有三。其一，Chatbot 能通过减少人的重复劳动，帮助人们摆脱繁杂的“无价值事务”；其二，Chatbot 能通过快速的运算完成人做不到的即时复杂工作，提供信息增量；其三，Chatbot 能通过语义分析、情感分析、意图识别等技术手段，与人类进行有温度的沟通。</p><h2 id="2-封闭域Chatbot是开放域Chatbot的基础"><a href="#2-封闭域Chatbot是开放域Chatbot的基础" class="headerlink" title="2. 封闭域Chatbot是开放域Chatbot的基础"></a>2. 封闭域Chatbot是开放域Chatbot的基础</h2><p>然而，就像历史上任何新技术一样，其创造、推广、普及都需要大量先行者以年为单位的努力，Chatbot 也不例外。</p><p>我们相信，本书将成为中文世界 Chatbot 推广过程中的重要一环。不夸张地说，本书将极大地帮助 Chatbot 从实验室走向大众视野，帮助读者全面了解设计 Chatbot 所需的基础知识。</p><p>我们通常将数量庞大、解决各自领域特定问题的机器人称为封闭域 Chatbot。而当一定数量的封闭域 Chatbot 被有机组合，就有机会成为像苹果公司的 Siri、小米公司的“小爱同学”一样的开放域 Chatbot。更进一步，当我们在人工智能的底层技术上持续运转，简单的开放域 Chatbot 就有可能拥有自主学习的能力，变成独立思考的高度拟人化的Chatbot。</p><p>虽然现在的我们连一个能够通过图灵测试的开放域 Chatbot 都尚未完成，更逞论电影《钢铁侠》中的智能管家贾维斯一般的强人工智能。但是，我们毫不怀疑，随着大量语料的积累，封闭域 Chatbot 将密集诞生，它们将在不远的将来，组合成我们愿景里更强大的Chatbot。</p><p>回到本书，《Chatbot 从 0 到 1：对话式交互设计实践指南》将教会读者如何设计一个垂直领域的封闭域 Chatbot。或许这听起来很朴素，但当一个个小小的封闭域 Chatbot 组合在一起，将积淀成未来我们想象中的 Chatbot 的基础。</p><h2 id="3-未来Chatbot将是重要的人机交互窗口"><a href="#3-未来Chatbot将是重要的人机交互窗口" class="headerlink" title="3. 未来Chatbot将是重要的人机交互窗口"></a>3. 未来Chatbot将是重要的人机交互窗口</h2><p>本书用浅显的语言，从团队的实战经验出发，列举了许多标准流程，总结了系统性的方法论，帮助读者结构性地梳理垂直场景业务，使读者能够亲自动手，以可视化的方式完整实现 Chatbot。</p><p>期待着你完整看完这本书，能够对 Chatbot 有一个系统的了解，可以尝试着设计一个属于你的 Chatbot，并以此为契机，走向更深刻、更困难但也更值得探索的对话式交互领域中。</p><p>正所谓“风物长宜放眼量”，虽然 Chatbot 的研究仍处于初级阶段，但我们相信：未来，Chatbot 将被运用在更多的场景，成为最重要的人机交互窗口。这一切，都可以从设计一个小的封闭域 Chatbot 开始，从本书开始。祝你阅读愉快！</p><h2 id="4-购买陆奇亲自推荐的Chatbot入门指南"><a href="#4-购买陆奇亲自推荐的Chatbot入门指南" class="headerlink" title="4. 购买陆奇亲自推荐的Chatbot入门指南"></a>4. 购买陆奇亲自推荐的Chatbot入门指南</h2><p><img src="/img/2020/04-juzibot-chatbot-0-1/buy-book.png" alt="pic-2"></p><h2 id="5-Chatbot-从-0-到-1-介绍"><a href="#5-Chatbot-从-0-到-1-介绍" class="headerlink" title="5. Chatbot 从 0 到 1 介绍"></a>5. Chatbot 从 0 到 1 介绍</h2><h3 id="5-1-本书摘要"><a href="#5-1-本书摘要" class="headerlink" title="5.1 本书摘要"></a>5.1 本书摘要</h3><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>内容共5部分:</p><ul><li>第1部分从人工智能的发展带动对话式交互引出Chatbot的应用场景及其分类；</li><li>第2部分和第3部分从需求分析、流程设计、数据处理、对话脚本撰写、系统搭建、对话任务测评、平台渠道集成、运营反馈等方面，对Chatbot的整个生命周期进行了详细分析和介绍；</li><li>第4部分通过案例分析，对Chatbot进行了实践；</li><li>第5部分总结了目前对话式交互的局限性，并展望了基于人工智能发展Chatbot的机会。</li></ul><h3 id="5-2-目标读者"><a href="#5-2-目标读者" class="headerlink" title="5.2 目标读者"></a>5.2 目标读者</h3><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>适合希望从事Chatbot行业的读者阅读，尤其是正在考虑将业务切入 Chatbot领域的决策者，即将或正在从事Chatbot专业工作的产品经理和项目经理，以及希望了解Chatbot领域工作流程的开发人员。</p><p><img src="/img/2020/04-juzibot-chatbot-0-1/chatbot-0-1.jpg" alt="pic-3"></p><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》购买链接</a></p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 陆奇 </tag>
            
            <tag> Chatbot从0到1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI与人，“替代”还是 “共生”</title>
      <link href="/chatbot/2020-04-20-lijiarui-chatbot-0-1.html"/>
      <url>/chatbot/2020-04-20-lijiarui-chatbot-0-1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在过去的几百年里，每次革命都在摧毁一些职业的同时创造一些新的工作岗位。人工智能时代也是一样，单纯的智能不会解决所有的问题，机器和人将协同工作。让机器做机器擅长的事情，让人类发挥人类的特长，让人工智能拓展人类智能。机器与人，和而共生，彼此关爱，共享未来。</p></blockquote><p>对于人工智能的能力，基于我过去服务客户的经历，有一些自己的思考，以下内容选自我的新书：<a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>，欢迎关注。</p><h2 id="1-很抱歉，我做了一个-59-分的机器人"><a href="#1-很抱歉，我做了一个-59-分的机器人" class="headerlink" title="1. 很抱歉，我做了一个 59 分的机器人"></a>1. 很抱歉，我做了一个 59 分的机器人</h2><p>“0 到 100，你给你的机器人打多少分？”这是第一次见陆奇博士的时候，他问我的问题。</p><p>那是一个深秋，在雕刻时光咖啡厅里，作为 YC 中国的第一批成员，我们团队和陆奇博士的第一次 Office Hour。</p><p>我非常绝望的看着我的合伙人，前亚马逊工程师<a href="https://pre-angel.com/peoples/yuan-gao/" target="_blank" rel="noopener">高原</a>，想到过去 2 年我们做过的大大小小的项目，有上市公司的客户，也有初创公司的客户，无一不对所谓的 Chatbot 失望。而在这一刻，我不得不向我们的导师坦白，我们做了让人失望的产品。</p><p>“我给我们的机器人打 59 分，但是我会和我的客户说这只是 40 分的机器人，尽可能地降低用户预期，并引导真人和机器人共同为客户服务。”</p><p>我深吸了一口冷气，然后一口气说完。要知道，在一个各大企业都在号称 90%的准确率的人工智能元年，我需要多大的勇气才敢承认，我的创业项目并不是“酷炫 fancy” 的。</p><p>没想到的是，陆奇博士竟然跟我的想法一样。</p><blockquote><p>在 2014 年发起“小冰”项目的时候，我认为人工智能已迎来拐点，移动互联网使数据和服务进一步结构化，而这些结构化的数据和服务，可以很方便地与人工智能小冰对接，“就像电影《超能陆战队》中的‘大白’，任何一个类别的信息、知识与服务，都可以像插卡那样与小冰对接，这可能颠覆未来的互联网行业。”我认为那时已经能搭建一个 90 分的 Chatbot 了，但是，我过于乐观了。<br>来自：陆奇博士</p></blockquote><p>于是，那个下午及后来的很多封邮件往来中，我和陆奇博士探讨了很多如何接受智能对话的现状，以及使用人机协作逐步构建一个 90 分的对话系统的方法及路径。</p><h2 id="2-对话智能解决重复思考"><a href="#2-对话智能解决重复思考" class="headerlink" title="2. 对话智能解决重复思考"></a>2. 对话智能解决重复思考</h2><p>尽管人工智能技术对人类社会带来的变革与工业革命相较可能规模更大，来势更为迅猛，随之而发展起来的机器人注定将取代很多人类的工作。但本质上，这个替代人类工作的过程，和工业时代并没有太多差异。</p><p>笔者认为，工业革命解决了“重复体力劳动”的事情，人工智能未来解决“重复脑力劳动”的事情。</p><p>关于大众想象中的智能，李开复老师在他的书《人工智能》中是这样描述的：</p><p>普通群众所遐想的人工智能属于强人工智能，它属于通用型机器人，也就是20世纪 60 年代人工智能研究人员提出的理念。它能够和人类一样对世界进行感知和交互，通过自我学习的方式对所有领域进行记忆、推理和解决问题。</p><p>这样的强人工智能需要具备以下能力：</p><ul><li>存在不确定因素时进行推理、使用策略、解决问题、制定决策的能力。</li><li>知识表示的能力，包括常识性知识的表示能力。</li><li>规划能力。</li><li>学习能力。</li><li>使用自然语言进行交流沟通的能力。</li><li>将上述能力整合起来实现既定目标的能力。</li></ul><p>这些能力在常人看来都很简单，因为自己都具备。但由于技术的限制，计算机很难具备以上能力，这也是为什么现阶段人工智能很难达到常人思考的水平。</p><p>在笔者看来，“通过自我学习的方式对所有领域进行记忆、推理和解决问题”，是机器和人 大的区别，也是机器无法解决的问题。</p><p>我们可以从心理学家的说法中寻找答案：在《思考，快与慢》这本书中，作者将人类思考和认知工作分成了两个系统来处理：系统 1 是快思考：无意识、快速、不怎么费脑力、无须推理。系统 2 是慢思考：需要调动注意力、过程更慢、费脑力、需要推理。解决问题时，系统 1 先出面，遇到搞不定的事情，系统 2 会出面解决。</p><p>而人工智能只能解决系统 1 的部分，通过大量的数据训练，帮助机器训练一个比人脑反应更加迅速的 24 小时运转的大脑。而对应到系统 2 的部分，需要结合常识和所学的知识进行推理，才能进一步得出结论。</p><h2 id="3-“替代”还是“共生”"><a href="#3-“替代”还是“共生”" class="headerlink" title="3. “替代”还是“共生”"></a>3. “替代”还是“共生”</h2><p>智能对话的核心价值，应该在解决问题的能力上，而不是停留在具体是人还是机器回答的这个表面问题上。</p><p>迄今为止，没有任何已知的途径和方法能够和人类一样对世界进行感知和交互、通过自我学习的方式解决所有领域的问题。各种“奇点”假说推论未来人工智能技术可能以指数级成长，却忽略了这样的指数级成长需要的是一系列可能需要百年甚至永远都不可能实现的重大技术发明和突破。</p><p>而解决的唯一方式，唯有“共生”。将大量的、重复的、耗时的事务交给机器人，让员工从疲于应付的情况下解放出来，让员工发挥主观能动性，去执行具有更高价值，有创造性，需要情感投入的事务，而让机器人不知疲倦地、全天候地、更加快速精确地执行烦琐重复的事务。例如，在客户服务中，未来实现高效人工智能的道路是协作，协作可以通过两种主要方式应用。</p><h3 id="3-1-增强人类智慧"><a href="#3-1-增强人类智慧" class="headerlink" title="3.1 增强人类智慧"></a>3.1 增强人类智慧</h3><p>宏观上看，机器所掌握的用户信息比任何一个员工都多。这时，机器可以扩充员工的大脑。在和用户沟通的时候，机器可以给出这个用户的所有信息辅助回答。机器通过分析，给出推荐的下一步操作，让员工主动选择。</p><h3 id="3-2-增强人的能力"><a href="#3-2-增强人的能力" class="headerlink" title="3.2 增强人的能力"></a>3.2 增强人的能力</h3><p>人是需要休息的，在同一个时间段能处理的信息量是极其有限的，而 24 小时持续运转、消息并发量极大的机器的即时回复和快速查找功能，正好可以增强人的能力。例如，使用智能对话处理初始客户查询，因为这些请求大多数都很简单且易于理解。一旦机器人无法处理更多请求，系统就通过自动客户服务流程传递给人工，极大地增强了运营团队的响应速度和并发处理能力。</p><p>这种人机协作的处理方式，在不增加人力的情况下，实现了更高的交互量，进而降低了每次交互的平均成本，并提高了客户满意度。同时，随着机器交互越来越多，企业有了足够的数据和流程，可以进一步探索自动化流程。有了数据的支撑，就可以加快决策流程并计算出明确的投资回报率。</p><p>就像工业机器替代体力劳动者那样，越来越多的脑力劳动者也会因智能机器人的加入得以解放，随之而来的是工作流的调整和组织的重构。</p><p>在过去的几百年里，每次革命都在摧毁一些职业的同时创造一些新的工作岗位。人工智能时代也是一样，单纯的智能不会解决所有的问题，机器和人将协同工作。孙正义曾预测，未来 30 年，将有 100 亿人类和 100 亿机器人共同生活在地球上，人类和机器人并不是你死我活的关系，而是共生。张小龙也说：“希望我们的产品能成为用户的朋友，而不仅仅是工具。”笔者认为，这句话套用到人工智能时代同样适用。让机器做机器擅长的事情，让人类发挥人类的特长，让人工智能拓展人类智能。机器与人，和而共生，彼此关爱，共享未来。</p><h2 id="4-关于-《Chatbot-从-0-到-1》"><a href="#4-关于-《Chatbot-从-0-到-1》" class="headerlink" title="4. 关于 《Chatbot 从 0 到 1》"></a>4. 关于 《Chatbot 从 0 到 1》</h2><p>本书由陆奇等大咖亲自作序，陆奇博士的做序内容见： <a href="https://pre-angel.com/juzibot-chatbot-0-1/" target="_blank" rel="noopener">陆奇：Chatbot将成为未来的基础设施和重要的人机交互窗口</a></p><p><img src="/img/2020/04-lijiarui-chatbot-0-1/buy-book.png" alt="pic-1"></p><h3 id="4-1-本书摘要"><a href="#4-1-本书摘要" class="headerlink" title="4.1 本书摘要"></a>4.1 本书摘要</h3><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>内容共5部分:</p><ul><li>第1部分从人工智能的发展带动对话式交互引出Chatbot的应用场景及其分类；</li><li>第2部分和第3部分从需求分析、流程设计、数据处理、对话脚本撰写、系统搭建、对话任务测评、平台渠道集成、运营反馈等方面，对Chatbot的整个生命周期进行了详细分析和介绍；</li><li>第4部分通过案例分析，对Chatbot进行了实践；</li><li>第5部分总结了目前对话式交互的局限性，并展望了基于人工智能发展Chatbot的机会。</li></ul><h3 id="4-2-目标读者"><a href="#4-2-目标读者" class="headerlink" title="4.2 目标读者"></a>4.2 目标读者</h3><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a>适合希望从事Chatbot行业的读者阅读，尤其是正在考虑将业务切入 Chatbot领域的决策者，即将或正在从事Chatbot专业工作的产品经理和项目经理，以及希望了解Chatbot领域工作流程的开发人员。</p><p><img src="/img/2020/04-lijiarui-chatbot-0-1/chatbot-0-1.jpg" alt="pic-2"></p><p><a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》购买链接</a></p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chatbot从0到1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft Online Tech Forum 微软在线技术峰会 - 李佳芮专访</title>
      <link href="/interview/2020-04-17-lijiarui-microsoft.html"/>
      <url>/interview/2020-04-17-lijiarui-microsoft.html</url>
      
        <content type="html"><![CDATA[<h2 id="看点"><a href="#看点" class="headerlink" title="看点"></a>看点</h2><ol><li>最贴心的、完善的程序员成长路径</li><li>一款智能对话机器人从0到1的搭建历程</li><li>全球人工智能技术的实践落地情况</li></ol><p><img src="/img/2020/04-lijiarui-microsoft/intro.jpg" alt="intro"></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="1-自我介绍"><a href="#1-自我介绍" class="headerlink" title="1. 自我介绍"></a>1. 自我介绍</h3><p>大家好，我是李佳芮，句子互动的联合创始人 &amp; CEO，句子互动围绕微信生态为客户提供智能营销和销售服务，帮助企业引流并实现转化，客户覆盖教育、保险、大健康等多个领域。获得PreAngel、Plug and Play，Y Combination, TSVC和阿尔法公社多家中美机构投资，曾入选百度AI加速器，Facebook 大陆首期加速器。</p><p>我是一个连续创业者，过去7年一直基于微信生态为企业提供智能营销服务。同时，我也是微软人工智能最有价值专家（AI MVP），也是 GitHub 上超过 7000 Stars 的开源项目 Wechaty 的联合作者，在做 Wechaty 的过程中创建并管理了一个覆盖全球的微信聊天机器人开发者社区，仅仅在 Github 上就有超过500个开源项目是基于 Wechaty 来写的，不乏有很多 超过 1000 Star 的优质项目。可以说在 Github 上，只要是node的开发者，想做微信机器人的，没有不知道 Wechaty 这个项目的。今年随着 Wechaty 的 Contributor 队伍越来越壮大，Wechaty 陆续开始支持 Go，Python 和 Java，也欢迎广大的开发者使用并参与贡献。</p><p>除此之外，今年我出版了一本书《Chatbot从0到1：对话式交互设计指南》，刚刚在京东上架，基于我过去服务企业的经验以及和 Chatbot 开发者的交流，讲述如何从0到1搭建一个聊天机器人，其中有一个片段也提到了2018年，我们团队和陆奇博士交流 Chatbot 和小冰相关的内容，他对我们的激励，同时他也为本书做了序。</p><p>作为微软的 AI MVP 以及 Wechaty 的社区发起人，创业之初我们就和微软有非常密切的合作，微软给了社区和我们公司非常多的支持，包括在提供非常棒的技术底层服务，云资源的支持，以及市场层面的支持。可以说我们公司的发展和社区的发展离不开微软的支持。</p><h3 id="2-我用的微软相关的技术"><a href="#2-我用的微软相关的技术" class="headerlink" title="2. 我用的微软相关的技术"></a>2. 我用的微软相关的技术</h3><p>Chatbot 的智能程度取决于它能够给理解的意图和实体的数量和复杂度，因此高效开发语义理解模型是智能对话中非常重要的一环。对于创业公司来说，专门去开发语义理解模块是性价比非常低的事情，因为搭建这样的系统需要长年累月的累计和海量数据的积累，有这种能力的工程师非常少而且非常贵，而海量数据对于创业公司来说，又几乎是不可能的。微软的认知服务，比如 QnaMaker 和 Luis 非常好的解决了这个问题，他是专门帮助非自然语言处理专业的开发者解决自然语言理解这一开发瓶颈的，开发者可以轻松地创建和维护高质量的自然语言理解模型，并能无缝的对接到相关的智能应用中，这一切都是基于云的 API 服务完成的。 开发的过程中，你只要持续对系统训练，也就是喂这个系统相关的语料就够了。</p><p>而 Azure 的 Machine Learning 是微软在公有云 Azure 上推出的基于 Web 使用的一个机器学习服务，可以帮助企业快速的构建和部署机器学习模型。这样开发者就不需要掌握特别多的算法基础，也不需要读海量的论文，就可以直接享受微软算法工程师的结果。甚至使用官方支持的无代码设计器，帮助企业快速搭建机器学习模型，极大的提高了企业的开发效率。</p><p>最近新冠疫情席卷全球，微软为美国疾病和预防控制中心，也就是CDC，构建了一个 Chatbot，就是用到了上面的技术。这个 Chatbot 可以指导用户进行自我评估，通过自然的对方方式引导客户，初步判断自己是否感染了新冠病毒，并在需要的时候联系其他医疗资源和相关专业人士。除此之外，微软还向客户提供了多个 COVID-19 模板，开发者可以对这些模板进行修改，帮助企业和开发者快速自建各类新冠相关的 Chatbot。这样除了 CDC 之外，任何企业和开发者都可以通过微软的云服务，快速使用医疗 Chatbot 了。</p><h3 id="3-我和-wechaty-与-Chatbot-的渊源"><a href="#3-我和-wechaty-与-Chatbot-的渊源" class="headerlink" title="3. 我和 wechaty 与 Chatbot 的渊源"></a>3. 我和 wechaty 与 Chatbot 的渊源</h3><p>做 wechaty 社区已经做 wechaty 的开源项目，有一个非常有意思的背景。做开源项目是因为我喜欢跳舞。。。</p><p>2016年的时候，我和几个一起跳舞的小伙伴做了一个舞蹈社区，叫做舞哩，并在线录制200多期舞蹈教学视频，在b站、优酷、美拍、腾讯视频、youtube等等都有我们的舞蹈专辑，全网播放2000多万，我在视频上留了微信公众号的二维码，然后在公众号上放了一个我的舞蹈小号的微信号二维码。当我有了非常多的粉丝的时候，我面临一个问题，如何更好的管理我的粉丝。我仔细研究了下，发现我核心要解决三个问题： 如何能自动化的把他们邀请到我的舞蹈微信群 粉丝经常会问相似的问题，比如某只舞蹈的教学视频在哪里。虽然我明明已经在公众号写的非常清楚，并且还搭建了一个网页帮助用户搜索视频，但他们还是不厌其烦的问我的微信小号，这些问题应该能被自动化的回复的。 我想找到社区最活跃的用户，让他做我们大区管理员和群管理员。我判别这个用户活跃的标准就也非常简单，就是他在群里发言的多少。显然，我不可能手动的去统计每个人说话的数量。</p><p>基于上面3个核心的需求，我参与到了 wechaty 非常早期的开源项目中，并成为 wechaty 的联合作者，这样我就可以花费非常少的精力运营我的社群，大部分的操作都能自动化做了，比如自动通过好友请求，自动拉好友入群，自动找群内最活跃的人，并且用几条常用的问答训练了一个舞蹈问答的机器人，可以快速的回答舞蹈的问题。</p><p>结合我自己多年基于微信生态为企业做运营的经验，我忽然意识到：随着用户越来越习惯通过微信交流，他们更习惯于在聊天对话中直接获取服务。这是一个交互方式演进的变化，也是随着技术升级，信息服务下一阶段的必经之路。我认为 wechaty 不应该只解决我自己社区的问题，还应该为更多的企业赋能，帮助他们更好的管理他们的用户，帮助更多企业赋能。因为那个时候我有比较多的种子企业用户，所以我用这个产品问了几个之前服务的企业，他们都觉得非常棒并表明了非常强烈的需求，所以这就成为了我这次创业的开端。</p><p>后来随着开发者越来越多，我创建了 wechaty 的开发者社群，用我自己写的微信机器人管理这些微信开发者，就像当时我管理我的舞蹈粉丝一样。相关的内容我写过一篇博客，有兴趣的可以去看下：<a href="https://wechaty.github.io/2016/12/10/try-to-write-wexinrobot" target="_blank" rel="noopener">https://wechaty.github.io/2016/12/10/try-to-write-wexinrobot</a></p><p>之所以选择 Chatbot 是因为我认为这里面有一个巨大的机会。回顾技术发展的历史，最大的几次浪潮出现基本都伴随着一个规律：新的技术的出现和整合带来全新的人机交互方式，大量的商业应用在此基础上营运而生。其实人类的需求一直都没有变化，只是交互变得越来越便捷了。人机交互的方式 2000 年之前以鼠标键盘为主，逐步过渡到 2010 年以手指触摸为主的移动 App ，每一次交互的变革，以此引发了互联网的浪潮和移动互联网的浪潮。那么在今天，随着人工智能技术催生的自然语言处理技术和底层硬件的愈发成熟，人机交互的方式会逐渐变为以自然对话为主，比如智能音箱、手机助手等，交互方式的变革一定会带来新一轮的革命。这也是我为什么非常看好 Chatbot 的原因。</p><p>实际上，在我每次管理社区过程中，用一个 bot 回答用户的问题；或者说今天我公司提供的智能营销 SaaS 工具，主动提示销售应该怎么和用户沟通并在聊天记录中抽取关键信息，对用户进行自动化标签管理；以些都是在Chatbot爆发的前夕，基本还都是在 B端应用比较多。我认为真正的 Chatbot 带来的革命还没有完全到来，当他能直接为海量 C端用户服务并且能提供符合用户预期的服务的时候，过去的成百上千个App会逐渐演化成未来的成百上千个Chatbot，各大企业的局面会非常不一样，也会非常有意思，我期待着那一天的到来。</p><h3 id="4-介绍如何从0到1搭建-Chatbot"><a href="#4-介绍如何从0到1搭建-Chatbot" class="headerlink" title="4. 介绍如何从0到1搭建 Chatbot"></a>4. 介绍如何从0到1搭建 Chatbot</h3><p>在这里，我为大家推荐我的新书，《Chatbot从0到1：对话式交互设计实践指南》，这本书的内容共分为五个部分。第1部分从人工智能的发展带动对话式交互引出Chatbot的应用场景及其分类；第2部分和第3部分从需求分析、流程设计、数据处理、对话脚本撰写、系统搭建、对话任务测评、平台渠道集成、运营反馈等方面，对Chatbot的整个生命周期进行了详细分析和介绍；第4部分通过案例分析，对Chatbot进行了实践；第5部分总结了目前对话式交互的局限性，并展望了基于人工智能发展Chatbot的机会。</p><p>《Chatbot从0到1：对话式交互设计实践指南》适合希望从事Chatbot行业的读者阅读，尤其是正在考虑将业务切入 Chatbot领域的决策者，即将或正在从事Chatbot专业工作的产品经理和项目经理，以及希望了解Chatbot领域工作流程的开发人员。</p><p>其实写这本书的原因之一，就是随着我创建我的公司并持续为企业提供自动化营销，并通过信息增量辅助销售、提高销售转化率和运营留存率的过程中，我在持续的和我服务的企业以及从业者交流的过程中发现，大部分对 Chatbot 有一个很大的误区，他们认为 Chatbot 是一个黑科技，Chatbot 等同于算法和论文，这个是不对的，我在本书主要想推出的理念是，Chatbot是一个产品问题，不是一个算法问题。我前面也介绍了，过去成百上千个 App 会逐渐演化成未来的成百上千个 Chatbot。在今天的视角看，搭建 App 其实是一个产品问题，不是你会 C Sharp 或者会 Java 这么单纯的技术问题。</p><p>这本书的第四部分的案例分析，就是通过微软认知服务的LUIS来进行了实操。LUIS的开发流程更像是一个教学过程：开发者是老师，LUIS App是学生。老师通过不停地告知学生正确的文本解析结果来完成教学。一个好的教学过程是一个“训练+实践”的闭环，标注一定量的起始数据；训练得到语义理解模型；对模型进行必要的测试；发布模型并应用到真实用户场景；甄选应用日志中的语句；继续标注并更新模型。这个过程周而复始，通过不停地迭代开发，不停地改善理解模型，使其越来越接近人类的理解能力。总结一下，四步分别是数据标注、模型训练、模型发布和主动学习。</p><p>我认为作为开发者，一定要学会站在巨人的肩膀上做事情，而不是自己死磕成为一个巨人。搭建一个 Chatbot 是比较负责的事情，算法非常重要，但依然只是搭建 Chatbot 中八个环节中的一个环节。还有很多其他的环节，比如对话脚本撰写，运营反馈等，这些几乎决定了一个 Chatbot 的成败。</p><p>今天因为时间关系，所以我简单的介绍一下 Chatbot 里面比较独特的一环，对话脚本撰写。因为 Chatbot 是没有 UI 的，整个的服务都是通过对话的方式引导用户并推进流程进行的，所以这里的对话脚本撰写其实替代了过去搭建 App 时候的绘制原型交互图。换句话说，在 Chatbot 中，产品功不能像图形式交互那样直接呈现在界面上，而是隐藏在对话中，所以对话脚本撰写其实是非常非常重要的，我的书里总结了十条设计原则，有兴趣的可以去详细看下。</p><p>今天我带了几本书，可以作为奖品现场抽奖送给大家。。。</p><h3 id="5-微软收购-Github-的看法"><a href="#5-微软收购-Github-的看法" class="headerlink" title="5. 微软收购 Github 的看法"></a>5. 微软收购 Github 的看法</h3><p>其实 GitHub 不仅仅是一个编程工具，它已经成为了开源社区的核心，某种程度上是社交网络和项目管理工具之间的交叉点。很多人开玩笑说他是“全球最大的同性交友社区”，其实也可以说他是程序员界的“Facebook”。程序员在上面会大量公开开源代码，互相寻求帮助。发展到现在，GitHub 的作用已经不仅是一个程序员交流地，更成为一个猎头挖人平台，普通程序员甚至可以将自己在 GitHub 上的经验写进简历。</p><p>微软的CEO萨提亚说，微软 + Github = 为开发者赋能。所以微软收购 Github 是对社区开发者来说，似乎在围绕着开发的生命周期的各个阶段为开发者赋能：从构思、到协作、再到云部署。 从我自身角度说，Github给了我很多，因为我2017年和2018年基本每天都泡在Github上，我认识了很多开发者，并且在技术和商务上都展开了非常多的合作。我们的开源项目也是托管在 Github 上的，我们的开发者社区也是基于 Github的，我和这些开发者的协同工作中，从他们身上也学习到了很多。 所以从我自身的角度看，Github 伴随了我很多年的成长，看到今天微软收购了 Github，感觉也很是开心和激动。</p><p>从开源角度来看，我们看到了微软作为全球最大的闭源公司，最讨厌开源的公司，忽然变化了，他开始拥抱开源了。这种转变还是蛮惊讶的，说明微软对开发者更友好了。我们也看到，在收购了 Github 之后，微软成为 Github 上代码贡献量最大的企业。刚刚我在后台也在和韦青老师交流，在收购 Github 之前，微软的很多员工也都在使用 Github，这次收购对微软的员工也带来了非常大的便利。</p><p>最后，其实关于开源，我想再分享一下真正的开源精神，其实分享和贡献。这也是刚刚我在后台和韦青老师交流的体会，开源是在其他人的代码上，学习以后，再反哺给开源，大家一起推动一个项目变得更好，开源不是伸手党，而是共同学习，共同进步，推进技术领域的进步。</p><p>谢谢大家！</p><p>本次直播内容的部分视频内容，感谢微软MVP的负责人，来自微软的@康康全称截屏~</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="https://v.qq.com/txp/iframe/player.html?vid=v0952wieqwl" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><ul><li>YouTube 地址： <a href="https://youtu.be/VnI2jl71-Y8" target="_blank" rel="noopener">https://youtu.be/VnI2jl71-Y8</a></li></ul><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>下面是在后台和微软中国 CTO 韦青老师的合影，为我的新书 <a href="https://item.jd.com/12630213.html" target="_blank" rel="noopener">《Chatbot从0到1：对话式交互设计实践指南》</a> 打call~</p><p><img src="/img/2020/04-lijiarui-microsoft/weiqing.jpg" alt="weiqing"></p><blockquote><p>原文链接： <a href="https://wechaty.github.io/microsoft-tech-forum-rui-interview/" target="_blank" rel="noopener">https://wechaty.github.io/microsoft-tech-forum-rui-interview/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> Microsoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Global AI Community - How to build a chatbot from zero to one on WeChat</title>
      <link href="/interview/2020-04-07-glocal-ai-community-chatbot-0-1.html"/>
      <url>/interview/2020-04-07-glocal-ai-community-chatbot-0-1.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2020/04-global-ai-chatbot/global-ai.jpeg" alt="global-ai"></p><p><img src="/img/2020/04-global-ai-chatbot/intro.jpeg" alt="intro"></p><h3 id="Talk-Video"><a href="#Talk-Video" class="headerlink" title="Talk Video"></a>Talk Video</h3><div class="video-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br><iframe width="560" height="315" src="https://www.youtube.com/embed/Uqtx6UViEro" frameborder="0" allowfullscreen style="    position: absolute;    top:0;    left:0;    width:100%;    height:100%;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> Microsoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Global AI 北京站 - 如何从0到1搭建 Chatbot - 李佳芮</title>
      <link href="/presentation/2019-12-20-microsoft-ai-global-training-camp-beijing-lijiarui-talk.html"/>
      <url>/presentation/2019-12-20-microsoft-ai-global-training-camp-beijing-lijiarui-talk.html</url>
      
        <content type="html"><![CDATA[<p>The Global AI Bootcamp is a free one-day event organized across the world by local communities that are passionate about artificial intelligence.</p><h3 id="演讲者简介"><a href="#演讲者简介" class="headerlink" title="演讲者简介"></a>演讲者简介</h3><p>李佳芮，句子互动创始人 &amp; CEO，微软 AI MVP，连续创业者，微信生态产品的开发、运营专家。过去六年中，曾为百余家企业提供微信生态技术和运营服务，包括亚马逊、腾讯、京东、新华网、联想、微软、飞利浦、鹏金所等。</p><p>2017年创立句子互动，专注基于微信生态提供智能对话服务。客户覆盖教育、保险、大健康等多个领域。同年入选百度AI加速器，次年和百度联手打造《从0到1搭建聊天机器人》系列课程。公司先后获得 PreAngel、Plug and Play、Y Combination,、TSVC（清谷资本）和阿尔法公社等多家中美机构天使投资。</p><p>GitHub 6,000+ Stars 开源项目 Wechaty 联合作者，创建并管理覆盖全球基于微信平台的聊天机器人开发者社区，多次应邀在 Google、Microsoft 大会中做 Chatbot 行业技术分享。</p><p>Organized by three AI MVPs: Huan LI, Yanping CHEN, and Jiarui LI.<br>Github Repository: <a href="https://github.com/huan/microsoft-ai-bootcamp" target="_blank" rel="noopener">https://github.com/huan/microsoft-ai-bootcamp</a></p><h3 id="Talk-Video"><a href="#Talk-Video" class="headerlink" title="Talk Video"></a>Talk Video</h3><div class="video-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br><iframe width="560" height="315" src="https://www.youtube.com/embed/bdq8VNuHvVo" frameborder="0" allowfullscreen style="    position: absolute;    top:0;    left:0;    width:100%;    height:100%;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 微软 </tag>
            
            <tag> AI </tag>
            
            <tag> Wechaty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年末最硬核！微软AI全球训练营北京站落幕</title>
      <link href="/presentation/2019-12-20-microsoft-ai-global-training-camp-ends-in-beijing.html"/>
      <url>/presentation/2019-12-20-microsoft-ai-global-training-camp-ends-in-beijing.html</url>
      
        <content type="html"><![CDATA[<p>Global AI Bootcamp是微软发起的全球AI开发者训练营活动，旨在凝聚全球的开发者共同学习交流，共同推进人工智能行业快速发展。在2019年12月14日同一天内，全球几十个国家，130个城市，上万人共同参与了这场AI人的狂欢盛会。当日18点30分，AI Bootcamp北京站也在宇宙中心五道口PNP创业孵化器内如期开幕，近百名中国AI开发者参与活动，聆听八位业内专家倾囊分享。</p><ul><li>Global AI Bootcamp: <a href="https://globalai.community/global-ai-bootcamp" target="_blank" rel="noopener">https://globalai.community/global-ai-bootcamp</a></li><li>Global AI Bootcamp Beijing: <a href="https://globalai.community/global-ai-bootcamp/china-beijing" target="_blank" rel="noopener">https://globalai.community/global-ai-bootcamp/china-beijing</a></li></ul><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-1.png" alt="global-bootcamp"></p><p>本次北京站Microsoft AI Bootcamp是由三位微软AI MVP共同发起与组织，三位分别是:</p><ul><li>Microsoft Regional Director, Microsoft AI MVP, Pre-Angel 合伙人李卓桓</li><li>Microsoft Data&amp;AI 解决方案架构师, 前 Microsoft MVP 陈堰平</li><li>Microsoft AI MVP, 句子互动创始人&amp;CEO 李佳芮。</li></ul><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-2.png" alt="image-2"></p><p>现场共有八位来自不同AI领域的嘉宾进行了分享，主题内容涵盖了从基础层到应用层的方方面面，因为分享内容过于精彩，多位嘉宾超时分享，小编在文章最后献上了活动全程直播视频回放，足足5小时，没来现场的开发者们可以远程学习了。</p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-3.png" alt="image-3"></p><h2 id="活动签到"><a href="#活动签到" class="headerlink" title="活动签到"></a>活动签到</h2><p>Wish you were here.</p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-5.png" alt="pnp"></p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-4.png" alt="register"></p><h3 id="1-主办方致辞"><a href="#1-主办方致辞" class="headerlink" title="1.主办方致辞"></a>1.主办方致辞</h3><p>微软AI MVP</p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-6.png" alt="image-6"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-7.png" alt="image-7"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-8.png" alt="image-8"></p><h3 id="2-上半场嘉宾分享"><a href="#2-上半场嘉宾分享" class="headerlink" title="2.上半场嘉宾分享"></a>2.上半场嘉宾分享</h3><ul><li>微软软件架构师  丁煜恒</li><li>Chatopera  王海良</li><li>兰州大学博士  武强</li><li>VMware软件工程师  张一赫</li></ul><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-9.png" alt="image-9"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-10.png" alt="image-10"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-11.png" alt="image-11"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-12.png" alt="image-12"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-13.png" alt="image-13"></p><h3 id="3-下半场嘉宾分享"><a href="#3-下半场嘉宾分享" class="headerlink" title="3.下半场嘉宾分享"></a>3.下半场嘉宾分享</h3><ul><li>Azure AI资深产品经理  张璐</li><li>前小米算法专家  郭成凯</li><li>句子互动创始人  李佳芮</li><li>微软Data&amp;AI架构师  陈堰平</li></ul><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-14.png" alt="image-14"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-15.png" alt="image-15"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-16.png" alt="image-16"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-17.png" alt="image-17"></p><h3 id="4-开发者互动提问"><a href="#4-开发者互动提问" class="headerlink" title="4.开发者互动提问"></a>4.开发者互动提问</h3><p>现场讨论相当热烈，十几位开发者提出了自己的问题，与嘉宾进行互动，并获得了微软礼品。坚持听讲到最后的童鞋还获得了微软Azure Pass。</p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-18.png" alt="image-18"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-19.png" alt="image-19"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-20.png" alt="image-20"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-21.png" alt="image-21"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-22.png" alt="image-22"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-23.png" alt="image-23"><br><img src="/img/2019/12-microsoft-ai-global-training-camp/image-24.png" alt="image-24"></p><p>经过五个小时的分享与讨论，活动在大家高喊“AI MVP”的声音中落下帷幕。</p><p><img src="/img/2019/12-microsoft-ai-global-training-camp/image-25.png" alt="image-25"></p><p>本次活动由Microsoft MVP &amp; DataFun &amp; Plug and Play &amp; Pre-Angel &amp; 句子互动全程落地支持。</p><h3 id="微软MVP项目介绍"><a href="#微软MVP项目介绍" class="headerlink" title="微软MVP项目介绍"></a>微软MVP项目介绍</h3><p>微软最有价值专家Microsoft Most Valuable Professional（MVP）是微软公司授予第三方技术专业人士的一个全球奖项。27年来，世界各地的技术社区领导者，因在线上和线下的技术社区中分享专业知识和经验而获得此奖项。</p><p>MVP是经过严格挑选的专家团队，他们代表着技术最精湛且最具智慧的人，对社区投入极大的热情并乐于助人的专家。MVP致力于通过讲课、论坛、网站、俱乐部以及自己所创建的网站和博客来帮助他人，并最大程度地帮助微软技术社区用户使用Microsoft技术。MVP申请请联系：<a href="mailto:ChinaMVP@Microsoft.com" target="_blank" rel="noopener">ChinaMVP@Microsoft.com</a>。</p><h3 id="DataFun介绍"><a href="#DataFun介绍" class="headerlink" title="DataFun介绍"></a>DataFun介绍</h3><p>DataFun专注大数据、人工智能技术在工业界落地经验分享，发起于2017.12，至今已在全国7个数据智能企业和人才集中的城市举办了100多场线下技术分享和两场千人规模的行业峰会，邀请近400位工业界专家和40位知名学者参与分享，近30000人次从业者参与线下交流。合作企业包含BAT等大厂，以及知名互联网公司和数据智能创业公司。其运营的公众号DataFunTalk共生产原创文章300+篇，近百万阅读，4万+精准粉丝。</p><h3 id="Plug-and-Play孵化器介绍"><a href="#Plug-and-Play孵化器介绍" class="headerlink" title="Plug and Play孵化器介绍"></a>Plug and Play孵化器介绍</h3><p>Plug and Play 前身始于1998年，投资和孵化了谷歌等互联网巨头。2006年在硅谷由伊朗家族企业Amidi Group创立，现已发展成为美国TOP 10的企业加速器，专注于对科技类创业企业的孵化投资，在美国硅谷、德国、俄罗斯、新加坡及西班牙等地均设有分支机构。Plug&amp;Play创始人曾经投出过PayPal、Dropbox、LendingClub等现象级公司，谷歌、罗技也曾从他旗下的办公楼走出。</p><p>2015 年，PNP 来到中国，目前已经在北京、上海、深圳、苏州、杭州、重庆、西安、郑州等创新腹地设有加速器。PNP 中国已累计投资、孵化超过 300 家中国创业公司，有超过 200 家创业公司进入到“PNP 独角兽加速计划”进行加速，我们与全国各中心城市及双创示范中心城市深度合作构建产业创新加速平台，此外，我们从美国硅谷、德国、俄罗斯以及 Plug and Play 在全球其他国家的加速器引进了超过 100 个科技项目进入中国市场。</p><p>作为全球无与伦比的创新生态平台，Plug and Play 中国致力于连接大企业与优质的创新项目，让硅谷的资源惠及全世界各个角落，让创新无处不在。</p><h3 id="PreAngel-介绍"><a href="#PreAngel-介绍" class="headerlink" title="PreAngel 介绍"></a>PreAngel 介绍</h3><p>PreAngel是一支专注于人工智能技术创业项目的天使基金，核心价值是提供“职业联合创始人”服务，参与创始 300+ 中美初创企业。它借助自身在人工智能产业领域的深刻的认识和资源积累，投资与早期创业团队并且帮助他们成长。PreAngel使命是在人工智能领域帮助有理想的创业者实现更大的社会价值。网址：<a href="https://pre-angel.com" target="_blank" rel="noopener">https://pre-angel.com</a>。</p><h3 id="句子互动介绍"><a href="#句子互动介绍" class="headerlink" title="句子互动介绍"></a>句子互动介绍</h3><p>句子互动是国内领先的智能对话服务商，专注于将智能对话落地到微信等社交生态，设计专业的对话系统对接流程，将业务场景梳理、数据收集、对话脚本撰写、系统搭建、评估反馈等进行标准化，帮助企业搭建符合真实业务场景的对话机器人。</p><p>句子互动的自研SaaS产品句子秒回，为企业赋能，大幅度增强其获客、用户粘性和销售转化的能力。客户来自教育、保险、旅游等多个领域，包括好未来、中国人寿、皇包车旅行、美团点评等，产品服务客户规模覆盖年销售额 100 万至 10 亿。其中 80% 的客户来自口碑传播，每天提升 100 万人次的销售体验。产品免费体验链接：wechat.botorange.com，扫码联系客服获取更多资料。</p><h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h3><p>附最后的彩蛋，北京站直播视频回放地址，各位童鞋认真学习起来吧！</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="https://www.youtube.com/watch?v=jKbMFxDw0T4?start=210" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><p>附录： <a href="https://www.bilibili.com/video/av80153181/" target="_blank" rel="noopener">国内用户，B站地址</a></p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 活动 </tag>
            
            <tag> 微软 </tag>
            
            <tag> AI </tag>
            
            <tag> Wechaty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信封杀营销外挂：我对微信生态的思考</title>
      <link href="/thought/2019-06-20-wechat-thought.html"/>
      <url>/thought/2019-06-20-wechat-thought.html</url>
      
        <content type="html"><![CDATA[<p>前几天，微信安全中心发布了《关于打击”微信营销”外挂的公告》，明确指出了各种恶意营销行为：</p><p><img src="/img/2019/wechat-1.jpg" alt><br>严厉禁止：暴力加粉、群发消息、自动回复、虚拟定位、微信群推广、批量增删好友</p><p>官方发文后，很多客户和朋友跑来问我对这件事的看法，在这里我简单聊一聊。</p><h2 id="1-什么是“微信营销”外挂"><a href="#1-什么是“微信营销”外挂" class="headerlink" title="1. 什么是“微信营销”外挂"></a>1. 什么是“微信营销”外挂</h2><p>行业上称之为“群控系统”，一台电脑能够控制成百上千部手机，而一般的群控组织，通常会有上万部手机 ，24小时不间断操作。</p><p>高级的群控系统不仅能批量加好友，群发消息，做朋友圈营销，还能满足任意定位、客户管理、智能模拟等微信营销功能。</p><p>用他们的话来说，这既节省了人工成本，提高工作效率，还能实现批量、自动化、高效办公。</p><p>然而，群控实质是一种违规营销，打破了微信生态平衡。</p><p>这些灰色流量通常会帮助微商发朋友圈、卖货，利用女性账号骗取红包，兜售色情资料，刷阅读，薅平台羊毛，具体的细节本文不进行详细介绍。</p><p>肉眼可见的是，这些打着“用户运营”旗号的群控软件，严重破坏了微信生态，大大影响了微信用户的体验。</p><p><strong>而这些，并不叫用户运营。</strong></p><h2 id="2-什么是用户运营"><a href="#2-什么是用户运营" class="headerlink" title="2. 什么是用户运营"></a>2. 什么是用户运营</h2><p>很多做运营的朋友跑来问我，是不是微信这样一做，基于微信生态无法做用户运营了？</p><p><strong>其实这个问题相当于在问：是不是粗暴拉人，一键爆粉等于用户运营。</strong></p><p><strong>答案显而易见：用粗暴的方式触达用户，对于转化、留存和复购没有任何帮助。</strong></p><p>现在越来越多的企业变得浮躁，他们的目标，已经不再是为用户提供有价值的产品，而是纯粹的要流量要变现。</p><p>一旦围绕这个目标，大家工作目的已经不是做最好的产品，而是用一切手段去获取流量。</p><p>这给了群控这样的工具可乘之机，起码给老板或者客户汇报的时候，多了好看的增长曲线。</p><p>产品价值有这样一个公式：产品价值=用户量×用户价值</p><p>可以看出，提升流量，并不等于提升产品价值，更不等于提升企业价值。因此，对于在给用户提供价值的运营来说，我认为微信的这次封杀，并没有什么大的影响。</p><p>微信在做的是连接用户，真正的运营应该思考的是，如何一步一步通过工具和自己的产品，和用户建立长久的信任，而不是不择手段去获取流量。</p><h2 id="3-破坏微信生态的行为，我们绝不姑息"><a href="#3-破坏微信生态的行为，我们绝不姑息" class="headerlink" title="3. 破坏微信生态的行为，我们绝不姑息"></a>3. 破坏微信生态的行为，我们绝不姑息</h2><p>坦白讲，作为在微信生态多年的从业者，看到微信官方的公告，我还是很欣慰的。</p><p>对于一款日活超过10亿的超级APP来说，很多商家盯上了微信的流量，通过“一键加好友，一键群发”这样的行为，一再骚扰用户，极大的影响微信生态的健康。</p><p>如果微信不站出来处理，结果可能就会成为下一个电信运营商，劣币驱逐良币，遍地的垃圾短信和骚扰电话，大家也就纷纷不用短信和电话了。</p><p>微信在这里，必须建立自己明确的规章准则，唯有对恶意行为的全面封杀，才能留有一片净土。</p><p>我们基于微信生态为企业做服务，一直谨慎遵循微信生态的固有准则，2年多以来，句子互动一直以不违规，不破解，不进行灰色操作作为最基础的产品研发准则，对所有使用的客户都有以下标准：</p><ol><li>不做赌博</li><li>不做色情</li><li>不为淘宝商家服务</li><li>不做任何破坏微信生态的事</li></ol><p>否则，我们会无条件停止服务。</p><h2 id="4-结语"><a href="#4-结语" class="headerlink" title="4. 结语"></a>4. 结语</h2><p>张小龙说：“技术的使命应该是帮助人类提高效率”，人工智能催生了包括我们在内的很多智能对话公司。</p><p>人类一直在追求更加便捷的交互方式，人机对话的交互方式，必然会逐渐取代现在的APP，就像过去APP颠覆了WEB一样。而这本质上，是人们获取服务效率的提升。</p><p><img src="/img/2019/wechat-2.jpg" alt><br>AI比你更聪明，但是你可以比他更善良</p><p>作为一家聊天机器人的服务商，我们时刻谨记：<strong>聊天机器人不是向用户耍流氓，他的使命是更好的服务用户。</strong></p><p>最后，我想引用微信八年公开课，张小龙提到的微信的2个原动力：</p><blockquote><p>1.坚持做一个好的、与时俱进的工具<br>2.让创造者体现价值</p></blockquote><p>第一点，对于微信来说，他做的很好。</p><p>第二点，我希望所有基于微信生态的从业者，都在真正的为用户创造价值。</p><p>我相信，只要你有价值，微信就会让你体现出来。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 创业 </tag>
            
            <tag> 微信生态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>做完Google Design Sprint 的后续</title>
      <link href="/thought/2019-05-26-google-design-sprint.html"/>
      <url>/thought/2019-05-26-google-design-sprint.html</url>
      
        <content type="html"><![CDATA[<p>Google Design Sprint 是Google Venture 发明的一个方法论，让团队在五天之内快速解决一个问题，设计研发新产品，完成用户测试并进行总结。</p><p>我是一个不喜欢参加培训的人，加上刚刚从美国回来，融资结束，需要快速进入到产品的工作状态中，对于各类培训，我并不是很希望参加这样的活动，因为我的一个股东是这个项目的发起人，加上我觉得团队可能需要封闭5天的磨合，所以推掉了其他的事情，参加了这个培训。</p><p>事实证明，如果全力的去做的话，还是有很多收获的，无论是冲刺的方法论，还是在未来工作中的一些做法，我总结了几点思考：</p><h3 id="1-关于长期目标-amp-短期目标"><a href="#1-关于长期目标-amp-短期目标" class="headerlink" title="1. 关于长期目标 &amp; 短期目标"></a>1. 关于长期目标 &amp; 短期目标</h3><p>从第一天开始，必须给自己制定好长期目标，所有的短期目标，都是围绕着长期目标服务的。</p><p>长期目标想好，尽可能的不能变，因为修改长期目标的结果，可能会导致你过去相当长一段时间的付出付诸东流。但是，当你发现自己的长期目标有问题的时候，一定要第一时间修改调整，以免未来更多的努力付诸东流。</p><p>无论是长期目标还是短期目标，必须要有量化的指标。我经常会讲这样的例子：我的计划是今年健身，这就是一句废话，如果你说，我的计划是今年健身100天，并实现体脂率降低到20%，才是一个合理的目标。</p><p>一个小的建议是：认真确定好尽可能不要变的长期目标，随时迭代自己一段时间的短期目标，配合自己完成计划。</p><h3 id="2-没有人第一次就能成功，不过你总得有个开始，才能走下去"><a href="#2-没有人第一次就能成功，不过你总得有个开始，才能走下去" class="headerlink" title="2. 没有人第一次就能成功，不过你总得有个开始，才能走下去"></a>2. 没有人第一次就能成功，不过你总得有个开始，才能走下去</h3><p>这个世界上似乎就没有第一次创业就能成功的人，做产品也是一样的。伏尔泰说：“Perfect is the enemy of good”. 你以为自己在构建一个特别完美的事情，不如从现在开始落地，开始做，没有人可以只靠想，就创建一个伟大的产品。</p><p>Google Design Sprint 就是这样做的，给自己一个很短的Deadline，时间到了，无论如何都要给出一个产品，这是对抗“拖延症”最好的办法。</p><p>所以从今天开始，希望大家都可以不要再”想”，不要以“思考”为借口，拖延交付时间。</p><p>但是这个“开始”不应该作为糊弄的一个理由，你必须要对自己交付出来的东西负责，原则上来讲，在团队协作的时候，你交付出来的东西，至少要自己迭代过5次，比如你要做一个产品介绍的ppt，对你自己来说要经过大纲梳理，文案整理，做一个粗糙的ppt，做一个细致一点的ppt，修改错别字等。但是为了团队效率的提升，你不能在大纲梳理的时候就叫大家过来看一次，文案整理又把大家叫过来，因为在任何一个环节，没有最终成品的时候，大家一定会有争执，没有人能完整的说清楚自己想要什么，而实际上，在你给出一个最终版之前，你可能都不知道自己想要什么。</p><p>这就是下一个部分我想说的事情。</p><h3 id="3-一起独立工作"><a href="#3-一起独立工作" class="headerlink" title="3. 一起独立工作"></a>3. 一起独立工作</h3><p>在Google Design Sprint 的时候，他设计的初衷是一个优化版的“头脑风暴”。但是我认为这件事的意义远不止于此。</p><p>你如何证明你是一个靠谱的工作伙伴？一定是靠你给出一个你最终的高质量交付为标准的。如果在一个接力的团队协作环节中，每个人给出的东西都超出预期，他们一定能做出一个超出预期的东西。这就是接着上面所说的。在工作的时候，针对自己的东西，不停的迭代，迭代产出后，给出一个你认为的90分产品给到你的同事。这样会让整个团队的效率提升，也会有越来越多的人愿意和你合作。在制作的过程中，对完成标准有疑问，可以随时向团队提问，如果用中间环节的某一部分提问，也是一种高效的提问方法。</p><p>我看到很多人在做相反的事情：要么就是有任何问题都不问，直到最后做出了一个大家完全不想要的东西，浪费了自己的时间，也拖延了整个项目的进度。要么就是在中间的每一个环节都拿出来和大家讨论，或者和领导汇报。如果这件事的负责人是你，你必须有能力在做之前就问清楚，你要交付的是一个什么东西，然后自己能够独立完成整个流程，在完成整个流程的时候一定会有疑问，把他们写下来，最后对方案的时候一起过。如果这个问题严重到影响产出结果的时候，第一时间提出来。</p><p>作为一个靠谱的合作伙伴，你应该有能力分辨，哪些是要最后整理出来提问的，哪些是要立刻提问的。</p><h3 id="4-学会倾听和观察"><a href="#4-学会倾听和观察" class="headerlink" title="4. 学会倾听和观察"></a>4. 学会倾听和观察</h3><p>在用户测试的环节，我发现两个去执行用户测试的人，都特别“勤劳”，希望教用户去做事情。而一旦这么做了，用户测试就失去了他的价值。你把用户叫过来，就是来验证你的猜想的，你要去听他说了什么，看他的表情和反应，然后总结自己的猜想哪里出了问题，去改善。</p><p>这在实际和客户交流的时候，也应该是这样的。虽然“客户是上帝”，这句话很多，但是大多数时候，我也不得不承认，客户说的都是错的。这个时候，作为服务提供方要去思考，而不是立刻跟客户说，“你说的不对”。如果客户在这个领域的认知已经超过了你，他为什么要付费给你购买你的服务呢？</p><p>当客户说你这个不对的时候，除了思考之外，是可以稍微的对客户进行引导的，但是引导时间30秒到1分钟足够了，如果你不能用几句话把客户带到你的逻辑里，你就不要强制带她进入你的逻辑了，因为这种事情，1分钟搞不定，30分钟也搞不定的，时间越长效果越差，时间越长客户甚至觉得你在强制扭曲他。没有人喜欢别人摆布自己的。无论客户说的对还是错，当发生这件事情的时候，一定你有问题，要么是你不会表达，要么是产品本身出了问题。而这两个都是需要你闭上嘴巴，回去自我修炼的。</p><p>最后，更高阶的方式是学会引导，如果你能引导客户去提问，引导客户说的更多，你才算真的赢了。如果你能用合理的方式引导他不停的在说话，估计离他最后购买你的产品就不远了。要知道，沉默是比批评更可怕的反馈，如果他对你没兴趣，他连批评你都懒得说的，最好的是收集到滔滔不绝的好评，次好的是收集到滔滔不绝的批评，最差的是对方一句话都不说，而可怕的是对方不说，你却还在滔滔不绝的引导他去一个他不感兴趣的事情上。</p><h3 id="5-认识到自己的局限性"><a href="#5-认识到自己的局限性" class="headerlink" title="5. 认识到自己的局限性"></a>5. 认识到自己的局限性</h3><p>你一定会做出错误的判断，在做任何一件决定的时候，都要认识到这一点。就连最牛的产品经理张小龙也说，“我所说的，都是错的”，你有什么自信去绝对的揣测接下来的发展呢？</p><p>创业的基础是，找到一个突破点，可以对某个细分市场形成压倒性优势。每天你都要想一想，你现在做的事情是不是这样一件事。如果是，仔细分析，为什么明明你有一个“王炸”，但是却迟迟没有炸起来。</p><p>分析、验证假设、再分析。</p><p>这是唯一能做的事情。我们做的每一件事，都可能是错的，我们要去验证假设。在向前冲的时候学会思考，如果一个人认为自己的判断一定是正确的，那何来思考？</p><p>以上，就这样吧，这是我周会的时候要给大家分享的，先整理好，说的时候会更清楚一点。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> Google Design Sprint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资本寒冬下是如何成功融资的：从YC毕业，到TSVC和阿尔法公社的投资</title>
      <link href="/thought/2019-05-01-juzibot-how-to-convince-investors.html"/>
      <url>/thought/2019-05-01-juzibot-how-to-convince-investors.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2019/05-juzibot-how-to-convince-investors/yc-w19.jpg" alt="yc-w19"></p><blockquote><p>今年1月到3月，句子互动参加了 Y Combinator W19 batch. 这是一段非常美好的旅程，在Demo Day 结束后，我们迅速拿到了TSVC(清谷资本) 和阿尔法公社的投资。非常感谢我们在 YC 的导师陆奇，Eric Migicovsky，Aaron Harris 和 Holly Liu 和所有 YC 的校友，也感谢清谷资本和阿尔法公社的信任。</p></blockquote><p><img src="/img/2019/05-juzibot-how-to-convince-investors/founders.jpg" alt="founders"></p><h2 id="首先，要学会讲故事"><a href="#首先，要学会讲故事" class="headerlink" title="首先，要学会讲故事"></a>首先，要学会讲故事</h2><p>通过我的导师, YC Partner &amp; W11 Alumni, Tutorspree Founder &amp; CEO Aaron Harris 的一次分享，让我对讲故事(Story Telling)有了深刻的理解：</p><p>作为创始人，我们必须学会在各种场合用各种方式去讲故事，这是我们的重要职责，实际上比我们想的要难。虽然作为创始人我们有非常大的愿景和梦想，但是没有大量的练习，我们很难让别人听明白。如果别人没有听明白，自然就很难吸引到和你并肩作战的人 —- 无论是合伙人，员工还是投资人。</p><p>而这个故事的大前提，是你是否<strong>相信</strong>。马云也曾说过:”相信相信的力量。”</p><p>首先，我们作为创始人是不是真的相信这是一件非常有价值的事情，这是一个会改变未来的事情，这必须是由我们自己创立一个公司才能完成，这是我们的使命。然后，我们需要持续的和合伙人讨论，让他相信，再去让员工相信，投资人相信，用户和客户，以及媒体都相信。</p><p>这个故事的开头应该畅想一个美好的未来，然后进一步说明，这个“未来”的发生和我们的公司是紧密关联的，我们的公司能推动这个“未来”发生。我们必须要清楚的告诉合伙人、投资人和员工，他们正在深度的参与改变未来的行动中，这会点燃他们内心的火焰 —- <strong>这是一个创始人最重要的任务。</strong>。</p><h2 id="准备-Demo-Day"><a href="#准备-Demo-Day" class="headerlink" title="准备 Demo Day"></a>准备 Demo Day</h2><p><img src="/img/2019/05-juzibot-how-to-convince-investors/demo-day-pitch.jpg" alt="demo-day-pitch"></p><p>YC 会在 batch 结束的时候举办 Demo Day，现场会有超过1000家投资人，200家创业公司进行展示，每个创业公司用2分钟的时间介绍自己的项目。作为200家公司中的一家，我们必须要抓住投资人的眼球，我们介绍的内容必须简单且清楚。</p><p>“简单且清楚”，这并不是一个简单的事情，YC 的导师们帮我们梳理核心亮点（YC 叫vertebrate），2分钟内最多展示3-4个核心亮点已经足够了。投资人能记住一个亮点，我们就已经赢了，这个时候，少即是多。</p><p>Demo Day 的演讲就好像是电梯演讲： 当你偶然在电梯间遇到一个重要的决策者的时候，你是否能在电梯从30层到1层的30秒钟内把你的项目说清楚。</p><p>Demo Day 现场的演讲并不是要说服投资人立刻投你，而是一个钩子，让他对你感兴趣，然后进一步有了解你的欲望。而后面更多的其实是在后面的30分钟甚至更长的一对一单聊中去解决的。</p><p>通常情况下，这需要介绍3件事：</p><ol><li>你是做什么的。</li><li>为什么这件事是有价值的。</li><li>为什么你能做成这件事。</li></ol><h2 id="Demo-Day-现场"><a href="#Demo-Day-现场" class="headerlink" title="Demo Day 现场"></a>Demo Day 现场</h2><p>为了让投资人能记住我们，我和我的合伙人在 Demo Day 那天穿了我们公司的文化衫，特别耀眼的橙色并印有大大的logo。因为在 Demo Day 的场外有很多投资人，我和我的合伙人和这些投资人主动用30s介绍自己，让他们知道我们在什么时候会上台演讲，使得可能对我们感兴趣的投资人更不容易错过我们的演讲。</p><p><img src="/img/2019/05-juzibot-how-to-convince-investors/investors-outside.jpg" alt="investors-outside"></p><p>在这里，如何找到对你感兴趣的投资人，避免不必要的沟通时间，无论是对创始人还是繁忙的投资人，都是非常重要的。因为很多投资人不投中国项目，在后来与投资人首次交流的时候，我会开门见山的提问：“Will you invest in Chinese company?”，如果得到“No” 的回复，我们就会迅速的友善的握手结束对话。通过这种简单直接的方式帮我们和大量投资人解决了互相的时间。</p><p>主动去和投资人 say hello 并在30秒之内勾起投资人的好奇心并给他留下深刻印象，然后留下名片，不只是在 Demo Day 当天非常重要，在未来的很多场合，我们作为创始人都应该这样去做，推广我们的公司，推广我们的产品。介绍这些的目的，仅仅只是一个开始，不是为了在30秒之内成单，而是能引发后面更深入的讨论和沟通，当然，更合适的是一对一的咖啡，而不是在人来人往的活动广场。</p><h2 id="Demo-Day-之后约见投资人"><a href="#Demo-Day-之后约见投资人" class="headerlink" title="Demo Day 之后约见投资人"></a>Demo Day 之后约见投资人</h2><p>在 Demo Day 结束后，我们设计了专门的流程更高效的和投资人进行后续的沟通：</p><ol><li>准备一个邮件模板，发给所有like过我或者收到了名片的机构。</li><li>准备一个30分钟版本的投资PPT和问答，详细介绍我的公司。</li><li>整理了一个excel来跟踪所有的投资人，信息包括机构名称，当前状态，预计投资额度和备注。投资人的当前状态按照下面5个进行分类：<ol><li>刚刚接触</li><li>进行了深入的讨论</li><li>表示了兴趣</li><li>收到了Term Sheet</li><li>钱到账</li></ol></li><li>根据表格情况安排每个投资人的见面，我会先用5-10个机构来联手，然后后面重点谈我非常想要的的机构。</li></ol><p>在和投资人介绍完项目之后，我会直接问出下面4个问题：</p><ol><li>你的 checksize 是多少？  </li><li>你们机构后续的投资流程是什么？（我们需要明确这个人是能直接决策还是需要上投委会讨论）</li><li>你们的基金规模多大？</li><li>你们这一期基金是第几年了？（明确机构账上是否有钱且他对这个项目回报时间的预期）</li></ol><p>投资人最希望找到的创始人，是一个对所做公司业务专业且为为数不多的的能做成这件事的人之一。</p><p>Paul Graham 在<a href="http://paulgraham.com/convince.html" target="_blank" rel="noopener">How to convince investors</a>投资人最希望找到的创始人，是一个对所做公司业务专业且为为数不多的的能做成这件事的人之一，具体的说：</p><ol><li>我做的事情是一个值得投资的事情。</li><li>为什么这是一个值得投资的事情。</li><li>和投资人解释清楚 1和2。</li></ol><p>很庆幸，我拿到了我最喜欢的两家机构的 Offer： TSVC 和 阿尔法公社：</p><p><img src="/img/2019/05-juzibot-how-to-convince-investors/my-investor.jpg" alt="my-investor"></p><h2 id="一些技巧"><a href="#一些技巧" class="headerlink" title="一些技巧"></a>一些技巧</h2><ol><li>你需要在正式启动融资后，短时间内快速接触尽可能多的投资人。你和投资人交流的次数越多，你就能从投资人角度看到公司的更多价值，拿到 Term Sheet 的机会就会越大。而你看起来拿到 Term Sheet 的机会越大，你就能交流的机构越多。我在 Demo Day 之后的1个月内约见了100多个投资人。</li><li>第一个 Term Sheet 非常重要。拿到第一个 Term Sheet 之后，后面的投资人会得到更多的信心，进而有更大的意愿给出 Term Sheet。为了拿到第一个 Term Sheet，可以在估值上做出适当的折扣来感谢投资人的首次认可。</li><li>募资额度完成后处理好与投资人的沟通。最后我们融到的钱很快就超出了我们的预期，后续还有很多机构联络，我们交流了一次之后就明确说明本轮募资已经关闭的情况，并约定保持联系继续沟通，为未来的或作奠定良好基础。因为拉投资的目的不是为了拿到更多的钱，而是募到所需要的钱，尽快投入到公司开展业务。</li></ol><h2 id="最后，请确认这是你的理想"><a href="#最后，请确认这是你的理想" class="headerlink" title="最后，请确认这是你的理想"></a>最后，请确认这是你的理想</h2><p>其实拉投资并不是一个困难的事情，而真正做出有价值并被市场认可的产品，带领公司持续向前走，才是困难的事情。作为创始人，你会变得自我怀疑，变得沮丧，唯有你知道这是你坚持的理想，才能陪你走过这些难熬的日子。</p><p>正如下面这张在 YC 一进门的创业曲线展示的那样：最初，你非常的兴奋并充满激情，然后你变得沮丧，如果你持续坚持在这件事上，也许你会有一个很大进展，也许会花费你很长的时间；又或许你可能会失败，而你不做的话，你永远也不知道这件事的答案。</p><p><img src="/img/2019/05-juzibot-how-to-convince-investors/startup-curve.jpg" alt="startup-curve"></p><blockquote><p>It is you to make your startup success. You only fail when you fail.</p></blockquote><h3 id="Related"><a href="#Related" class="headerlink" title="Related"></a>Related</h3><ul><li><a href="http://paulgraham.com/convince.html" target="_blank" rel="noopener">How to convince investors</a></li><li><a href="http://paulgraham.com/fr.html" target="_blank" rel="noopener">How to raise money</a></li><li><a href="http://paulgraham.com/growth.html" target="_blank" rel="noopener">Startup = Growth</a></li><li><a href="https://andrewchen.co/after-the-techcrunch-bump-life-in-the-trough-of-sorrow/" target="_blank" rel="noopener">Life in the “Trough of Sorrow”</a></li></ul><h3 id="Juzi-Bot-YC-W19-Demo-Day-Pitch-Deck-amp-Video"><a href="#Juzi-Bot-YC-W19-Demo-Day-Pitch-Deck-amp-Video" class="headerlink" title="Juzi.Bot YC W19 Demo Day Pitch Deck &amp; Video"></a>Juzi.Bot YC W19 Demo Day Pitch Deck &amp; Video</h3><ul><li>Demo Day Pitch Deck: <a href="/img/2019/05-juzibot-how-to-convince-investors/juzi-bot-yc-w19-demo-day.pdf">pdf</a></li><li>Demo Day Pitch Video: <a href="https://v.qq.com/x/page/l3004xi6lf7.html" target="_blank" rel="noopener">qq video</a>, <a href="https://youtu.be/ePKYaGGKsWw" target="_blank" rel="noopener">youtube</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 投资 </tag>
            
            <tag> YC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【独家专访】2019 YC冬季班中国团队－进YC是一种怎样的体验</title>
      <link href="/interview/2019-03-19-juzibot-in-yc.html"/>
      <url>/interview/2019-03-19-juzibot-in-yc.html</url>
      
        <content type="html"><![CDATA[<p>一向以公平著称的美国高等教育界，这几天被集体打脸了：美国联邦检察官周二对50人提出指控，因为他们涉嫌参与通过行贿“购买”耶鲁、斯坦福、南加大等名校新生入学资格。这些人中间，除了考试工作人员、体育教练、私人招生顾问，还有进行贿赂的富豪家长们，其中不乏好莱坞明星和著名商界领袖。</p><p>美国名校录取率低是出了名的，就拿斯坦福大学来说吧，每天的录取率只有可怜的5%。当别人家的孩子在为了SAT、入学申请焦头烂额的时候，这些富人的孩子，却被家长们轻轻松松的买进名校。</p><p>不过，这样的“骚操作”并不是到哪里都管用的。美国有这么一个地方，录取率只有更可怜的1.7，而且花钱无门。这个地方就是孵化过Airbnb、Dropbox、Reddit、Twitch这些明星公司、如今已经成为了全世界创业者趋之若鹜的创业圣地的Y Combinator。从2005年成立到现在，YC一共孵化了1900个公司，其中价值过亿美金的已经有93个，其孵化过的所有公司的总市值，已经超过了1000亿美元！</p><p>进了YC就跟进了名校一个道理，基本可以和成功画个等号了，还说不定一不留神就可以成为独角兽。那么，进入YC到底是一种怎样的体验？从三个月集训到Demo Day，入选的公司都会经历些什么？今天是YC 2019冬季班Demo Day的日子，我们请特意到了入选这一期的创业者、桔子互动的创始人李佳芮，来给我们讲讲她在YC故事。</p><p><img src="/img/2019/03-juzibot-in-yc/lijiarui.jpg" alt="lijiarui"></p><blockquote><p>桔子互动的创始人李佳芮</p></blockquote><p>以下为采访实录。</p><h2 id="1-如何从12000份简历中脱颖而出"><a href="#1-如何从12000份简历中脱颖而出" class="headerlink" title="1. 如何从12000份简历中脱颖而出"></a>1. 如何从12000份简历中脱颖而出</h2><p><strong>一佳</strong>：YC应该说是名声很大，Y Combinator，走出来很多很出名的这样的公司，所以不光是在美国，可以说是全球范围内创业者们都非常关注这个孵化器，那进入YC也变成了一个竞争非常激烈的事情，能介绍一下你当时就是说申请YC的过程吗？</p><p><strong>佳芮</strong>：<strong>YC今年总共收到了12000份简历，录取了205个公司，录取的比例是1.7%</strong>，外资的公司（的录取比例）号称也是相当低的。虽然它录取了很多公司，但是收到的简历数量也非常的高，所以我们相对还是比较幸运的。</p><p>在整个申请的过程中，我们也比较幸运，我们按照一个朋友的介绍，填了所有的信息。之后YC来了中国给我们做的面试。</p><p><strong>一佳</strong>：是他们去中国面试你们的？</p><p><strong>佳芮</strong>：对，当时我签证出了点问题，最开始邀请我去美国，然后我的签证就一直延迟。之后他们正好来中国去办YC China的活动，要推广YC China，顺便就面试了我们，我们就拿到offer。</p><p><strong>一佳</strong>：当时整个面试的过程大概有多长时间？</p><p><strong>佳芮</strong>：很短，大概5到10分钟。</p><p><strong>一佳</strong>：那就是靠这5到10分钟去决定，这是一个非常快速要去获得他们认可的一个过程。</p><p><strong>佳芮</strong>：对，因为所有的公司都相对比较早期关系，YC可能更看重的是你的增长、你的未来。如果你不能用五分钟让别人信服你的话，可能是你没有想清楚你公司的业务。</p><p><img src="/img/2019/03-juzibot-in-yc/yc-team.jpg" alt="yc-team"></p><blockquote><p>李佳芮及团队成员在YC中国</p></blockquote><p><strong>一佳</strong>：今年YC从全球各地上万个报名项目中只选拔了205家创业公司，其中来自中国的更只有6家，我想大家都非常关心的就是，什么样的项目会获得YC的青睐呢？佳芮，你能具体得介绍一下你们公司主要做的是什么产品？有什么与众不同的地方？</p><p><strong>佳芮</strong>：好，我们公司现在的主要的产品是－我们发现很多企业面临的一个问题，他们花了大量的时间，通过微信和外部的人进行沟通，产生了大量的消息，这些消息无法被保存记录和分析，同时因为企业和外部沟通的时候，经常会涉及到一个用户要和企业的多个部门的人去沟通，那么这个消息是没有办法去同步的。所以这样会让用户的体验不好，用户和企业的响应速度变得很慢。更糟糕的是，我聊下来之后发现，很多企业甚至不知道自己的反应速度。</p><p><strong>所以我们提供的一个解决方案是，可以支持多人协同管理一个微信，保存、共享微信消息给整个团队并提供相应的分析报告，同时我们支持消息的汇总和自动分流，提高整个团队的反应速度。</strong>除此之外，我们提供智能问答等多种聊天机器人去辅助对话，让互动更加智能高效。总的来说，就是我们在微信上提供了一个集销售市场和售后服务于一体的客户沟通系统，让企业不同部门的人协同使用微信，快速为客户提供服务，帮助实现业务增长，实现客户的转化，实现收入的增长。</p><h2 id="2-跳着舞蹈找到的创业契机"><a href="#2-跳着舞蹈找到的创业契机" class="headerlink" title="2. 跳着舞蹈找到的创业契机"></a>2. 跳着舞蹈找到的创业契机</h2><p><strong>一佳</strong>：你是从哪里获得灵感，找到基于微信的聊天机器人，这么一个产品切入点？</p><p><strong>佳芮</strong>：我说一下这个事情的契机。大概在两年前，因为我本身会跳舞，所以我和一些朋友一起录了很多舞蹈教学视频，教大家怎么去跳舞跳爵士。时间也不是很长，就录了200多集视频，已经有了两三千万的播放量，积累了很多的粉丝。</p><p>而当时我遇到一个问题是我怎么和我的粉丝进行沟通，我申请了一个微信的小号，去和我所有的粉丝沟通，建了很多微信群。<strong>后来我发现和粉丝沟通起来非常的累并且很难，人是做不了这些事儿的。</strong></p><p>我自己是一个程序员，所以我就当时写了一个小的demo，解决我自己的问题。以后我发现，这可能是微信的一个很大的机会，它能帮我去解决我的舞蹈社群的问题，它一定能帮助更多的企业解决和用户沟通的问题、提高效率，并且提高用户的满意度。</p><p><img src="/img/2019/03-juzibot-in-yc/juzibot.jpg" alt="juzibot"></p><p><strong>一佳</strong>：所以等于是从自己的一个痛点、一个需求慢慢的去开发出了这么一个更广阔的一个商业机会。我也觉得很有意思，微信在我们生活当中占的比例越来越大，我经常有时候会看一些朋友他们手机当中会统计你在哪个App上面花的时间最多。基本上华人圈子里面几乎所有的人他们用的最多的App就是微信，所以微信在我们生活当中作用真的很大，而且可能已经超越了只是朋友之间聊天这么一个用户场景，可能延展到工作当中的沟通，甚至现在还有很多的商务在微信上实现。你是基于微信生态在开发产品，那你觉得微信我们未来的生活中想象空间还有多大，商务这一块在微信上的发展你觉得会变成一个什么样子的状态？</p><p><strong>佳芮</strong>：这是一个特别好的问题，最近我也在想这件事儿。我可以说一个数据，现在整个消费者的购买，其中有将近23％是来自于线上，77%是来自于线下。现在正在发生一个很大的变化－我们会发现很多人购买产品、服务的时候，会倾向于线下可能看一看，然后加微信、在微信上聊一聊。可能聊了一个小时以后，才进行购买，大概是这样一个情况。</p><p>所以我也可以让你想象几个场景，比如说当你需要定制一个境外自由行计划的时候是怎么做的？你可能会跟他聊很久，大部分会通过微信。这同样会发生在当你想给你的孩子购买一个一对一家教服务的时候，或者你给自己购买一个超过1万块钱的服务的时候。<strong>所以我认为接下来会有一个新的场景，就是越来越多的人会通过微信沟通一段时间以后进行购买。</strong></p><p>那么刚才我说的一个数据是23%和77%，我认为未来的一个形式大概会变成三分之一的纯线上商城、三分之一1%的纯线下卖场、以及另外三分之一就是通过微信沟通很久，最终做出购买决策，这种可能同时包括线上线下。有的人会说这是某种形式的新零售，或者说一种顾问式服务，我认为它会占到31%。</p><p>这样的场景我总结了几个特点：</p><ul><li>第一个特点是一定通过微信，因为国内没有人不用微信；</li><li>第二个沟通时间超过一个小时；</li><li>第三个是会卖很多非标准的产品；</li><li>第四个是单价一定超过一千块，非冲动的消费；</li><li>还有一个就是他和企业内沟通的人在不停的发生变化，从收钱到产品支持到售后等等。</li></ul><h2 id="3-聊天机器人会颠覆我们的生活吗"><a href="#3-聊天机器人会颠覆我们的生活吗" class="headerlink" title="3. 聊天机器人会颠覆我们的生活吗"></a>3. 聊天机器人会颠覆我们的生活吗</h2><p><strong>一佳</strong>：这就意味着未来的客服会变得特别的个人化，因为有很多时间你就是通过微信在进行一对一问答、聊天？</p><p><strong>佳芮</strong>：对，这是我对聊天机器人的一个判断，我认为人类获取服务的方式一直在变化，获取的是服务的本质是没有变的，无外乎就是吃喝拉撒这些需求，但是方式会在变，那方式一定变得越来越简单。显然我跟一个助理或者一个人说话就把这事办了，一定是最简单的。那么如果有一些技术，有一些手段能让这件事实现的话，大家一定不会去打开一个APP、或者打开一个网页去自己搜索，不会按照机器、按照这台电脑背后的产品经理的方式去做很多事儿。所以我觉得，这是为什么会有这样的一个机会的原因。</p><p><strong>一佳</strong>：YC在interview你的时候也专门是关注了机器人市场，当时在面试的时候，你有记得他问过最难的问题是什么？ 你当时会觉得特别有挑战性？</p><p><strong>佳芮</strong>：我觉得他有一个问题问的还蛮好的。他当时问：“你认为未来会有几种大类的Chatbot（聊天机器人），还是说会有成百上千种各个不同的Chatbot？”</p><p>我觉得这是一个很好的问题，并且它相对开放。因为我们公司是做聊天机器人的，我也愿意把聊天机器人和我们过去、现在用到的网站和App做对比。那么当我们获取一个服务的时候，原来我最本能是去网上搜索，然后在网站上去获取服务。比如说点餐、订咖啡、搜寻资讯。你有App以后，那么我们就不需要再打开电脑了，通过摁几下手指，就可以把所有的这些东西完成，那我认为未来的交互形式会逐渐从电脑到手机，再到语音或者是说文字。我只要跟机器说一下，我需要什么机器人给我提供服务。</p><p>所以这样看起来的话，chatbot上面的各种bot很像我们手机的App，所以那么未来的bot是不是像app一样几家种，比如说携程只做行旅，然后比如让大众点评，只就上美团只做外卖，滴滴只做打车，未来是这几个这样的巨头bot产生的服务，还是说会产生成本上千的小的bot？而这个问题至今我也没有一个很好的答案，但是我觉得是一个很值得思考的问题。</p><p><img src="/img/2019/03-juzibot-in-yc/yc.jpg" alt="yc"></p><p><strong>一佳</strong>：说到聊天机器人，我觉得它是一种交互方式的改变，比如现在语音的交互已经在Amazon Alexa以及Google Home中实现了，你觉得这种交互方式的改变对于未来互联网行业会带来什么？或者说聊天机器人的场景想象空间到底会有多大？</p><p><strong>佳芮</strong>：如果是放到10年甚至20年前，我觉得其改变应该是颠覆式的。我之前和一个朋友聊过，就像互联网的出现一样，会带来一个翻天覆地的改变。<strong>它会改变人们获取资讯的方式、获取服务的方式。</strong></p><p>那么当聊天机器人或者人工智能等技术得到了一个非常高速的发展之后，获取资讯的方式可能会就是和一个聊天机器人去说，或者是和一个聊天机器人打字。<strong>我认为聊天机器人不一定只有语音的方式，未来的交互方式一定是有语音、有视屏、有文字多种交互方式并存。包括像看到智能家居，都算这个领域的一块。</strong></p><p>那么，你去跟它去交互，那你跟它去说今天发生什么事，它知道你是谁，你的背景是什么样的，你想知道什么样的信息等等。比如你说想喝咖啡，它知道你喜欢喝什么样的咖啡、什么口味、怎么样去推荐。我觉得这样的话，相当于让每个人都有自己的私人助理，这会颠覆整个原来获取资讯和服务的方式。所以放眼未来10年到20年，会有一个非常大的改变，而且会有很多创业公司会在这里面有机会弯道超车。</p><p><strong>一佳</strong>：所以看来其实是一个新的战场、新的赛道，会有很多的一些新公司出现。你觉得现在技术主要还是借助于人工智能作为它的核心吗？是技术上还需要什么突破吗？</p><p><strong>佳芮</strong>：我认为这一块可能还有很多路要走，第一是技术肯定是没有那么成熟。因为首先，现在在非限定域内，你想它做所有的事儿，技术上也是完全不可能。比如，你可以很容易地教会一个机器去下围棋，并且下得非常的好，但是如果你想让一个机器知道你的喜好、帮你在什么时间内订咖啡，这件事其实并不是很简单。</p><p><strong>一佳</strong>：最大的难点在哪？亟待突破的地方是什么？</p><p><strong>佳芮</strong>：我认为最大的难点是你怎么样让机器去思考，<strong>让机器像人一样去思考，还包括让机器去推理。</strong></p><p><img src="/img/2019/03-juzibot-in-yc/lijiarui-2.jpg" alt="lijiarui-2"></p><p><strong>一佳</strong>：那距离我们还有很远呢？</p><p><strong>佳芮</strong>：我举个例子，比如说我跟你说，我说我想喝点东西，那么如果你是作为人的话，当我是早上跟你说的时候，你觉得我可能想喝一杯咖啡，等晚上我跟你说的时候，可能是只想喝一点热水或者是牛奶助眠，根据时间是不一样的。这也是跟人的情绪，你对我的了解（而有所不同的），这些东西是很难通过机器完全去推理出来的。它不只是一句话，还包括我这句话的语调，包括我的表情，包括肢体动作，包括你对我的了解，这些最终是要做一个推理的，这件事我觉得大家的预期都太高了。</p><p>我认为在聊天机器人领域有一个很大的误区，就是我们看的科幻电影太多了，所以我们会认为机器能帮人类解决所有的问题，但实际上不是的，在限定领域内机器学习已经做得非常好，但是如果是一个非限定于什么都能做的事，我觉得是有一定的度。但即便是这样，我认为我们还有很多的机会。</p><p>现阶段在企业服务上是最先有机会的，机器更擅长去做记录，去做一些自动化的操作。在早期的几句话里边，机器人是完全可以训练出来的，（因为它）是一个有限域。比如说，跟你说话前五句、前十句收集到信息，基本上都差不多。所以，它是可以被训练的。</p><p>在企业应用的场景，我可以让机器去引导人去接入。<strong>我认为可能在三年之内，更好的一个场景是人和机器的协作，</strong>机器先去把该做的事做了，然后筛选出一波用户，人再去主动跟进。人跟进的时候，机器会通过所有的聊天分析，辅助告诉你什么时候该说什么样的话，并且把一些推荐的话放上去，那么这种方式已经能大大提高生产效率了。我认为，其效率提升可能是十倍的一个提升，这已经足够了。当这一步做得足够好的时候，可能是技术数据的发展，整个行业商业对它理解的深入可能就会到下一个阶段。</p><p><strong>一佳</strong>：很多的一些服务都是要等到这种对电信基础设施也是有要求的，现在大家都在聊的5G，你觉得这个5G会对于比如说像聊天机器人以及交互模式的进一步的升级会有好处吗？</p><p><strong>佳芮</strong>：一定是会有好处的，因为像我刚刚说的，人机交互的方式可能不再只是语音和文字了，它可能需要如果我们能面对面看到你所有的一些具体动作、表情再去做分析，分析的一定会更好。所以如果有了5G以后，那么设备更快的话，一定会让设备收集到信息变得越来越多，那么当它收集到的信息足够多的时候，就会有更多的分析价值。</p><h2 id="4-这些在YC的日子"><a href="#4-这些在YC的日子" class="headerlink" title="4.这些在YC的日子"></a>4.这些在YC的日子</h2><p><strong>一佳</strong>：YC有很多的资源、在硅谷有很多的导师，但是这些都是扎根于美国市场。那你们是作为一个中国的项目，加入了YC这么一个孵化器之后，你觉得他们能真的帮到你们吗？</p><p><strong>佳芮</strong>：是可以帮到我们的，这个问题，我可以理解成我们明明是在做中国业务，为什么要加入YC。总的来讲，大概是两方面的原因：</p><ul><li>第一方面的原因，是根据公司的业务出发；</li><li>第二方面的原因是YC确实给我带来什么？我从这两块去讲。</li></ul><p>第一块是因为我们公司在过去两年，做了一个非常大的微信聊天机器人的开发者社区，我们覆盖了全球的微信聊天机器人开发者，那么他们不只是在中国的各个城市，还包括硅谷的、纽约等美国的很多城市，同时还包括澳洲、欧洲都有我们的用户。因为我们整个这个项目都是用全英文写的，所有我们吸引了这些人来，而且很多人也在找我们有合作。所以我觉得，这是一个机会和他们去合作，<strong>因为YC代表了全球化，所以这对我对我们是一个机会。</strong></p><p>另外我觉得是一个政策上的机会，包括我们现在看到中美要扭转贸易逆差，很多美国的企业是希望把东西卖给中国的，当他想把东西卖给中国的时候，他们一定需要微信去和客户沟通。 包括我们另外还有一个投资人，在硅谷也有很多的客户。那么这些境外的要进中国的时候，他们是需要这样一个解决方案的。<strong>通过加入YC这种品牌的效应，我们未来会吸引更多的客户过来。</strong>所以这个是从公司业务的角度，我们为什么要去这么做。</p><p>另外，我非常喜欢YC是因为这三个月以来，这些导师给了我很多帮助，不管是业务上的、增长上的。而且我们都是一些比较年轻的创业者，导师们在创业上很多失败的经验，他会不停地去分享给我们。此外，他们还让我们去专注一些创业很基础的常识，不停地用各种方式让我们去回想，这也是对创业是一个很好的帮助。</p><p><strong>还有YC也比较强调的就是Peer Pressure，这200多家公司也在互相交流、互相有一些潜在的压力，互相去有业务的合作，这种整个的氛围我觉得非常好，就像来到了一个创业大学，就像重新过了一次大学。</strong>包括现在YC里面有三家公司已经在购买我们的服务了，这也是给我们带来的一个非常好的收获。</p><p><img src="/img/2019/03-juzibot-in-yc/team-yc-partner.jpg" alt="team-yc-partner"></p><blockquote><p>团队与YC Partner</p></blockquote><p><strong>一佳</strong>：所以从人脉拓展、团队建设以及客户的开发这三个层面上，其实加入YC对你们都是非常有意义的。向我们来说一下，就是说加入YC之后，这三个月的时间他们是帮你们怎么设计的。比如说是不是有一个进阶的一个过程，还是说会给你们一个目标，让你们在三个月的时间当中去分阶段的完成？</p><p><strong>佳芮</strong>：首先YC是很难给200多个企业都去定目标的，因为企业的目标一定只有企业自己知道。所以在整个batch里面，我认为分为两个阶段:</p><ul><li>第一个阶段是如何实现业务增长，<strong>YC要求的增长一定是几倍的快速的增长。</strong>所以在前两个月，就是在3月之前，我一直在做的是怎么去找到我们的Product Market Fit（产品的市场定位），怎么去实现我们的业务增长。</li><li>然后再后一个月，也就是从3月份之后进入了叫Fund Raising Season，也就是开始融资，准备Demo Day，所以应该是这样的两个阶段。</li></ul><p>我们的标准是每两周有一次Group Office Hour，大概有不到十支团队一起去分享这两周的进展计划、遇到的问题、怎么解决等等。然后我们有四个Partner，去会跟我们去讲问题。结束了之后，就会有晚餐，大家一起吃饭、一起聊天。晚餐之后，还会有一个小的talk，会有各种比较有意思的人去分享，很多都是YC之前的创业者，分享他们遇到的一些问题是如何解决的，做了哪些错事，做哪些对事，让我们学到了很多。</p><p><strong>一佳</strong>：在YC这三个月里，他们的合伙人或者YC的这些工作人员，会定期来关心你们的进展、或者给你们一些指导、回答你们的问题吗？</p><p><strong>佳芮</strong>：我们是随时可以约我们YC partner，有一个内部的系统，随时可以约。我就会去跟他聊遇到了什么样的问题，并且他希望我们每周都遇到不同的问题，去解决不同的问题。</p><p><strong>一佳</strong>：大概在YC的这三个月当中，每一天的生活大概是一个什么样子的？</p><p><strong>佳芮</strong>：我们团队过来了三个人，其实我们的生活还是非常紧张的。因为我们的业务在中国，不能因为时差和客户断了联系，所以基本上我们每天都会睡得非常晚，为了和中国保持同步。同时，我们也需要更多的时间思考我们现在的业务方式，所以第二天也要起的相对比较早。这样一来，我们整个工作时长相当于是比在国内的时候又拉长了很多，一直处于一种高度紧张的状态，但我们还蛮享受这种状态的。</p><p><img src="/img/2019/03-juzibot-in-yc/team-building.jpg" alt="team-building"></p><blockquote><p>团队团建时间</p></blockquote><p><strong>一佳</strong>：马上Demo Day就要到了，那可以介绍一下你现在在做哪些的准备吗？</p><p><strong>佳芮</strong>：我现在主要在准备Demo Day现场我们会有的一个两分钟的pitch，是向一千多位投资人（pitch），快速的获取他的注意力。因为一千多个人他当天可能会看到200多个项目，我们怎么能够让他还记得我们，记得我们是做什么的，记得我们的公司，所以我需要让我这两分钟足够的吸引人。</p><p>它更像一个30分钟的电梯演讲，我正在梳理我们最核心最能吸引人的点，可能它像一个钩子，然后陆陆续续的把他勾过来，然后吸引他来找我去做后面所有follow up的这些投资的再跟进。所以这是我要准备的第一件事，它包括一个deck，还包括一个这两分钟的pitch。然后第二件事，我现在还在准备我们下一个融资的计划，包括我们的团队接下来怎么样去发展，要多少钱去支撑我们的团队，然后要出让多少股份，这是第二件事。</p><p><strong>一佳</strong>：最后还想问你，在YC的过程当中学到很多东西，获得很多新的启发，有了更多的更高的一个起点，那下一步的话你有些什么计划吗？</p><p><strong>佳芮</strong>：下一个计划我们大概分为两个阶段，第一个阶段大概我们会在9月份的时候，把我们的产品更加的完善一些。然后我们会把我们现有的客户实现高的转化，大概在9月份的时候，我们期待能够覆盖更多的中小企业用户。我们覆盖的行业主要是在教育旅游和大健康，因为这些行业基本都在卖非标品，沟通时间很长，我们期待能够覆盖超过5000个这三个行业的企业用户。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>今年YC的Demo Day已经在美国时间本周一开始，这次的Demo Day也是创下了很多个第一：</p><ul><li>第一次因为项目太多而需要两天进行</li><li>第一次开设线上直播</li><li>第一次把地点从Mountain View 的Computer History Museum 电脑历史博物馆搬到旧金山的Pier 48。</li></ul><p>还记得2016年的时候，因为有126个项目入选，YC的CEO Sam Altman还开玩笑说，这是“太多倍的增长了”。一共有超过200个项目亮相，比去年的132个项目相比，涨幅超过了50%。不知道这一届的YC毕业生中，是不是可以飞出下一只独角兽呢？</p><p><img src="/img/2019/03-juzibot-in-yc/chuangmei.png" alt="chuangmei"></p><blockquote><p>原文链接： <a href="https://mp.weixin.qq.com/s/4It5dD0b2mokOJzLNZ8Iag" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4It5dD0b2mokOJzLNZ8Iag</a></p><p>桔子互动为句子互动曾用名</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 句子互动 </tag>
            
            <tag> YC 中国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向心而行：女性创业力量｜和时间创造“新”自己</title>
      <link href="/interview/2019-03-08-woman-power-pnp.html"/>
      <url>/interview/2019-03-08-woman-power-pnp.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>We turn not older with years，but newer every day.</p><p>我们并非在年复一年地变老，而是日复一日地焕然一新。</p><p>——艾米莉 · 狄金森</p></blockquote><p>1909 年 3 月 8 日，芝加哥街头的妇女走上街头，为反对男女不平等而举行了游行示威。他们提出“面包与玫瑰”的口号，“面包”代表平等的报酬，“玫瑰”代表品质的生活。她们努力争取平等权利，诞生了今天的妇女节。</p><p>而今天，随着新经济的快速发展，Plug and Play 中国见证越多越多的女性力量走入商业世界，开始发声，被社会所认可。她们弥足珍贵，但也不容小视。她们敢于打破传统标签，追求自我价值，也必将影响整个世界。</p><p>3 月 28 日，Plug and Play 中国创业者微纪录片第一季《向心而行：从“创”到“新”的铺路人》即将暖心首映，其中也不乏女性创业者的身影，比如我们今天的主角，桔子互动的创始人——李佳芮。</p><p>她的团队致力于以智能会话代替传统网页，从而为用户提供更个性化、精练化的智能服务。</p><p>↓点击视频，听她的故事↓</p><div class="zoom-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br>  <iframe src="https://v.qq.com/txp/iframe/player.html?vid=i0846jvd8xv" width="560" height="315" allowfullscreen webkitallowfullscreen frameborder="0" style="      position: absolute;      top:0;      left:0;      width:100%;      height:100%;    "></iframe><br></div><blockquote><p>跳出安全区，我觉得每天都是不同的挑战。<br>生命经历的事情变多了，生活有了稳稳踏实的厚重感。<br>——李佳芮</p></blockquote><h2 id="撕掉“女性标签”，向“心”而行"><a href="#撕掉“女性标签”，向“心”而行" class="headerlink" title="撕掉“女性标签”，向“心”而行"></a>撕掉“女性标签”，向“心”而行</h2><p>让我们回到源头，去打破传统，开“创”新的自己。那些温室里的娇柔，绝不是属于创业者该有的标签。但因为这些对女性的固有印象，很多女性创业者们往往可能需要用更多的努力去证明自己的能力。</p><p>撕掉“女性标签”，遵循内“心”。找到自己喜欢的事情，才是保持热情的关键。没有人去定义女性该是什么模样，创业更无性别。每个人都可以成为李佳芮，在男性为主的行业里打下一片天。</p><p>遵循内“心”，你就会发现一个全“新”的自己，女性自身的性别优势也会在工作中愈加彰显：她们心思缜密，处理起事物更加细心；懂得换位思考，更为他人着想；性格坚韧，一旦确定了自己的“心”，便会勇往直前，永不放弃。</p><p>↓扫描海报二维码，申请首映现场席位↓</p><p><img src="/img/2019/03-woman-power/lijiarui.jpg" alt="lijiarui"></p><h2 id="挑战自身局限，克服内“心”恐惧"><a href="#挑战自身局限，克服内“心”恐惧" class="headerlink" title="挑战自身局限，克服内“心”恐惧"></a>挑战自身局限，克服内“心”恐惧</h2><p>让我们看看那些闪耀在社交舞台的女性创始人们：天然的亲和力为她们带来沟通方面的优势，她们拥有判断信息的能力、良好的情商去沟通和平衡生活。</p><p>当然，也有一些并不热衷于社交的人。她们因为特定的场合必须“变身”，让社交成为一种能力。我们也能看到像李佳苪一样技术出身、不善言辞的女性创业者，随着肩膀上的责任越来越多，交际圈的扩大，四面八方的挑战告诉她们必须面对和转变角色，成为主导。</p><p>既然选择了创业的路，就愿意为了它改变自己、突破自己。虽然每个人性格、经历的不同可能导致女性创业者个性上的差异，但每一位女性创业者的勇气都值得敬佩。</p><h2 id="经历不同“新”自己，不忘初心"><a href="#经历不同“新”自己，不忘初心" class="headerlink" title="经历不同“新”自己，不忘初心"></a>经历不同“新”自己，不忘初心</h2><p>与其和时间赛跑留住“青春”，不如和时间一起创造一个“新”自己。虽然创业的大部分时间可能都是“至暗时刻”， 但正因为如此，你才愈加接近真正的“价值”。</p><p>很多优秀的女性创业者往往拥有广泛的兴趣。当她们跳出自己的圈子，去接触不同的人和领域，也许会有新的灵感去创造“偶然”。女性总是可以通过一些细枝末节去嗅到商机，不断打开自己格局和事业。反观，这也是一个更加理性、旁观地看待自己的方式。当你做了世界的连接者，你将创造新的生活。</p><p>创业是一条长路，其中的煎熬痛苦无人知道。你也许面临过资金不足、经验不足等种种难题，但崩溃过后，贵在坚持。创业需要坚持，坚持需要信念，信念则来自你真正热爱的“初心”。</p><p><img src="/img/2019/03-woman-power/follow-your-heart.png" alt="follow-your-heart"></p><p>Plug and Play 中国很开心能看到越来越多的女性开始发现自己，克服自己内心的恐惧，迈出创业的第一步。</p><p>同时，我们相信，摆脱性别偏见，只有依靠女性力量的不断增加，女性创业者们才真正能够得到关注。这些力量可能正在路上，等待我们发现，可能也是正在看文章的你。</p><p>Plug and Play 中国也会给予这些女性力量支持，找到她、陪伴她、支持她。我们相信，未来的女性创业者们，不仅仅能改变自己，也可以改变世界，因为时间看得见。</p><p><img src="/img/2019/03-woman-power/foundher.png" alt="foundher"></p><p>FoundHER （找到她）是 Plug and Play 创新生态平台打造的专注于助力全球女性创业者的项目，旨在帮助女性创业者获得更多行业领域内的商业拓展及投融资机会，为创业女性赋能，提升女性创业创新能力，扶持更多女性创始人快速成长。</p><p>项目源于美国硅谷，自 2018 年成立以来，FoundHER 秉承 “找到她，投资她” 的理念举办了 6 场以“打破玻璃天花板”为主题的活动。活动汇聚 Plug and Play 企业伙伴中的女性高管、优秀女性创始人团队以及投资机构，弥合女性与男性在创业领域的差距，从而鼓励女性更多地参与创新创业行为——无论是投资，创业还是职场晋升。</p><p>我们希望通过提供宝贵的资源来赋予女性能力，并最终在硅谷的创业环境中打造更多的女性创业者。</p><p>现在，是时候去找下一个“她”了。</p><blockquote><p>原文链接： <a href="https://mp.weixin.qq.com/s/mdhGn2kfpUiOCLfzptef1w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/mdhGn2kfpUiOCLfzptef1w</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> PNP </tag>
            
            <tag> 句子互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于微信生态的 Intercom | 我为什么做句客宝</title>
      <link href="/thought/2019-03-01-juzibot-why-is-jukebao.html"/>
      <url>/thought/2019-03-01-juzibot-why-is-jukebao.html</url>
      
        <content type="html"><![CDATA[<p>我希望能像 <a href="https://www.intercom.com/" target="_blank" rel="noopener">Intercom</a> 那样，帮助企业高效管理用户，快速获客并提高转化。</p><p>2016 年，我做了<a href="/lijiarui-why-wuli-dream/">舞哩</a>，这是一个舞蹈视频教学平台，帮助热爱舞蹈的人快速找到一个渠道学习成品舞舞蹈。在原创了几百个视频，数千万的播放后，我建了几个舞蹈交流微信群，而随着公众号的粉丝破万后，用户的管理耗费了我大量的精力。</p><p>我的做法是在公众号上放一个舞哩助手微信号的二维码，让用户通过添加舞哩助手为好友，然后验证通过后邀请用户加入到微信群中，早期这些都是手工完成的。当我有一次出国玩，没有带小助手的手机，回国后看到上百条好友请求，我决定要把这些自动化。</p><p>那个时候我梳理了我的需求，只有以下3个：</p><ol><li>自动通过好友请求。</li><li>当我的粉丝和我微信聊天的时候，能通过关键词进行自动回复。毕竟问题80%都是一样的。</li><li>自动的把他们拉进群里。</li></ol><p>然后我遇见了<a href="https://github.com/chatie/wechaty" target="_blank" rel="noopener">wechaty</a>,只要几十行代码，就可以满足我的需求。最主要的是，上面机械化的流水操作，机器人做的比人工要好很多。</p><p>在我实现了这些基础的功能后，我还希望保存所有的聊天信息，团队里面的人可以和我一同管理这个账号，系统帮我找到最活跃的用户，清理潜水用户，通过用户的活跃度给群成员定级，并找到大区管理员，管理员可以在手机上有更高级的查询工作。。。</p><h3 id="帮助企业高效管理用户，快速获客并提高转化"><a href="#帮助企业高效管理用户，快速获客并提高转化" class="headerlink" title="帮助企业高效管理用户，快速获客并提高转化"></a>帮助企业高效管理用户，快速获客并提高转化</h3><p>从2013年开始，我一直基于微信生态为企业提供产品和技术服务，我知道，这是一个机会。</p><p>我认为企业最痛的地方是<strong>来自新客户的售前转化</strong>。当企业做了大量的内容营销及广告投放后，获取到了新的注册用户，转化率的高低直接决定了企业的增长。</p><p>现阶段，我还没有看到一个好用的基于微信生态的售前转化流程化管理工具。单纯的功能工具很多，但功能点无法解决问题，流程化的工具和方法论才是企业真正需要的。</p><p>以下是一个获客场景的解决方案：</p><h4 id="第一阶段，目标是初次认识，了解用户并辅助用户完成基本任务"><a href="#第一阶段，目标是初次认识，了解用户并辅助用户完成基本任务" class="headerlink" title="第一阶段，目标是初次认识，了解用户并辅助用户完成基本任务"></a>第一阶段，目标是初次认识，了解用户并辅助用户完成基本任务</h4><ol><li>用户在官网注册留下联系方式，机器人自动添加用户为好友。</li><li>机器人按照写好的脚本通过3-8轮对话收集用户信息。</li><li>发放一个优惠券，留住客户关系。</li><li>引导用户完成企业给用户的任务：邀请用户入群或进行二次传播。</li></ol><h4 id="第二阶段：主动式响应"><a href="#第二阶段：主动式响应" class="headerlink" title="第二阶段：主动式响应"></a>第二阶段：主动式响应</h4><ol><li>全面的推送，一个月1-2次，以信息发布为主</li><li>二次召回用户，针对初次添加好友、群内活跃、付费意愿等多个维度进行召回。</li></ol><p>这里也有一些细节需要考虑：</p><ul><li>不同的对象：<ul><li>定期召回：找到一段时间不联系的有意向老客户</li><li>近期（如3天）有过互动交流的客户，不再发送</li><li>客户退群后，不再发送信息</li></ul></li><li>发送的内容：<ul><li>用机器分析这个用户喜欢什么时间聊天，什么口吻对话</li><li>带着用户的昵称和不同的口吻，让用户觉得这不是在群发，而是企业在认真的对待一个老朋友</li></ul></li><li>发送的时间：<ul><li>天维度：根据用户互动频率决定哪天发送。</li><li>小时维度：根据用户说话时间决定什么时候发送，让用户在最闲的时候看到消息。举个例子，用户经常上午开会，如果选择下午发送信息，转化率会更高。</li></ul></li><li>群发的过程：<ul><li>发送状态监控</li><li>及时回复：用户回复群发消息时，企业需要及时回复，这个地方是需要机器人配合的。举个例子，如果群发了200个用户，即使是 10% 的回复率，一个人已经很难处理了，可以提供的相关工具如下：<ul><li>分流的客服系统</li><li>机器人的自动多轮对话脚本</li></ul></li></ul></li><li>发送结束：<ul><li>统计多少个好友把你删了，一方面不应该继续骚扰，另一方面反应了话术和频率可能存在问题</li><li>统计多少个好友只是简单的回复，针对性的安排机器人二次跟进</li><li>统计多少个好友有明确的付费意向</li></ul></li></ul><h4 id="第三阶段：随时沟通"><a href="#第三阶段：随时沟通" class="headerlink" title="第三阶段：随时沟通"></a>第三阶段：随时沟通</h4><ol><li>机器回答不了的问题，能够第一时间转接给人工处理。</li><li>机器回答的时候，明确告知用户这是机器，并在回复的时候有个尾巴 “来自我的机器人助理”。</li></ol><h4 id="第四阶段：分析与检索"><a href="#第四阶段：分析与检索" class="headerlink" title="第四阶段：分析与检索"></a>第四阶段：分析与检索</h4><ol><li>与用户的聊天内容可检索，并进行后续质检。</li><li>用户承担的对话进行分析，总结提高转化率的话术。</li><li>机器统计在群和私聊场景下的工作质量，辅助企业绩效考核。</li></ol><h3 id="企业微信带来的新机会"><a href="#企业微信带来的新机会" class="headerlink" title="企业微信带来的新机会"></a>企业微信带来的新机会</h3><p>我在 2019 年初，在美国期间写过一篇文章<a href="https://rui.juzi.bot/thought/2019-1-19-what-is-botorange.html">桔子互动是一家什么样的公司</a>,在第三部分详细的介绍了我对微信生态的理解，关于企业微信的部分，我摘抄在这里：</p><blockquote><p>张小龙在总结微信8年公开课上对企业微信的定位是：不是局限于企业内部的通讯，而是让每一个企业员工成为企业服务的窗口。人就是服务，而且是认证的服务。</p><p>现实生活中，我们更希望有个人来帮你做一些事情，而不是去打开一个APP或者小程序，因为人更有灵活性， 并且服务是更到位的，比如去网上订一个酒店，如果你要改变日期或者退订，通过APP是很麻烦的，这个时候你更希望联系人工客服，人的界面也是友好的; 如果一个4S店的员工用企业微信加了你，你可以认为这个人就是你的小程序，当你点进与他的对话界面，因为对方是企业微信的用户，你会看到他的对话界面下是4S店的服务菜单，你可以直接在这里使用服务，有点像公众号底下的菜单，你也可以直接和他说话，消息能够得到及时的回复。当你下次要找4S店的时候，你的第一选择是打开和这个人的对话，而不是去找4S店的小程序。这里其实给企业一个机会，企业可以让所有员工变成一个对外服务的窗口，带着你的小程序到处跑。企业微信让员工带着小程序直接提供服务，顾客的忠诚度很高。</p><p>在过去五年，微信个人号逐步在企业中承担了上面的服务，随着企业微信的开放，我们基于个人号hack 提供的工具，可以在企业微信上名正言顺的使用。因此企业微信这样的发展方向，给我们带来了巨大的机会。</p><p>具体机会体现在下面3点：</p><ul><li><p>小程序+企业微信，让 GUI + CUI 混合的多种交互方式在微信中成为可能，这是一个更加高效的获取服务的形式。</p></li><li><p>智能机器人和人协作，帮助企业员工及时回复</p></li><li><p>导出企业和用户的私聊及群聊数据，并基于对话记录分析用户。</p></li></ul></blockquote><p>在我看来，<strong>随着企业微信生态的逐渐开放，私域流量的下一个黄金十年，在企业微信。</strong></p><p><img src="/img/2019/03-juzibot-why-is-jukebao/wechat-work.jpg" alt="WechatWork"></p><p>因此有今天的句客宝：</p><p><img src="/img/2019/03-juzibot-why-is-jukebao/jukebao.png" alt="Jukebao"></p><h3 id="对未来智能客服中机器的展望"><a href="#对未来智能客服中机器的展望" class="headerlink" title="对未来智能客服中机器的展望"></a>对未来智能客服中机器的展望</h3><h4 id="产品层面"><a href="#产品层面" class="headerlink" title="产品层面"></a>产品层面</h4><ul><li>真正的智能客服，要有基于数据的推理能力，基于用户的行为分析，知道什么时候该说什么话，而不是单纯的说话</li><li>产品需要主动式响应，而非被动式响应。做法是AI引发话题，人去跟进，而非人去主动引发，AI响应，这是人机协作最好的方式。</li><li>如果一个商业行为（企业服务）没有分析和归纳，就不会有优化，更不会有增长。</li><li>给企业一个分析报表没有用，核心是如何指导工作方向，这里的工作方向一定是具体化、细粒度的才有意义。</li></ul><h4 id="人机协作"><a href="#人机协作" class="headerlink" title="人机协作"></a>人机协作</h4><ul><li>机器擅长效率、记录、并发、信息共享</li><li>人擅长理解、思考、归纳、分析、总结</li><li>如果堆人就能解决的问题，这算是一个有解的问题，企业为这个买单的意愿不一定高，因为人没有学习成本。</li><li>如果堆人解决不了的问题，机器还能解决的问题，企业买单意愿非常强，比如机器的记录，进而帮助人辅助决策</li></ul><p>最后，我想说，做产品应该持续注意2件事：</p><ol><li>控制自己的贪婪是一件很重要的事情，只有控制住贪婪，才能剔除掉不属于你的客户，而不会被这些客户牵着鼻子开发了很多本不应该有的功能。</li><li>不忘初心，方得始终。有的时候走了太远，你会忘记为什么而出发。</li></ol><p>本文已做删减，更多相关内容详见：</p><ul><li><a href="https://rui.juzi.bot/thought/2019-1-19-what-is-botorange.html">桔子互动是一家什么样的公司</a></li><li><a href="https://rui.juzi.bot/chatbot/2016-11-20-wechaty-wuli-usecase.html">一个舞娘如何用6行代码写出微信聊天机器人</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> Intercom </tag>
            
            <tag> 句客宝 </tag>
            
            <tag> 微信生态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在2018年的最后一天</title>
      <link href="/thought/2019-02-02-the-last-day-of-2018.html"/>
      <url>/thought/2019-02-02-the-last-day-of-2018.html</url>
      
        <content type="html"><![CDATA[<p>2018年的最后一天，我来了美国，倒时差，不熟悉环境，加上YC的压力，拖到现在终于启动了这篇《写在2018年的最后一天》。明天应该就是国内的春节了，总应该仪式感一点的在春节之前完成这篇2018年的最后一天。     </p><p>新的一年，唯有对前一年的回顾总结，才能有新的一年的展望，即便晚了，总比不写好。          </p><p>2018年的手账里写满了日程，2018年微博写满了心情，2018年的私密日记写满了崩溃和绝望的时刻，这一年又像十年一样漫长，这大概就是“生命的厚重感”。                  </p><p>今年我的关键词，就叫做“厚重”吧。    </p><p>除了日程和经历厚重外，我更愿意相信，今年我的思考更深入也更理性了，我一直在努力克制基因里面的急躁和情绪化，虽然我知道这些距离一个独角兽企业的创始人来说还远远不够。但庆幸的是，和自己相比还是有了进步。我学会了回顾过去和与自己对话：       </p><ul><li>回顾过去：我非常清楚的记得这一年在五、六月份异常痛苦。至今我清楚的记得那两个月我为什么痛苦，但是现在的我竟然感受不到那种的痛苦，这也是一个奇怪的事情了。那段日子我唯一开心的事，是和过去的自己比较，就像一个走了几千里路的人面对前方的万里长征绝望的时候，回头看自己的脚印，一步一步的走到现在，有成长，有坚定，会偷偷给自己竖起一个大拇指然后继续前行。</li><li>和自己对话：每当我懈怠的时候我会问我自己，如果未来的你看到现在的你，她希望你该怎么做呢？你希望自己成为一个什么样的人？或者我在准备pitch 其他人时，我会列出一长串的问题，然后自己一个一个的回答。</li></ul><p><img src="/img/2019/the-last-day-of-2018.jpeg" alt="效率手册交接仪式"></p><blockquote><p>这是趁早效率手册的交集仪式，从2018年过渡到了2019年</p></blockquote><p>这是今年发生的一系列里程碑事件：<br>1月，搭建核心团队，和4个意向的合伙人确定意向，我的日历上还有一个大大的星—-准备天使轮。<br>2月，列了长长的投资人列表 &amp; 开发智能对话机器人。<br>3月，马不停蹄的见投资人，当投资人问我团队成员时，我卡主了。<br>4月，春秋的pitch &amp; 土耳其旅行。<br>5月，申请YC并收到了YC的Offer， 确定了2个合伙人all in 参加。<br>6月，wechaty-puppet-padchat 封装完成。<br>7月，某上市公司发了TS，DD，然后国内所有A股出问题，上市公司放缓，一个合伙人离开。<br>8月，给百度做完《从0到1搭建聊天机器人》系列课程。<br>9月，签下了客户美团点评的全国3000个外卖群运营工具。<br>10月，关键词，微软。<br>11月，chatie 文档。<br>12月，wechaty-puppet-padpro 上线。</p><p>有一些小的思考和明年的注意事项:</p><h2 id="关于努力"><a href="#关于努力" class="headerlink" title="关于努力"></a>关于努力</h2><p>我终于发现自己原来一直是一个挺努力的人。</p><p>我并不喜欢自己的这个发现。</p><p>我一直特别讨厌“努力”这个词，我害怕每次加班的时候，PNP的人走过来和我说，哎呀，真辛苦，又加班了啊。我每次都说：“啊，就过来待会”。我想起小的时候班级里面总有一些非常努力的同学，无论怎么啃书本，都无法考一个理想的成绩，当我发现自己正在一点点变成他们的时候，这让我非常恐惧。</p><p>今年和一些人合作之后我发现，我不仅讨厌给自己戴上“努力”的帽子，我更讨厌身边的人跟我说，“我已经很努力了，我blabla。。。”    </p><p>其实，我不是不喜欢这个词，我是尊重这个词。  </p><p>尊重努力最好的做法不是每天和老板汇报说自己做的多么好，付出了多少，而是用结果说话。努力的目的不是为了感动自己，而是用结果回报。太多把“努力”放在嘴边的人，都太愿意放大自己而忽略别人。而这种人是最不适合合作的，今年我会非常警惕这样的人，他们很可能是团队的毒瘤。</p><p>你的时间花在哪里，每个人都看得见。<br>你的时间花在哪里，会有结果展示出来的。<br>你的时间花在哪里，所有人都看得见。<br>时间看的见。</p><p>我喜欢尊重时间的人。相信时间的力量，相信微小积累和持续改变。</p><p>很多人忽视了自己十年能做的事情，却过于放大自己一年能做的事情。</p><h2 id="关于沟通"><a href="#关于沟通" class="headerlink" title="关于沟通"></a>关于沟通</h2><p>前两天一个朋友和我说，团队里90%的沟通都是无效沟通。我醍醐灌顶。</p><p>沟通太难了：你需要听得懂对方在说什么，你还要能说清楚自己想说什么。大部分人的沟通会陷入到自我陶醉的状态中，完全忘记了希望讨论的重点。这件事将会是我在今年持续保持刻意练习的事情。          </p><h2 id="关于产品经理"><a href="#关于产品经理" class="headerlink" title="关于产品经理"></a>关于产品经理</h2><p>沉迷写代码2年后的今天，我重新回归了6年前的角色：产品经理。        </p><p>我从没做过TO C的产品，所以我所有的内容只和To B 相关。       </p><p>一个初级的产品经理特别喜欢在竞品里面找灵感，看到竞品有什么，只会跟风模仿，在产品里面加了各种功能，展示自己的努力。我不得不承认，我是从这样的产品经理过来的。        </p><p>然而产品经理要去寻找答案和灵感的地方只有一个 ———— 客户。</p><p>当你毫无背景信息，当你不知道该做什么的时候，最好的办法是找100个客户，聊聊他们遇到的问题，聊聊他们现在的解决方案，聊聊他们理想中的解决方案。再聊聊他的公司，团队有多少人，收入多少，支出多少，在这件困扰他的事情上，支出多少，他觉得自己的团队表现怎么样，甚至他都不知道自己团队表现怎么样，那他是否认为自己需要一个评价标准。。。 如果有了这样一个产品，他愿意付费多少。     </p><p>一个有责任感的产品人是焦虑的。当你聊了几十个客户的某个瞬间，你忽然发现的焦虑感会减少很多。抽取到他们的共性，思考背后的原因是一个很有意思的过程。归纳总结出他们想要的东西，推到他们面前，通过它的付费情况，去验证自己思考的对错。    </p><p>是的，无论你聊的怎么样，思考的怎么样，你都有可能是错的。你要通过它的付费能力检验你自己，通过数据检验你自己。    </p><p>产品经理要给团队一个交代，所有的开发都是你的资源，能做出一个拯救世界的东西固然好，但是在有限的资源下做出最优的解决办法，可能是你唯一的选择。    </p><p>我过去讨厌那些只想到1的产品经理；<br>现在依然是；<br>但是我更讨厌想到100就给出100的产品经理；     </p><p>一个好的产品不是让开发无休止的加班加功能，而是想到100，画出100，自己再使劲切割到1。排好优先级配合开发完成。</p><p>产品不能乱用你的开发，他们是你最宝贵的子弹，要打在在最致命的地方。因为开发数量不是产品最致命的武器，思考才是。今年我要重新学会做一个合格的产品经理。</p><h2 id="关于沉默"><a href="#关于沉默" class="headerlink" title="关于沉默"></a>关于沉默</h2><p>过去这些年，我一直非常害怕冷场，不管是谈判桌上还是朋友之间的聚会。当对方不说话的时候，我就会聒噪的找一堆话题，或者就会显得手足无措。</p><p>2018年我开始可以练习沉默并在一些小的场景取得了不错的效果，今年我会继续。</p><h2 id="关于韧性"><a href="#关于韧性" class="headerlink" title="关于韧性"></a>关于韧性</h2><p>创业这几年认识了很多很不错的朋友，在我做了很多错事后，他们没有离开我还会一直鼓励我，我尝试问过一些人他们最欣赏我的地方是什么。</p><p>韧性。      </p><p>人在意气风发时，精神抖擞地做一件事其实不难。难得是，在冗长的看不到头的枯燥、迷茫、压力、疲惫里，按照同样的节奏依然做这件事。   </p><p>这是我最大的性格优势了，今年还会遇到很多创业的至暗时刻，我会用这个优势，好好面对未来的至暗时刻。</p><h2 id="打卡做计划"><a href="#打卡做计划" class="headerlink" title="打卡做计划"></a>打卡做计划</h2><p><strong>在<a href="https://rui.juzi.bot/thought/2017-12-31-the-last-day-of-2017.html">《写在2017年的最后一天》</a>里，我是这样憧憬2018年的：</strong></p><blockquote><p>1.一定要去参加马甲线大赛，已经推迟了2年的计划。。。</p></blockquote><p>没完成。至今也没出马甲线，今年我并不觉得自己能完成了。。。</p><blockquote><p>2.开始写博客，每个月至少写一篇专栏文章。越发觉得文字是最好的思想沉淀方式。私密日志不算。</p></blockquote><p>完成，这一年做了《从0到1搭建聊天机器人》的系列课程大概20篇，平均下来，算每个月一篇了。2019年，我要把这些整理出书。</p><blockquote><p>3.每个月至少采访一个人，做出行业视频</p></blockquote><p>没完成，最初想做这件事，纯粹是为了 content marketing. 在YC 这段时间我学会了一个词：Inbound Marketing，当初也是抱着这个目的做的。但是采访这件事，真的需要构思太多，需要太多配合了。2019年，我会继续持续写文章，做最开始的用户导流，但是这么重粒度的采访估计还是得放弃了。</p><blockquote><p>4.公司相继完成天使轮和A轮。</p></blockquote><p>完成，跌跌撞撞完成了个小天使，希望明年可以完成A轮。</p><blockquote><p>5.搭建一个10个人的稳定团队</p></blockquote><p>未完成，管理是一个挺难的东西，至今我还没学会。</p><blockquote><p>6.至少搞定5家航空公司，接入我的订票服务</p></blockquote><p>未完成，因为业务转型。现在这个时间点看过去，当年自己胃口真的不小，当你不知道前途凶险时，总是会盲目乐观，这种行为在团队里还是蛮有风险的，2019年的我需要时刻警觉。</p><blockquote><p>7.至少拿出10万做一笔小的投资，而不是稳定的基金</p></blockquote><p>未完成，用6万抄了区块链，腰斩到了现在，一直不敢去看银行余额。现在的我觉得，30岁之前，投资自己才是最有价值的投资。钱的投资，打算放在30岁后了。另外，创业其实已经是一个赌注了，我不能再去下注其他事，因为我并不具备这么强的抗风险能力。</p><blockquote><p>8.去厦门</p></blockquote><p>未完成，但是有意思的是我被一家厦门公司邀请做技术顾问，他们请我去玩过几次，因为事情都错过了。这让我想去年年初<a href="https://rui.juzi.bot/thought/2017-12-31-the-last-day-of-2017.html">《写在2017年的最后一天》</a>里面的开篇 Tiffany的故事。</p><blockquote><p>9.去泰国</p></blockquote><p>未完成，后来去了土耳其，也算是某种意义的一个完成吧。</p><blockquote><p>10.谈一场超过6个月的恋爱</p></blockquote><p>未完成，今年是这几年来对待感情最认真的一年，认真的结果反而不太好，不知道是年纪大了还是怎样，身边每天都是各种人在催我。这件事可能是最不能计划的了，索性也就随缘了。</p><hr><p><strong>我期待自己的2019：</strong></p><ol><li>公司活着</li><li>定期复盘总结：每周给团队发邮件，每个月给所有的投资人发邮件</li><li>写博客，每两个月至少写一篇文章</li><li>完成A轮融资</li><li>客户数量超过200个</li><li>写一本讲聊天机器人的书并出版</li><li>坚持健身，年底完成100次健身打卡</li></ol><hr><h2 id="最后，微博这一年"><a href="#最后，微博这一年" class="headerlink" title="最后，微博这一年"></a>最后，微博这一年</h2><h4 id="一月"><a href="#一月" class="headerlink" title="一月"></a>一月</h4><ul><li>“一个公司活9年，在商业上就pk 掉了99.5%的公司。活着就是成功，活着就有希望。”</li><li>忽然发现，自己并不是一个合格的创业者。</li><li>好多年没有刷夜唱歌了，并不想刷夜，只不过聊着聊着就到了凌晨5点。。。  ​​​​</li><li>又忘记拍照了，今天是一个超级值得纪念的一天。2018我来了[太开心] </li><li>难得9点到家，团队似乎终于在往正确的方向搭建了，好久没有这种不那么急躁的安静心态。时间看得见，写@王潇_潇洒姐 的效率手册，每一笔记录的都是真实的我。</li><li>真不想写ppt 回家呆了1个小时都不想提笔</li><li>终于盼来了休息日，今天不工作的我是个小女孩[太开心][太开心][太开心] 等人的间用卷发棒胡乱倒腾的头发可还行</li><li>蓝天，白云，不用P图随手一拍就这么美，北京还有这种地方，没想到～ 还以出乎自己意料的速度学会了滑雪，创业以来极少有的开心和自由，把能量都充满了，又可以回来加班了[馋嘴][馋嘴][馋嘴] </li><li>加班的时候照镜子发现自己眼角的皱纹，吓得我赶快打车回家了。。。</li><li>那些听不见音乐的人认为那些跳舞的人都疯了</li><li>思考总结了下，时间管理最有办法的方式不是把日历塞满，而是拆分到具体的事情，每天只做一两件事。</li><li>女性科技节workshop 上分享聊天机器人 &amp;&amp; 科技节赞助了wechaty contributor 在2018年的第一次聚会 &amp;&amp; 科技节的after party &amp;&amp; 主办方为讲师定制的磁悬浮3D月球台风[鼓掌]</li><li>半路逃了百度AI 加速器的课去根儿家新房暖房～ </li><li>男性的立场，女性的情怀，天性的笔触，复旦经济学才女的《肆无忌惮》。虽然对我来说，有些文章还是干涩难懂，但是通篇还是读到了不受羁绊的真实和人性。</li><li>心累，一天比一天累。。。。 </li><li>总有一天，总有一件事，让你愿意去做所有不喜欢的事，那就是你找到了你的理想。</li><li>研究了将近2个工作日在mac 下给ios越狱，看了最少100篇英文文档介绍，然后打开Windows 发现一键搞定，第一次觉得一些mac的傻X和纯技术的阳春白雪。。。 有些野路子很讨巧，接受这个教育，接地气，找痛点，多思考 </li><li>额，bp改了这么多版本了[失望] </li><li>试着学会尊重专业人士给的建议[馋嘴]</li><li>从昨天到今天一直在思考最重要的事，找人最重要，找钱最重要，找客户最重要，产品做出来最重要……商业模式最重要……都重要……神烦 </li><li>慢慢你会发现，好多东西真的不是针对你，而是事本如此，你却不知</li></ul><h4 id="二月"><a href="#二月" class="headerlink" title="二月"></a>二月</h4><ul><li>纪念一个早起日</li><li>二哥生日趴，还发现了一个超级好喝的白啤~ 然后又一次把要带的酒忘记了…… </li><li>妈的，以后老娘再放弃任何重大事情之前一定要写一篇长博客记录一下，这样才不会半年以后忽然后悔，这滋味太难受了，忘了自己当初为啥难受了，竟然不停反问自己为什么不再坚持一下…… </li><li>每个人都好告诉我follow your heart, 但是在摇摆和重大决定之前，太难了</li><li>首先，让对方相信这个市场，然后让对方相信你能做。如果第一个都不信，后面就没得聊了。 </li><li>快到家了，闭关半个月，认认真真的思考，希望自己再回北京会有蜕变。</li><li>“你的职责是平整土地，而非焦虑时光。你做三四月的事，在八九月自有答案。” ​​​ </li><li>没有持续利润的企业是不道德的，企业有社会责任。我们看过太多靠着不太体面的盈利模式挣的钱孵化着很多有情怀的项目，可是我们一直跨不过第一道坎。 </li><li>李诞说，“如果我写这本小说赚了钱，那是运气，我要用别的事来谋生，写小说一定要让自己开心”还是那句老话，不要让爱好变为谋生职业，用奋斗挣下的钱去供养爱好这个“小娇妻”，才是智者。 </li><li>3年来，每年回家我思考最多的问题，至今没有结果。 </li><li>✅ 春节第一个任务打勾，整理了所有的照片 </li><li>✅ 春节第二个计划打勾&lt;终于把博客完善了，把所有我做过的成体系的产品，所有我在外面做过的分享都，标签云，个人介绍，可以公开的写作内容都穿上去了，还有很多小的瑕疵，先这样吧，也许明年春节再大批量上传一批，今年就不动了…… </li><li>今天状态非常好，翻出6个月前的代码，有好多莫名其妙的bug,一个一个都找出问题解决了。虽然还是没能把所有的checklist☑️，但是忽然明白，自己之前真的是太着急了，东西不是一天做出来的，我把自己逼的再也不想看这两套代码，其实不慌不忙的也可以做，生活和工作要懂得留白。</li><li>人生第一次抓到这么多娃娃，长见识[太开心][太开心] 赞[鼓掌] </li><li>以潇洒姐为榜样，争取在2025年，我也有个十周年[互粉][吃瓜] 3年了，据说已经超过了80%的企业了 </li><li>✅ 终于把群管理机器人发布了一个版本，完成了春节的计划，明天开始准备订票机器人的东西了，又结束了无忧无虑coding的日子了…… </li><li>说好的今天好好写订票机器人呢…… 结果又改了一堆群管理工具[汗]    打死不改第二版，不过手欠终于把用户系统完善了[馋嘴] </li><li>庆祝自己沮丧哭泣了2个小时，元气满满的打算接下来被拒绝100次[挖鼻][挖鼻][挖鼻] 等我被拒绝100次的时候，我就不创业了[笑cry][笑cry]现在才5次，不多[笑cry] </li></ul><h4 id="三月"><a href="#三月" class="headerlink" title="三月"></a>三月</h4><ul><li>纪念一个超级长的聊天对话，从4点半一直到现在…… 真正的商业要做到，标准化，产品好，价格亲民。根据现在情况总结，找到一个点，然后复制。创业的路都是走的七七八八，谁能想到一个做社交app的最后做成了一家流水近千万的卖胶带的公司呢？ 梦想要大，但是真的不一定现在吧，更何况我好想也没那么大梦想……</li><li>元宵节的烟花🎆和缆车下的中级雪道 </li><li>“谁见证和参与过你的梦想？ ​​​​</li><li>今天忽然又想起这个问题，觉得这个结论有点矫情。为什么不能把爱好和工作放在一起呢，那生活不是很幸福</li><li>终于做了一个脚本批量更新12个服务器的代码和重启了，被node环境变量和软连接折腾了好久……再也不用到12个服务器上挨个更新了，开心！</li><li>刷一本新书，开始从别人的眼光里看世界…… 《同理心》</li><li>再一次暗爽，果然机器是最听话的，一开心，今天启动了18个机器人台服务器，然后一句话更新18台服务器，我还没有爽过来呢，继续自嗨哈哈哈 </li><li>今日份的水果沙拉，一会去买酸奶~ </li><li>每次来趟东边都像是在出差…… 这给我堵的…… 这给我惯的…… </li><li>“如果一人想想做任何一件事，缺乏时间是阻止不了他的。”——- 赞！还想说，缺乏任何事情都阻止不了的。今天一个朋友说，我之前创业也算是成功的，因为这次创业一年成功的把之前赚到的钱都花的差不多了。。。我觉得，因为创业者的内心是有关的，就凭这点，不管自己最近多没脑子，也是值得尊敬的[馋嘴]</li><li>【抄台词】“想象你是海，海不会嫌弃自己的波浪。” ​​​​ —&gt;  拉倒吧，我要是海，我肯定嫌弃波浪，厌恶风，讨厌所有的鱼，因潮汐而膈应月球。  —-&gt; 想象你是海，不要想象海是你。</li><li>我的新茶具和TWG 终于到了，撤掉了所有的酒，开启喝茶模式～ </li><li>莫名其妙被发了币，好开心！ </li><li>太高兴了，我觉得要熬出苗头了，先mark一下如此充实的一天[爱你] </li><li>时间滚滚向前，幸运无非是，在命运点名时，起身大声回答一声“到”!</li><li>今天的奥森太美了。。。。 只记得了拍照，忘记了跑步。。。。春天终于来了</li><li>忽然明白了credit 的行成，当你是一个天天说谎话的人，天然就会对其他人说的话产生质疑，当你是一个很真实的人，面对一个对你说过一次谎话的人就很难相信了。愿我可以做一个真实的人 </li><li>Stay hungry, stay foolish. 我一直太骄傲了，直到今天才勇敢直面 </li><li>你今天不行，不代表你没有进步，只是因为你昨天太差。。。mark一下[哼]</li><li>最近总是因为一些蠢人生气[哼][哼][哼][哼] 虽然我也不聪明[挖鼻]</li><li>人逢喜事精神爽，滴滴司机看见我就直接说我真喜庆哈哈哈[馋嘴]</li><li>真是啥活都体验了…… 昨天拿回来的几个小样颜色都不好，今天亲自来打印店一点点调……  先不说设计改了多少版本，光是打印就改了这么多版本…… 物料这活真不是人干的，明天大早上9点还要跑回东边见人，忽然觉得有点累…… </li><li>什么毛病，越来越感性了，每聊黄一个都会流两滴眼泪难过一下，这个习惯可不好。。。。不是应该越来越没脸没皮么[哼] </li><li>经历过死亡的人更容易活的通透，知道自己身体障碍的人更知道追求自己想要的生活。 而我们普通人往往忽略了那些最平凡的东西，被各种东西束缚变的越来越无趣 </li><li>改bp又一次看一个朋友的之前的bp，写的真好，啥时候我自己写的东西也能过一阵看还感慨说，写的真好呢 </li><li>提了一个issue 被老外diss了。。。 “Maybe you connection blocked temporarily by firewall of your country.” </li><li>今天出门竟然忘了画眼妆。。。。一醒来就忙着背稿子。。。 果然约重要的时候容易焦虑。。。等下得找个地方偷偷找个睫毛膏去。。。。 </li><li>百度一期加速器结业 </li><li>好应景的一家店～ 冲着这个名字喝了一瓶啤酒～ 接下来慢慢搞，休息休息 </li><li>一块做精了，各个维度的辐射简直太可怕了</li><li>嘻嘻嘻，今天心血来潮。。。。[馋嘴][馋嘴][馋嘴][馋嘴][馋嘴]</li><li>今天早上好不容易发现了若隐若现的马甲线.结果一拍就没了…… </li><li>有一种加速前进的感觉，希望以后能慢慢早点回家…… 嘻嘻，还是想把这个视频放这里留个纪念…… 昨天从大北边跑到大东边…… </li><li>我好像就是天生痛苦也特别强烈，快乐也特别强烈的人。。。 总是不好四平八稳的生活。。。 </li><li>本来是来逛街买衣服买鞋和，结果吃完饭看了一个小米体验店，完全被震惊了。。。。 小米太牛了。。。。 买了一个小米电动牙刷和小米行李箱[笑cry] </li></ul><h4 id="四月"><a href="#四月" class="headerlink" title="四月"></a>四月</h4><ul><li>“不知在多少个四月，我重整旗鼓，我沐浴更衣，我下决心，我谈恋爱，我翻脸分手，我赌上明天，我出走，我创业。那即将开始新鲜刺激生活的想象，让我激动战栗。 ​​​”</li><li>开心麻花新剧，“清明节快乐”，真是笑的肚子疼～ </li><li>“很有意思的一本书《有限和无线游戏》：有限游戏的目的是终结这个游戏，要赢;无限游戏的目的是让游戏得以继续，不需要结束。有限的游戏是在规则内玩的，无限的游戏玩的就是规则，探索改变边界本身。有限游戏比如打牌、比如投资；无限游戏比如创业、比如人生！ ​​​​” ————&gt; 嗯，一个以赢为目的，一个以不结束为目的。忽然想起之前有人说，某个游戏舍不得打通关。。。</li><li>开心麻花还有这样有意思的东西～ 越来越爱即兴话剧和脱口秀了。。。</li><li>八年以后，又开始漫长的治牙之路。。。。。。</li><li>沉住气 </li><li>夜晚的清华真美，走走心情好很多[馋嘴] 不能浪费这么好的条件 </li><li>“真正的狼性，不在于吼叫和撕咬，而在于围猎前的隐忍与蹲守。”</li><li>决定把每次吃甜食的时候都记下来，就可以追踪到自己的心情变化了 </li><li>这是我见过最好的Stay Foolish 的解释，没有之一。<a href="https://mp.weixin.qq.com/s/qNfEy-eRM_yPzzr87iyY1Q" target="_blank" rel="noopener">如何像聪明人一样思考？</a></li><li>PPT 要做吐了，脑瓜仁疼[哼][哼][哼][哼]</li><li>涨知识了，加班必备咖啡因，4倍咖啡强度，看着跟白粉一样[笑cry]</li><li>尽人事，听天命。。。 经过预沟通，只能说我们尽力做吧。。。。。</li><li>绝望的感觉大概就是刚才那样吧，在竞标前一晚在酒店默默流泪，然后再感慨激昂的继续干活，一直不放弃可能是公司一直半死不活的原因吧。。。</li><li>只睡了一个小时。。。终于尽力了。。。 每次来这都是通宵的节奏。。。 2017年努力了一阵年，最大的收获就是沮丧了。。。 原来我在竞品中是这么弱小 </li><li>想开启个度假模式好难呀</li><li>准备进入度假模式，尽量少想其他事 </li><li>“人在意气风发时，精神抖擞地做一件事，其实不难。难的是，在冗长得看不到头的枯燥、迷茫、压力、疲惫里，按同样的节奏依然在做这件事。共勉。 ​​​​” —-&gt;今天在飞机上读到了一些事情，忽然很受挫折，忽然很想放弃，有人说，当你自己能够认清自己，认清行业，想明白一些很重要的事情之后，还能选择坚持，应该不会太差</li><li>Mark 一下，google 翻译带我找到了换乘的地方～</li><li>托普卡匹皇宫 &amp; 博斯布鲁斯海峡  [酷]</li><li>所有的地方，最喜欢贝勒贝伊宫，安静的不像样子，还能看到海峡，一定是因为在亚洲区太远攻略里才会很少提 </li><li>转机闲的～ 就想发照片～</li><li>注意完回来补债系列。。。落地到现在就没闲着，最后还剩下一个报价似乎终于可以休息了。。。</li><li>接受15岁中学生的拜访，才发觉自己好像不年轻了。。。。</li><li>一定要有计划，一定要有提前量，一定要做好准备，不然，就会过成这半个月的混乱生活。。。</li></ul><h4 id="五月"><a href="#五月" class="headerlink" title="五月"></a>五月</h4><ul><li>天生劳碌命…… 今天做了一天动车，回来头疼到要死，叫了外卖也吃不下，后来索性叫了杯咖啡，躺在床上开始准备合同，整理邮件，再梳理下好久没有整理的工作笔记，现在到这个点了，头也不疼了，肚子也开始饿了…… 就这样结束了所有假期，开启工作模式[酷]</li><li>最近接二连三收到合作邀约，坚持积累，相信时间看得见</li><li>每次一读书就会很痛苦的思考很多事，难得清净，从早上6点读到现在 </li><li>有的时候想想，人有欲望真他妈不是一件好事 </li><li>去年一年，从产品经理转成了程序员，今年一年，思考从程序员转到运营上，开始准备踏踏实实写文案了。</li><li>今年的连续剧额度已用光，在好几个朋友跟我说我特别像《北京女子图鉴》里的陈可以后，我终于开始刷剧。。。 </li><li>收到21天小本本，和趁早薄本一起用，争取完成第一个21天计划[加油] 如果能在现在这种状态下能做到抽出时间连续运动21天，那一定是小本本的功劳，和我一毛钱关系都没有[傻眼]</li><li>“我可以崩溃，但是崩溃以后我还能把事情做完”</li><li>本来觉得2017年挺不容易的了，会迎来一个不错的2018，结果2018过了一半以后，发现接下来的日子只能更难熬。。。。 记一个忽然生病的负能量心情。。。。</li><li>“我们俩的新加坡之旅。你就是那件不需要判断，不会错、不嫌多、不嫌晚的事，当然读书和锻炼也算，但得排在你后面很远、很远的部分。” —–&gt; 😍</li><li>时机很重要</li><li>再一次陷入混乱之中</li><li>创业快500天了，有好多好多负面情绪，不知道去哪里发泄 </li><li>去年的5月连续通宵，今年继续[挖鼻][挖鼻] </li><li>据说这是创业者的真实写照？左手《悲惨的诞生》，右手《抑郁这样防治》</li></ul><h4 id="六月"><a href="#六月" class="headerlink" title="六月"></a>六月</h4><ul><li>“昨天和杠子喝酒，开始我们都在聊生活，聊赚钱。杠子说，我们要不要聊聊宇宙和文明，浪漫和爱。这句话是不是傻里傻气的，但是他嘴里说出来就很不一样。杠子说有综艺节目找他，他不想去。因为他不想把自己摊开给所有人看，他只想和喜欢自己，自己也喜欢的人，躲在微博小小的区域一起玩泥巴。他说为什么现在大家喝了酒都会讨论赚钱，我们为什么不讨论浪漫，不讨论爱。这些才是让人最接近神，最接近人，最接近自己的东西。杠子说人没资格讨论保护地球。地球存在几十亿年了，人类只存在了几千年。肯定会有无数比我们更高级的文明产生和湮灭，该消亡的时候地球会让人类消亡。我们想保护自己就直接说保护自己，别说什么保护地球。地球过得很好，我们就是给自己下个台阶。真高兴在这个年代还有和你聊宇宙和浪漫的朋友。有人喝了酒眼睛亮闪闪的给你讲浪漫。讲爱。傻不傻。超级傻。爱不爱。我爱到崩溃”————&gt; “他说为什么现在大家喝了酒都会讨论赚钱，我们为什么不讨论浪漫，不讨论爱。这些才是让人最接近神，最接近人，最接近自己的东西。”</li><li>重构代码真是一件。。。。这两天已经重构了好几次了。。。</li><li>忽然有点想像疯子一样健身了。。。</li><li>小菊咖啡 小桔机器人[馋嘴] </li><li>偶尔也会少女心爆棚，收到刻字口红很开心～ 最近确实开始陆陆续续收到喜讯[爱你]</li></ul><h4 id="七月"><a href="#七月" class="headerlink" title="七月"></a>七月</h4><ul><li>我今天真的不想加班写ppt[失望][失望][失望]</li><li>“我看到一个低级别的自己在游戏里思索，装备简陋，缺乏经验，供血不足，前途模糊；而此刻的我像一个半神或先知向下俯瞰，知道她终会蹒跚走出，但依旧爱莫能助。如果我可以向她传递信息，只能告诉她：  你是你的机会，你也是你的瓶颈，  你就是你的问题，你也是你的解决之道。  你要知道，你必须成长，和游戏里一样，因为低阶装备只会伤到那些级别非常低的小怪。  你也要知道，你不是活在这个当下，也不是活在这三五年，而是活在今生今世。  如今，真人养成型通关游戏解锁了旧的关卡，又迎来了新的。对于在未来的那个我来说，此刻的我依然还是一个低级别的玩家。写作让我可以层层回看，渐渐成长，慢慢成为了自己人生的旁观者。  但愿我们在游戏通关之际都可以说:“我年轻过，落魄过，幸福过，荣耀过，我对生活一往情深。”多年后的那个你将成为她，来俯瞰和评价你的现在，时间会带给我们所有的玄幻和淋漓，此刻的我们在游戏中，其实你不是你，她不是她，我也不是我。  ”</li></ul><h4 id="八月"><a href="#八月" class="headerlink" title="八月"></a>八月</h4><ul><li>学着充满希望大步向前走 ps：忽然发现快手的logo不见了</li><li>率真。爱这个性格[馋嘴]</li><li>忽然有一个可怕的想法，我是不是太聪明了，这并不是什么好事。。。</li><li>周六周日病了两天，早上见了个合作伙伴就头晕的不行赶快回家休息，然后晚上强打着精神去录视频，回家照了镜子忽然发现气色好了很多，于是反思了下自己这周精神状态不好的原因，是最近懒了不化妆了[二哈] 我决定下周开始见不见客户都化妆，腰一定就不疼了，身体也就好起来了哈哈哈哈哈哈哈哈哈～ </li><li>“人们嘲笑的其实不是你的梦想，而是你的实力。” ​​​​</li><li>听说可以许愿，我也有个小愿望。</li><li>明明觉得自己熬不住了，竟然又走了这么远 </li><li>连着24小时的奔波[失望] 早上4点半起床，现在凌晨4点半到家。。。</li><li>不知道最近怎么了，总是梦到奇怪的东西[哼] 连着两天了</li><li>发现周末最好的休息方法是安安静静的写文章～ 发现随着经历的越来越多，写的文章越来越细腻深刻[馋嘴]</li></ul><h4 id="九月"><a href="#九月" class="headerlink" title="九月"></a>九月</h4><ul><li>快10年了～ 欢迎回来[爱你]</li><li>这两天被VIE折磨的心力憔悴，最讨厌和律师财务打交道[失望] </li><li>心情真的很差，发现写代码这个时候是最能让人平静下来的。。。 所以最近默默的掌握了好多前端技巧。。。发现好像前端确实挺好学，也挺好玩。。</li><li>“一 既然活着意味着不停歇地对抗混乱，那么我将把混乱作为生命状态的一部分接受下来； 二 不对抗意味着死亡，因此不停对抗混乱成为了一种生命的意义； 三 我需要做的是每一次尽力去对抗这种混乱并建立秩序，有时候赢有时候输，但只要还活着，战斗就还没有结束。”</li><li>每当有问题解决不了的时候，就会陷入一种无尽的苦恼，就会想为什么要选这条路。当问题解决了以后，很庆幸自己的选择，都是值得的</li></ul><h4 id="十月"><a href="#十月" class="headerlink" title="十月"></a>十月</h4><ul><li>“你觉得你是老天爷赏饭吃的艺人么？ 是吧，要不然也不可能走到这一步。 你坦然接受了？ 嗯，所以我要更牢牢捧住老天爷赏我的这碗饭，多吃几口”</li><li>好像所有的事情，只要慢慢想，总有个答案，总归不过是时间的问题。时间花在哪里，是看得见的。</li><li>“某出版社审稿时按照领导要求把“傻逼”改成“傻瓜”，还把“你懂个屁”改成“你懂什么”。于是，“傻逼，你懂个屁”，就变成了“傻瓜，你懂什么”…….. “傻瓜，你懂什么 ”(深情），他妈的，我本来是想写两人散伙了，结果因为出版社的原因没散成。 ​​​​”</li><li>“有人问我怎么看同行竞品，我说，我觉得最重要的是朝气，在我看来朝气是超越其他一切的成功因素。一家公司没有朝气，开始创始人再有标签，钱再多，最后也会军阀化而败掉。有朝气，有学习能力，就能从错误和失败中成长起来。一两个创始人有朝气不够，要七八个、十来个核心的人都有朝气。你和这些人谈话，感受到积极的、阳光的看问题的方式，不是打鸡血的，而是自然而然的、务实的、跳出当前小目标的乐观。这样的地方，你走进那个屋子，一定听到欢声笑语，一定在最危险的时刻，都能感到信心。如果你从这个角度去观察，很多答案真的想都不想，看一眼就能明白。”</li><li>慢生活的十一，睡觉，跑步，英语，喝酒～ 跑了几十公里，英语每天准时打卡～ 就是没怎么加班[笑cry]</li><li>在写实验手册，有一种回到大学时候赶作业的感觉。。。</li><li>你不能靠转发锦鲤，你得变成锦鲤[加油]</li><li>忽然想感慨时光</li><li>接下来的小目标～ </li><li>现在看之前的ppt不禁感慨，真有一种初生牛犊的虎儿劲儿。。。。。。</li><li>大半夜扫描个协议结果卡纸…… 活永远干不完，刚想绝望的哭，然后我灵机一动用了个特别聪明的办法扫描了…… 有的时候我的脑子还真是不错[馋嘴]</li><li>在一个有巨头且趋于红海的领域，通过更垂直精炼的功能，获取特定客户群体，并将销量铺到全球，看起来是一个不错的思路；SaaS产品需要一个相对漫长的研发投入过程，并通过拓展至上下游，提供更多客户价值；SaaS 产品的售卖策略需要灵活一些，这样客户可以按自己的需求来选择产品组合；SaaS 创业团队非常重要，特别是产品设计、产品开发以及销售负责人，需要找到最合适的人选；重视客户的口碑，并积极优化 SEO、Inbound Marketing、参加行业峰会，可以扩展品牌影响力；需要提炼一个产品哲学，来推动产品的发展，这个理念可以融入产品、销售、营销等各方面。 </li></ul><h4 id="十一月"><a href="#十一月" class="headerlink" title="十一月"></a>十一月</h4><ul><li>“喝酒可能是最大bug，既不利于健身也不利于专注，但是特别好 。不打算放弃。 ​​​​”</li><li>“接上一条微博，我打开冰箱，开了一瓶半甜白葡萄酒，庆祝这一决定性瞬间，半个多月的痛苦也算有个结果： 1. 好的商业东西，一定是之前有一个模糊的想法，然后不停思考和碰撞，然后，找到同类。咔，就是他了~ 2. 当人在自己的认知局限的时候，很多声音是听不到的。其实很多声音，一直都在。 “</li><li>周末的早晨忍不住痛哭的出不了门 </li><li>将近一个月没运动了，身体开始发了警报，匆忙开启新的健身旅程～ 本来想早点来结果临时被合作伙伴叫走了，后来匆忙赶来20分钟跑了3公里，再做了点无氧，身体比想象中的要好很多～ 忽然想试试连续30天早起运动[馋嘴] </li><li>第一天～ 10点8点起床时间还是不太够，10点匆匆忙忙洗完澡来PNP，看来明天得7点起[加油]</li><li>做一个坦诚和率真的人，也做一个坦诚和率真的公司，相信微小积累，持续改变和时间的力量，因为，时间看得见。</li><li>人要是永远能那么理性，就不是人了。。。</li><li>在事情变好之前，不防悲观一点</li></ul><h4 id="十二月"><a href="#十二月" class="headerlink" title="十二月"></a>十二月</h4><ul><li>“如果你要真的想做成一件事，那么在最开始就不应该提‘平衡’两个字”</li><li>加班有点狠，所以开启一个新爱好～[馋嘴] 把3年前买的书拿出来看看 </li><li>今天有几个重要的谈判，因为周末滑雪换了包，忽然发现今天背的包里没有口红，赶快折反回去拿口红，仿佛有了口红，就成为了什么都不怕女战士[加油]</li><li>“生活可以忙忙碌碌随大流，思想也可以偷偷摸摸求上进” ————&gt; 有点喜欢@薛兆丰 教授了</li><li>竟然觉得毛衣和这个鞋很配，一定是我的审美出了大问题。。。</li><li>不要盲目扩张，人多不是好事。。。</li><li>这个世界远比你想象和险恶 </li><li>听说换个头像github follower就涨起来了。。。 我就是试试，每次打开github都觉得进入了别人的主页。。。。</li><li>拖延症没得救。。。明天的航班我在家拖了1个半小时不想收拾行李。。。。。。 </li><li>终于收拾完了去美国3个月的行李，我错误的用收拾一周行李的速度估计了收拾3个月行李的速度，原来做这种事效率这么低还不专注。。。竟然感觉比工作难多了[汗]忽然明白一件事，就算是收拾行李这么简单的事，如果不习惯就很难迅速进入一个高效专注的状态。。。</li></ul>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 趁早效率手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些思考</title>
      <link href="/thought/2019-1-27-startup-thinking.html"/>
      <url>/thought/2019-1-27-startup-thinking.html</url>
      
        <content type="html"><![CDATA[<p>刚刚读了一篇文章：<a href="http://www.sohu.com/a/291761596_109973" target="_blank" rel="noopener">格灵深瞳：消失的两年</a>。最近这段时间在硅谷，因为时差的原因，白天不会有公司的事分散我的精力，所以白天的时候我会有大块清醒的时间思考，YC Group Office Hour 的压力也挺大的，每周总要讲点什么，有点像工作汇报一样，但是这是我自己的公司，我又不能敷衍着对Partner 做汇报，所以无形中也逼着我必须有持久的深度思考。不过读到下面这些内容，我还是挺有感触的：</p><p>创始人必须几乎虽有的时间都花在战略和产品上面。为了决定一个战略，要做大量的调查、阅读、交流。1月份以来，虽然不在国内，反而我却花了大量的时间和我的付费客户、潜在付费客户、合作伙伴去沟通、交流，看如何改进产品。我每天早上起来的第一件事就是去后台看数据，看新增了哪些注册，这些注册用户从哪里来的，在整个的customer journey 中他们位于哪一部分，我如何提供最有价值的服务，如何收最多的钱。</p><p>对的，企业的本质还是商业。</p><p>“企业生存必然面临着竞争，就像打仗一样。如果军队在打仗，战略是什么该打，什么不该打，跟谁打，什么时候打，怎么打。一旦是战略，它一定是要很精准并且很绝密的。这让我意识到，如果一个做战略的人天天参加媒体采访，并且把该打还没打的仗先说了，这个绝对是有问题的。”</p><p>作为创业公司的创始人，一定要自己要沉下心来和用户交流需求、产品和解决方案。战略是在和你直接的用户交流中找到的，而不是花了一个饼，就有人过来给你解决问题的。</p><p>一家公司的产品首先证明自己的生存能力，第二是证明整个企业的运营能力</p><p>关于“公关和口碑”：<br>公关：自己跟别人时候我们很牛<br>口碑：别人说这家公司很牛<br>创业公司要先去建立口碑，公关只是一个乘法，口碑不好，公关会把不好的口碑放大</p><p>媒体是一个最糟的信息获取来源。媒体的认知是大众的认知，而创业者的认知必须跟大众的认知是完全不一样的，你必须非常深刻，并且有预见性。如果一家创业公司每天都在镁光灯中间，大家都认可他做的事，他是没有机会成功的，因为所有人都在模仿你，然后巨头们都在谋划怎么去扼杀你。</p><p>高领资本的张磊说：”创业成功需要一个SB 窗口，在这个窗口内所有人都认为你是SB，结果到最后其他人都是SB”</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> chatbot </tag>
            
            <tag> YC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桔子互动是一家什么样的公司</title>
      <link href="/thought/2019-1-19-what-is-botorange.html"/>
      <url>/thought/2019-1-19-what-is-botorange.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果你对我们的公司感兴趣，欢迎加入我们，欢迎投简历，发送到邮箱：<a href="mailto:grace@botorange.com" target="_blank" rel="noopener">grace@botorange.com</a> , 发邮件请注明来源。我们现在招 TO B产品、技术、运营和销售，具体内容请看官网：<a href="https://www.botorange.com" target="_blank" rel="noopener">https://www.botorange.com</a> 也欢迎使用我们的产品，我很乐意和你沟通你遇到的问题，并为你提供基于微信的解决方案 :)</p></blockquote><h2 id="第一部分—-公司战略："><a href="#第一部分—-公司战略：" class="headerlink" title="第一部分— 公司战略："></a>第一部分— 公司战略：</h2><h3 id="初心："><a href="#初心：" class="headerlink" title="初心："></a>初心：</h3><p>2年前，我辞职开始做微信机器人,因为我无法使用微信管理好我的舞蹈社群。我发现这是一个很多中小企业都面临的问题：客户如何用微信管理他的用户。2年前的初心是帮助中小企业解决这个问题，今天依然是。</p><h3 id="使命："><a href="#使命：" class="headerlink" title="使命："></a>使命：</h3><p>帮助企业高效管理用户，快速获客并提高转化</p><h3 id="愿景："><a href="#愿景：" class="headerlink" title="愿景："></a>愿景：</h3><p>2年内成为微信智能客服领军者</p><h3 id="第一阶段为客户带来的价值："><a href="#第一阶段为客户带来的价值：" class="headerlink" title="第一阶段为客户带来的价值："></a>第一阶段为客户带来的价值：</h3><p>帮助客户用微信服务用户，快速获客并提高转化，公众号、个人号、企业号是谁不重要，重要的是客户要什么。我们在不同场景提供不同的工具，便于客户操作管理，预计可以帮助客户将转换率和销售量增加80%。</p><h3 id="服务人群："><a href="#服务人群：" class="headerlink" title="服务人群："></a>服务人群：</h3><p>客服人数在5-30人之间，A-B轮的中小型企业，或大型企业的业务部门，这些企业售卖非标准化或超过1000元产品。<br>我现有的主动找过来的付费客户主要在教育、大健康、保险，正好符合这个特征。</p><p>思考以下问题就理解了为什么我定位了这部分服务人群：</p><ul><li>什么时候，我们希望有个人帮忙提供服务？ — —  非标准化的东西，比如购买行为，大家都想讲价</li><li>什么时候，我们更希望是自助服务？  —— 标准化，有标准的东西</li><li>购买一个东西之前，你什么情况下会和客服聊一下？</li></ul><h3 id="模式："><a href="#模式：" class="headerlink" title="模式："></a>模式：</h3><ul><li>Freemium </li><li>基础年费</li><li>增值年费</li></ul><h3 id="市场切入点："><a href="#市场切入点：" class="headerlink" title="市场切入点："></a>市场切入点：</h3><p>从微信智能客服的售前阶段切入，通过流程化管理，逐步切入销售、营销中。预计帮助客户转换率和销售量增加80%，未来3-5年的演变路径：在线客服系统 =&gt; 智能客服系统 =&gt; 对话式工单系统（自创的词）</p><h3 id="企业现阶段使用微信个人号遇到的问题："><a href="#企业现阶段使用微信个人号遇到的问题：" class="headerlink" title="企业现阶段使用微信个人号遇到的问题："></a>企业现阶段使用微信个人号遇到的问题：</h3><ul><li>不同客服的聊天消息不同步，无法保存和分析</li><li>员工离职转移客户难</li><li>员工离职转移客户聊天记录，更难</li><li>员工离职转移客户行为，难上加难</li></ul><h3 id="我们要解决的问题："><a href="#我们要解决的问题：" class="headerlink" title="我们要解决的问题："></a>我们要解决的问题：</h3><ul><li>用户来了，就能让你留下</li><li>用户买了，还能进行二次口碑传播</li><li>不做爬取销售线索</li><li>从已有数据（企业的用户群中）中分析销售线索，挖掘用户更多诉求</li></ul><h3 id="可以逐渐积累的壁垒（未来用户很难离开的原因）："><a href="#可以逐渐积累的壁垒（未来用户很难离开的原因）：" class="headerlink" title="可以逐渐积累的壁垒（未来用户很难离开的原因）："></a>可以逐渐积累的壁垒（未来用户很难离开的原因）：</h3><ul><li>用户数据：留下用户在企业整个生命周期的数据，从有意向、购买到售后的整个对话数据开始收集，帮助企业和用户建立深度连接。什么时候从什么渠道过来，什么时候添加好友，什么时候注册产品，什么时候在群里说过话，什么时候私信过，多久之后没联系等。这些都是在微信中留下的记录，是行为记录，但不是对话记录，这些被很多产品忽略掉了。</li><li>辅助决策：辅助决策没有黑科技，关键还是用户数据。</li><li>工具产品属性：最大的壁垒是企业用户的使用习惯，只要产品本身没有什么问题，不犯太大的错误，就算竞品拥有更多功能、使用体验更好用户也很难走，时间窗口在这里显得尤为重要。</li><li>在服务B端的逻辑里，优质服务带来的口碑效应能保证稳定的获客，这足以成为桔子互动立足的关键壁垒。在To B领域的生意里，撬动一个企业购买服务有着更高的获客成本，因为对于企业来说，决定使用一个系统意味着将公司的产品、员工、甚至最为宝贵的数据搬进一个“新家”，一旦这个“家”不够牢固，再一次的迁移就要花费更多成本。微信毕竟还是社交工具，它不是客服场景，比如工单系统、对话分析、辅助决策等很客服功能，在微信内都需要新的解决方案。而我们是最有价值的地方在于：在微信生态内重塑一个客服的底层系统。</li><li>在在 SaaS 领域，’卖出产品’不再是一场交易的完结，而是开始。SaaS 厂商要理解好业务，并给客户提供解决方案，解决成功了，客户就跟你一直在一起。”。我们搭建“客户成功”团队，通过在线服务、线下培训、企业交流等方式为企业的运营状况进行诊断，树立标杆企业用户，以提升企业的经营能力和业绩。</li></ul><h2 id="第二部分——-To-B-SaaS-机器人的思考："><a href="#第二部分——-To-B-SaaS-机器人的思考：" class="headerlink" title="第二部分—— To B SaaS 机器人的思考："></a>第二部分—— To B SaaS 机器人的思考：</h2><h3 id="工具层面的思考："><a href="#工具层面的思考：" class="headerlink" title="工具层面的思考："></a>工具层面的思考：</h3><ul><li>单纯的一个功能点没有价值，一个流程化的工具才有价值</li><li>企业购买一个工具的成本 = 购买工具的费用 + 学习成本 + 操作成本 + 管理成本，我们必须保证为企业提供的价值远大于成本</li><li>客户 LTV（生命周期价值）÷ CAC（客户获取成本）＞3</li><li>如果能为企业提供的价值大，可以提高产品客单价</li><li>如果能帮助企业降低我们提供的工具的学习、操作和管理成本，也可以提高产品客单价</li></ul><h3 id="产品层面的思考："><a href="#产品层面的思考：" class="headerlink" title="产品层面的思考："></a>产品层面的思考：</h3><ul><li>真正的智能客服，要有基于数据的推理能力，基于用户的行为分析，知道什么时候该说什么话，而不是单纯的说话</li><li>产品需要主动式响应，而非被动式响应。做法是AI引发话题，人去跟进，而非人去主动引发，AI响应，这是人机协作最好的方式。</li><li>如果一个商业行为（企业服务）没有分析和归纳，就不会有优化，更不会有增长。</li><li>给企业一个分析报表没有用，核心是如何指导工作方向，这里的工作方向一定是具体化、细粒度的才有意义。</li></ul><h3 id="企业的诉求："><a href="#企业的诉求：" class="headerlink" title="企业的诉求："></a>企业的诉求：</h3><ul><li>获客</li><li>提高转化：<ul><li>更了解用户，销售的精髓是你了解他后再推荐产品，机器从这个角度可以帮助销售更好的了解客户</li><li>定期召回，不要让用户忘记你，机器这个角度可以帮助你召回，机器（AI）唤醒，人去跟进。</li></ul></li><li>提高用户的忠诚度：每个员工直接提供服务，顾客忠诚度很高(未来的场景是企业微信+小程序,如快递，4S店)</li><li>提高效率</li><li>及时沟通（企业需要的不是消息群发，他需要是定期和用户沟通，让用户更了解他）</li></ul><h3 id="人机协作："><a href="#人机协作：" class="headerlink" title="人机协作："></a>人机协作：</h3><ul><li>机器擅长效率、记录、并发、信息共享</li><li>人擅长理解、思考、归纳、分析、总结</li><li>如果堆人就能解决的问题，这算是一个有解的问题，企业为这个买单的意愿不一定高，因为人没有学习成本。</li><li>如果堆人解决不了的问题，机器还能解决的问题，企业买单意愿非常强，比如机器的记录，进而帮助人辅助决策</li></ul><h3 id="对未来的判断："><a href="#对未来的判断：" class="headerlink" title="对未来的判断："></a>对未来的判断：</h3><ul><li>微信个人号（企业个人号）是接下来的一个大机会。</li></ul><h2 id="第三部分-——-关于微信生态"><a href="#第三部分-——-关于微信生态" class="headerlink" title="第三部分 —— 关于微信生态"></a>第三部分 —— 关于微信生态</h2><h3 id="关于微信群："><a href="#关于微信群：" class="headerlink" title="关于微信群："></a>关于微信群：</h3><p>我发现一个现象：小公司或者大公司的小业务线会建客户微信群，因为小圈子人更容易有共同的问题，人力不够可以不用一对一的聊。</p><p>分析下来，我认为企业做微信群的原因：</p><ul><li>企业自身层面：<ul><li>交互式工单系统（我自创的词）：小公司没有工单系统，有些问题一个人解决不了，就拉了公司相关的人一起在群里解决问题，这件事在企业微信号进群后会有很大的想象空间，甚至能够完全替代掉传统的工单系统。（因为自创，有待验证）</li><li>效率高（有些客户提到这个，我认为不一定，且在AI优化后，优势会越来越小）</li></ul></li><li>用户层面：<ul><li>群适合做市场和营销，让用户有品牌印象。通常群用来初步勾搭，私聊进行深入沟通</li><li>企业利用社交属性，引导用户分享产品体验，用户是有跟风属性的，有人买了会带动其他人购买，本质在分享而非社交</li><li>如果用户购买意向有但是不强，企业一对一私聊时，用户会觉得像推销，如果有个群，他反而会愿意待着看看，等其他人好评后自己再购买。</li></ul></li></ul><h3 id="关于企业微信："><a href="#关于企业微信：" class="headerlink" title="关于企业微信："></a>关于企业微信：</h3><p>张小龙在总结微信8年公开课上对企业微信的定位是：不是局限于企业内部的通讯，而是让每一个企业员工成为企业服务的窗口。人就是服务，而且是认证的服务。</p><p>现实生活中，我们更希望有个人来帮你做一些事情，而不是去打开一个APP或者小程序，因为人更有灵活性， 并且服务是更到位的，比如去网上订一个酒店，如果你要改变日期或者退订，通过APP是很麻烦的，这个时候你更希望联系人工客服，人的界面也是友好的; 如果一个4S店的员工用企业微信加了你，你可以认为这个人就是你的小程序，当你点进与他的对话界面，因为对方是企业微信的用户，你会看到他的对话界面下是4S店的服务菜单，你可以直接在这里使用服务，有点像公众号底下的菜单，你也可以直接和他说话，消息能够得到及时的回复。当你下次要找4S店的时候，你的第一选择是打开和这个人的对话，而不是去找4S店的小程序。这里其实给企业一个机会，企业可以让所有员工变成一个对外服务的窗口，带着你的小程序到处跑。企业微信让员工带着小程序直接提供服务，顾客的忠诚度很高。</p><p>在过去五年，微信个人号逐步在企业中承担了上面的服务，随着企业微信的开放，我们基于个人号hack 提供的工具，可以在企业微信上名正言顺的使用。因此企业微信这样的发展方向，给我们带来了巨大的机会。</p><p>具体机会体现在下面3点：</p><ul><li>小程序+企业微信，让 GUI + CUI 混合的多种交互方式在微信中成为可能，这是一个更加高效的获取服务的形式。</li><li>智能机器人和人协作，帮助企业员工及时回复</li><li>导出企业和用户的私聊及群聊数据，并基于对话记录分析用户。</li></ul><h3 id="关于公众号和微信个人号："><a href="#关于公众号和微信个人号：" class="headerlink" title="关于公众号和微信个人号："></a>关于公众号和微信个人号：</h3><p>公众号接口开放，接入简单，理论上应该是企业作为客服工具的首选，但是我聊了几十家中小型企业后发现，大家仍然首选微信个人号而不是公众号。甚至3年前我在做舞哩的时候，即使那个时候已经非常了解微信公众号了（因为我从2013年就开始为企业客户提供公众号的运营和技术服务），为了简单方便，我还是第一时间用了微信个人号做客服 —– 只是习惯。</p><p>进一步分析原因：</p><ul><li>公众号定位是媒体属性，个人号定位是客服属性：<ul><li>公众号通常像一个门户或者自媒体，作用偏向信息发布。当他的媒体属性太强，就会掩盖他的客服属性。一个现象是，公众号曾经官方推的多客服系统在逐渐弱化，很多CRM 厂商也提供公众号客服工具，但是企业缺仍然不买单。</li><li>当公众号担任客服属性的时候，在AI可以看到的未来，只能做分诊台模式，即对问题进行分类，后期还得人接入。</li></ul></li><li>再次召回容易：和官网、邮件、app嵌入和公众号相比，个人号再次召回用户容易，比如通过合理的群发。</li><li>能发朋友圈：有时候客服发的产品朋友圈会有很多点赞，表明用户是愿意看到的，企业认为这样的互动和冷冰冰的公众号相比，更有人的感觉。如果用户感到被骚扰了，删了好友和取消订阅号一样轻松的。</li><li>操作简单：中小企业发展初期没有专业的人士，一般是老板或兼职来做客服，个人号没有学习成本。</li><li>数据存储：这是企业的感官层面，企业感觉公众号的聊天记录不在自己这里（虽然是假象），但是微信个人号的聊天记录在自己手里。</li><li>不能加微信群（这是很多人脱口而出的，但是深究这个原因反而最不重要）</li></ul><p>因为公众号和个人号属性的不同，他们的关系不是谁替代谁，而是共生的关系，在不同的场景用不同的工具。企业通过公众号做品牌，用微信个人号建立客户关系。就像公司需要门户，所以需要小程序和公众号，公司同样需要客服，所以需要个人号。</p><p>举个例子，招商银行花了很大的精力在做公众号并且取得了很好的效果，但是招商银行也会有专职客户经理针对VIP用户一对一跟进，这个跟进是通过微信个人号完成的。这说明，高附加值的人群是一定要落到一对一的对话层面的。</p><p>如果能提供一个好用的工具，让一对一的沟通，由原来的1个对10个，变成1个对100个，用户体验不降反升，客户是没有不买单的理由的。能做到不降反升的原因是：</p><ul><li>提升用户体验：用户所有的行为喜好有总结，机器记录的比人好，机器让人销售提供服务的时候更懂用户，更专业。</li><li>提高效率：机器帮助人快速回答一些问题或者提示一些答案，减少思考的时间和输入的时间</li></ul><h2 id="第四部分—-机遇与挑战"><a href="#第四部分—-机遇与挑战" class="headerlink" title="第四部分— 机遇与挑战"></a>第四部分— 机遇与挑战</h2><p>现在的产品形态是偏售前的IM客服，属于CRM的细分领域，现有CRM 已经将IM客服做的非常好了，这对我们是一个巨大的挑战，我们需要找到差异性。</p><ul><li>从产品维度看：<ul><li>偏重售前：对用户的响应方式从被动式变为主动式</li><li>微信：IM载体的变化带来的机会</li><li>智能客服: 以解决用户问题为导向的人机协作模式</li></ul></li><li>从市场维度看：<ul><li>现有CRM对中小企业的覆盖不够，是我们的机会。</li></ul></li></ul><h3 id="1-偏重售前，对用户的响应方式从被动式变为主动式"><a href="#1-偏重售前，对用户的响应方式从被动式变为主动式" class="headerlink" title="1. 偏重售前，对用户的响应方式从被动式变为主动式"></a>1. 偏重售前，对用户的响应方式从被动式变为主动式</h3><p>售前偏重主动式响应，售后偏重被动式响应。我认为AI现阶段带来的机会是：通过AI引发话题，人去跟进，而非人去主动引发，AI跟进。售前需要主动式响应，售后需要被动式响应。售前现在竞争相对较小，而售后领域已经逼近红海。且售前和售后相比，能为企业提高收入，他们更容易买单。<br>用群发的功能作为例子：群发对企业的价值不是浅浅的信息触达，企业更需要的是发布信息后和用户产生的后续强关联的深入沟通，机器发送后，人去主动跟进，这个时候选择什么样的人发，什么时间段发，群发后的机器如何快速帮人回应这些事情，还没有那个产品做的很好，这才是区别于传统的主动式响应。我猜测传统的IM客服不是不想做主动式响应，而是他们没有能力主动触达用户，因为没有微信这样的载体。</p><h3 id="2-微信带来的机会"><a href="#2-微信带来的机会" class="headerlink" title="2. 微信带来的机会"></a>2. 微信带来的机会</h3><p>我认为这本质上是IM载体变化带来的机会，现有的IM客服不能像微信这样让企业和用户的有如此强的连接，张小龙曾在公开场合说本希望公众号担任这个角色，不幸的是最后用的好的反而是自媒体。<br>传统IM 客服的载体：</p><ul><li>PC网页</li><li>移动网页</li><li>微信公众号</li><li>微博</li><li>移动客户端</li></ul><p>这些载体提供了沟通的工具，但是这种沟通更偏重即来即走：</p><ul><li>企业想再找回用户有难度</li><li>用户想再找回企业有难度</li></ul><p>举个例子，在网页上”联系我们“的客服渠道，用户反复来到这个网页是很难看到所有对话记录的，这会让企业和用户有恐慌感的，所以传统IM客服才会强调：让客服在一个地方响应和接待客服，和其他渠道的数据打通。但是这存在下面2个问题：</p><ol><li>用户更希望在一个地方把所有东西都说完，如果用户在多个渠道在沟通，本质上是沟通工具或服务没提供好，要去做的是提供唯一的沟通工具，而不是去和其他渠道打通。</li><li>中小企业几乎不存在多渠道问题，他们精力不够，微信在中小企业这里逐渐成为唯一的沟通工具。</li><li>技术上看，以上各个渠道的非注册用户难以打通，比如 weibo 唯一id和公众号的唯一id很难打通，只有当他们都在你的平台有了唯一id后才能打通，但这件事多发生在售后而不是售前。<br>同时，微信的形态还会带来一个新的机会：同时通过群聊和私聊的客服模式（我上面说的交互式工单系统），这个如果在后期往工单上扩展也很有机会，但不是我们早期着重考虑的点。</li></ol><p>总结来说，我们的产品侧重点不在渠道整合，而是如何满足用户的多样化需求及如何提高用户满意度上，传统CRM偏重绩效考核，我们也会稍微考虑一下客服人员的绩效考核，这个的主要目标是指导整体如何提升工作业绩。</p><h3 id="3-智能客服带来的机会"><a href="#3-智能客服带来的机会" class="headerlink" title="3. 智能客服带来的机会"></a>3. 智能客服带来的机会</h3><p>现阶段的智能客服应用偏原始，大多数是智能客服仅在深夜时段服务，或者是提供智能质检，没有深入客户服务流程，而我们会更偏重企业的业务流程。<br>我们是从chatbot角度入场的，知道机器的局限在哪里，对人工智能的清醒认知能让我们将智能定位在人机协作的方向，未来逐步提高机器的智能的方向。</p><h3 id="4-市场侧重点面向中小企业带来的机会"><a href="#4-市场侧重点面向中小企业带来的机会" class="headerlink" title="4. 市场侧重点面向中小企业带来的机会"></a>4. 市场侧重点面向中小企业带来的机会</h3><p>CRM适合大企业，因为他们需要流程化管理，不怕重；但对于中小企业来说，因为客服不成体系，CRM显得格外太重了。另外，早期他们通常是用小米加步枪的方式作战：随手抄个家伙就开始，这个家伙就是微信个人号，当发展到一定量级需要切换工具时，切换和迁移成本又非常高。<br>我们的机会在于：他们用了很长时间微信个人号，遇到很多问题无从解决，这个时候说有一个能增微信个人号的产品，不需要迁移，他会很容易接受。</p><p>我认为接下来我们走的路是：针对使用个人号微信 —&gt; 提高个人号微信工具 -&gt; 提供企业微信服务。 如果直接跳到企业微信，中小企业也许也会觉得有跳跃性较大。</p><p>综上，桔子互动从微信客服的售前阶段切入，未来再一步步渗透到营销、客服、销售等。其实本身国内的营销、销售服务类软件本身就是客服，只要把智能客服做好，以客服软件为核心，未来随着营销、销售市场SaaS市场的进一步成熟，我们的路会越走越宽。</p><p>最后，有一个问题一直没想清楚：如果我们是做售前的，当提到客服时，我们应该如何定义好自己，和传统的售后区分开？</p><h2 id="第五部分-——-如何实现"><a href="#第五部分-——-如何实现" class="headerlink" title="第五部分 —— 如何实现"></a>第五部分 —— 如何实现</h2><p>在YC这3个月我们会从群发功能切入作为发力点，目标是让服务可以可控的传递给需要的人，并掌握这些人的后续反馈。实现“可控”的发信息，其实并不容易，真正在给用户创造价值的企业也不希望各种骚扰自己的用户，但他们的问题是不知道哪些人该发，哪些人不该发，所以他们宁愿打扰也不想错过。</p><p>以下是一个获客场景的解决方案：</p><h3 id="第一阶段，目标是初次认识，了解用户并辅助用户完成一些基本事情"><a href="#第一阶段，目标是初次认识，了解用户并辅助用户完成一些基本事情" class="headerlink" title="第一阶段，目标是初次认识，了解用户并辅助用户完成一些基本事情"></a>第一阶段，目标是初次认识，了解用户并辅助用户完成一些基本事情</h3><ol><li>用户在官网注册，留下了手机号，机器人自动添加用户为好友，未来需要做成SDK一键集成到用户的系统中</li><li>用对话的方式友好的收集用户个人用户信息并沟通业务，早期的收集可通过多轮对话脚本完成</li><li>发一个优惠券，留住客户关系</li><li>引导用户完成企业想做的事：进群或分享（不同场景不同，可选）</li></ol><h3 id="第二阶段：主动式响应"><a href="#第二阶段：主动式响应" class="headerlink" title="第二阶段：主动式响应"></a>第二阶段：主动式响应</h3><ol><li>全面的群发，一周1-2次的，信息发布为主</li><li>二次召回用户，针对初次添加好友、群内活跃等维度进行召回标准。</li></ol><p>产品设计上会注重以下的细节：</p><ul><li>群发对象的选择：<ul><li>定期召回：找到一段时间不联系的有意向老客户</li><li>近期（如3天）有过互动交流的客户，不再发送</li><li>客户退群后，不再发送信息</li></ul></li><li>发送的内容：<ul><li>用机器分析这个用户喜欢什么时间聊天，什么口吻对话</li><li>带着用户的昵称和不同的口吻，让用户觉得这不是在群发，而是企业在认真的对待一个老朋友</li></ul></li><li>发送的时间：<ul><li>天维度：根据用户互动频率决定，目标是召回用户</li><li>小时维度：根据用户说话时间决定，目标是让用户在最闲的时候看到消息。举个例子，用户经常上午开会，如果选择下午发送信息，转化率会更高。</li></ul></li><li>发的过程：<ul><li>发送状态监控</li><li>及时回复：用户回复群发消息时，企业需要及时回复，这个地方是需要智能机器人的。举个例子，如果群发了200个用户，10%的人回复的情况下，一个人已经处理不过来了，可以提供的相关工具如下：<ul><li>分流的客服系统</li><li>机器人的自动多轮对话脚本</li></ul></li></ul></li><li>发送结束：<ul><li>看多少个好友把你删了，这个以后就尽量不去骚扰了</li><li>看多少个好友只是简单的回复，针对性的二次跟进</li><li>看有多少的付费意向转化</li></ul></li></ul><h3 id="第三阶段：随时沟通"><a href="#第三阶段：随时沟通" class="headerlink" title="第三阶段：随时沟通"></a>第三阶段：随时沟通</h3><ol><li>机器回答不了的问题，转发到一个群里或者客服私聊中提醒客服回答</li><li>私聊场景：有人和机器一起，机器回复的时候有个尾巴 “来自我的机器人助理”</li></ol><h3 id="第四阶段：分析"><a href="#第四阶段：分析" class="headerlink" title="第四阶段：分析"></a>第四阶段：分析</h3><ol><li>群里和用户的聊天内容可检索，看谁说了某些关键词，进一步转化为销售线索</li><li>记录进群人数，漏掉应该回复的消息等，方便做二次召回，挖出有意向的客户</li><li>所有的聊天内容分享给企业内部，大家一起总结高转化率的话术</li><li>通过分析销售每天聊了多少，聊了多久，转化多少，辅助做员工绩效考核</li></ol>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> chatbot </tag>
            
            <tag> YC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>早期创业经验分享</title>
      <link href="/presentation/2018-11-14-startup-in-PNP.html"/>
      <url>/presentation/2018-11-14-startup-in-PNP.html</url>
      
        <content type="html"><![CDATA[<p>这是我在Plug And Play 的邀请下，在中央民族大学，为现场学生分享一个我从学生创业者走过来的创业思考。 活动链接：<a href="http://56c.muc.edu.cn/About/events" target="_blank" rel="noopener">http://56c.muc.edu.cn/About/events</a></p><p><img src="/img/2018/startup-pnp-2.jpeg" alt><br><img src="/img/2018/startup-pnp-3.jpeg" alt><br><img src="/img/2018/startup-pnp-4.jpeg" alt><br><img src="/img/2018/startup-pnp-5.jpeg" alt><br><img src="/img/2018/startup-pnp-6.jpeg" alt><br><img src="/img/2018/startup-pnp-7.jpeg" alt><br><img src="/img/2018/startup-pnp-8.jpeg" alt><br><img src="/img/2018/startup-pnp-9.jpeg" alt><br><img src="/img/2018/startup-pnp-10.jpeg" alt><br><img src="/img/2018/startup-pnp-11.jpeg" alt><br><img src="/img/2018/startup-pnp-12.jpeg" alt><br><img src="/img/2018/startup-pnp-13.jpeg" alt><br><img src="/img/2018/startup-pnp-14.jpeg" alt><br><img src="/img/2018/startup-pnp-15.jpeg" alt><br><img src="/img/2018/startup-pnp-16.jpeg" alt><br><img src="/img/2018/startup-pnp-17.jpeg" alt><br><img src="/img/2018/startup-pnp-18.jpeg" alt><br><img src="/img/2018/startup-pnp-19.jpeg" alt><br><img src="/img/2018/startup-pnp-20.jpeg" alt><br><img src="/img/2018/startup-pnp-21.jpeg" alt><br><img src="/img/2018/startup-pnp-22.jpeg" alt><br><img src="/img/2018/startup-pnp-23.jpeg" alt><br><img src="/img/2018/startup-pnp-24.jpeg" alt><br><img src="/img/2018/startup-pnp-25.jpeg" alt><br><img src="/img/2018/startup-pnp-26.jpeg" alt><br><img src="/img/2018/startup-pnp-27.jpeg" alt><br><img src="/img/2018/startup-pnp-28.jpeg" alt><br><img src="/img/2018/startup-pnp-29.jpeg" alt><br><img src="/img/2018/startup-pnp-30.jpeg" alt></p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> startup </tag>
            
            <tag> Plug And Play </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 4.1 富集数据资源</title>
      <link href="/chatbot/2018-11-14-unit-4-1.html"/>
      <url>/chatbot/2018-11-14-unit-4-1.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第四章，<strong>富集数据资源</strong>。</p><p>我会为大家介绍什么叫做富集资源以及富集哪些资源。</p><p><img src="/img/2018/unit-4-1-1.jpeg" alt="image"></p><ul><li><strong>概述</strong></li></ul><p><strong>首先，富集词典词槽</strong>。这是指需要收集到任务完成的关键词和关键要素。类似电影院、所有的App名称、航班信息，都叫词典词槽。这些需要我们尽可能多的收集到。</p><p><strong>其次，富集对话样本</strong>，对话样本是真实的业务场景中的对话集合。</p><p><strong>最后，富集问答对</strong>，问答对是真实业务场景中的问答集合。</p><p>如上是需要要富集的资源。</p><p>接下来为大家简单介绍富集的三种方法：</p><p>第一，从指定业务场景中提取数据；</p><p>第二，从对话的日志中抽取相关数据；</p><p>第三，去网上收集。如电影名称、电影院名称等，这些有官方的数据库，可以直接下载，其他没有数据库的，可以去垂直的社区论坛上爬取。</p><p><img src="/img/2018/unit-4-1-2.jpeg" alt="image"></p><ul><li><strong>富集词典词槽</strong></li></ul><p>什么叫做富集词槽词典？简单来说，就是获取更多实体编辑数据。例如，当你要做一个打开手机App功能的机器人，如果你收集了所有常用的App名称，识别的准确率会更高。富集词槽词典有一个通用的标准，每一个词槽关键词，至少要标出3到5个相关的关键词。</p><p>换句话解释：</p><p><strong>词典+规则+预置词槽=你的词槽</strong></p><p>UNIT里已经预置了很多的词槽，帮助各位省去了官方数据库下载和垂直网站爬取的工作量。</p><p><img src="/img/2018/unit-4-1-3.jpeg" alt="image"></p><p>富集词槽词典的原则是：</p><p>1. 尽量复用系统的预置词槽</p><p>2. 使用自定义词典，规则主要是补充用的，因为我们自定义的词槽可能未必有百度预置的词槽更全。</p><p>有以下3个技巧：</p><ol><li>自定义词典、规则的优先级高于系统内置。</li></ol><p>2. 自定义词槽之间的优先级相等。如果一个词属于多个词槽，相应的，需要识别出多个词槽候选。</p><p>3. 规则的形式是正则表达式，注意控制通配符的范围，善用捕捉功能加以限制。</p><p>考虑到很多读者并不是程序员，也不知道什么叫做正则表达式。所以在这一章，简单介绍下正则表达式。</p><p><img src="/img/2018/unit-4-1-4.jpeg" alt="image"></p><ul><li><strong>正则表达式介绍</strong></li></ul><p>正则表达式描述了一种字符串匹配的模式，用来检查一个串是否含有某种子串，将匹配的子串替换，或从某个串中抽取符合某个条件的字串等。</p><p>上述描述是一个很官方的定义。</p><p>简单的来说，正则表达式用一种模版去匹配一句话里边是否有符合这个模版的东西，并把它抽取出来。正则表达式非常复杂，有非常多的通配符，这里只介绍了两个：</p><p>1. 问号： 问号匹配字符串中的零或一个字符</p><p>2. 星号：星号匹配零个或多个字符。</p><p>如图所示，一个正则表达式将要匹配图中所示的文件。\w代表任意一个字母或数字或下划线，问号匹配零或一个字符，所以可以看到它都可以匹配。*匹配零个或多个字符，所以我们看到这些也都是可以匹配的。</p><p>更多的正则表达式信息，各位可以到官网了解更多。</p><p>如上，读者可以知道富集词槽词典涉及到正则表达式的时候，该如何去使用。</p><p><img src="/img/2018/unit-4-1-5.jpeg" alt="image"></p><ul><li><strong>富集对话样本 &amp; 问答对</strong></li></ul><p>富集对话样本和问答对是为了获取更多的可标注数据的条目。比如聊天数据或问答数据。在社交媒体、论坛、问答社区等都可能包含这类数据。</p><p>富集的标准：通常情况下，标注100个对话样本，就可以进行基本训练。当数据达到1000个的时候，基本上整个系统就已经达到了可用的标准。UNIT提供了一个很好的功能——对话样本集，有学习模式和训练模式，输入对话样本，UNIT可以自行录入，并且可以在这里进行简单的标注。后面会在实操的时候给读者做详细讲解。</p><p><img src="/img/2018/unit-4-1-6.jpeg" alt="image"></p><ul><li><strong>标注对话模版</strong></li></ul><p>当开始搭建聊天机器人的时候，通常情况是没有真实的样本和问答对的。因为机器人还没有上线，开发者一定不知道用户如何去和Bot进行交互。这个时候是很难找100个对话对的。</p><p>要解决上述问题，标注对话模版是一个很实用的功能。先搭建一个对话模版并上线，上线后再进一步积累真实的对话样本数据，再进行数据富集，是一个很好的冷启动方法。</p><p>对话模版是一种快速生效的工具，开发者可以根据训练集抽象高质量的模版提升效果。如果模版标准比较高，有的时候也可以直接拿来做训练。上图是UNIT上对话模版列表的一个配置界面，之后在实操课程里会进一步给大家解释。</p><p><img src="/img/2018/unit-4-1-7.jpeg" alt="image"></p><ul><li><strong>数据后续处理</strong></li></ul><p>富集数据资源还有一个很重要的步骤是数据的后续处理，这个分为三块：</p><p>第一块是数据清洗，使用正则表达式等工具，将没有用的数据区去掉，比如语气词”啊“，”哎“等，或者人名，电话号等敏感信息。</p><p>第二步是数据标注，部分数据需要后续的人工标注才能使用。包括意图分类、领域分类，槽值与实体的标注等。</p><p>第三块是数据变形，通过对特定数据的变形处理，可以兼容更多场景。比如常见的文本资料里经常会出现中文标点和英文标点混合使用的情况。可能出现“地、的、得”被混用的情况，应该尽可能的做一些合理的数据变形，使得机器能够识别更多的内容。</p><p>如上，给大家介绍了一下富集数据资源，这节课就到这里，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在微信生态中做用户增长</title>
      <link href="/presentation/2018-11-9-how-to-growth-in-wechat.html"/>
      <url>/presentation/2018-11-9-how-to-growth-in-wechat.html</url>
      
        <content type="html"><![CDATA[<p>这是我和ChatOpera 联合举办聊天机器人活动：<a href="https://www.bagevent.com/event/1944265" target="_blank" rel="noopener">企业聊天机器人：抢占智能化先机</a>,我分享了如何利用聊天机器人在微信生态中实现增长。</p><p><img src="/img/2018/wechat-growth-1.jpeg" alt><br><img src="/img/2018/wechat-growth-2.jpeg" alt><br><img src="/img/2018/wechat-growth-3.jpeg" alt><br><img src="/img/2018/wechat-growth-4.jpeg" alt><br><img src="/img/2018/wechat-growth-5.jpeg" alt><br><img src="/img/2018/wechat-growth-6.jpeg" alt><br><img src="/img/2018/wechat-growth-7.jpeg" alt><br><img src="/img/2018/wechat-growth-8.jpeg" alt><br><img src="/img/2018/wechat-growth-9.jpeg" alt><br><img src="/img/2018/wechat-growth-10.jpeg" alt><br><img src="/img/2018/wechat-growth-11.jpeg" alt><br><img src="/img/2018/wechat-growth-12.jpeg" alt><br><img src="/img/2018/wechat-growth-13.jpeg" alt><br><img src="/img/2018/wechat-growth-14.jpeg" alt><br><img src="/img/2018/wechat-growth-15.jpeg" alt><br><img src="/img/2018/wechat-growth-16.jpeg" alt><br><img src="/img/2018/wechat-growth-17.jpeg" alt><br><img src="/img/2018/wechat-growth-18.jpeg" alt><br><img src="/img/2018/wechat-growth-19.jpeg" alt><br><img src="/img/2018/wechat-growth-20.jpeg" alt><br><img src="/img/2018/wechat-growth-21.jpeg" alt><br><img src="/img/2018/wechat-growth-22.jpeg" alt>  </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> startup </tag>
            
            <tag> chatbot </tag>
            
            <tag> 小桔获客机器人 </tag>
            
            <tag> 桔子互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.6 设计UNIT对话逻辑</title>
      <link href="/chatbot/2018-11-7-unit-3-6.html"/>
      <url>/chatbot/2018-11-7-unit-3-6.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第三章的第六节，设计UNIT对话逻辑。</p><p>我们在上几章已经定义好了对话逻辑，接下来我们看一下怎么用UNIT来做所有的配置和设计。</p><p><img src="/img/2018/unit-3-6-1.jpeg" alt="image"></p><p>梳理业务逻辑<br>首先，根据我们之前学过的内容，第一步要梳理业务逻辑。</p><p>先做一些准备工作，磨刀不误砍柴工。</p><p>对话Bot其实是在模拟你真实的业务场景，所以梳理业务的逻辑非常重要。</p><p>我们需要知道用户通常有哪些目的，这些目的有没有关联，哪些信息是实现目的的关键要素。</p><p>还是以火车票的预定为例，这个场景是用户来到了火车票售票大厅，我们基本上可以梳理出他有下面几个目的：</p><p>查询车次和时间；</p><p>查询余票；</p><p>购买火车票；</p><p>改签车票；</p><p>退票；</p><p>进一步去分析会发现，购买火车票的意图先要经过a和b，先查询车次和时间，再查询余票。</p><p>我们以查询车票和时间为例，关键的信息有起点的城市、终点的城市。只有有了这些业务逻辑的梳理，才能在下一步中合理的构建出Bot技能的对话意图、词槽等对话系统中的必要信息。</p><p>第二步，配置技能的对话意图或问答意图。</p><p><img src="/img/2018/unit-3-6-2.jpeg" alt="image"></p><p>配置技能的对话意图或问答意图<br>UNIT上的技能有预置的技能和自定义技能，整个配置技能目标是把业务逻辑交给对话系统，每一个意图都是由相关的意图组成。</p><p>根据我们上一个步骤里，对业务逻辑的拆解完成技能下对每个对话意图、问答意图的具体配置。</p><p>这个时候要思考，用户对话的对话意图是什么？</p><p>要达成用户的对话意图，需要理解哪些关键信息？</p><p>对话系统应该如何回应用户？</p><p>有哪些规则是需要遵守的？</p><p>这种对话意图的定义，类似于产品设计里的功能需求分析。</p><p>同样以订票为例，如图所示，它的对话意图名是BOOK_TICKET，别名是订票。我们要添加相关的词槽，有user_time、user_from、user_to和trainnumber，这是一些词槽别名。</p><p>澄清话术就是怎么去问用户信息，“你什么时间出发”“从哪出发”“要到哪”。</p><p><img src="/img/2018/unit-3-6-3.jpeg" alt="image"></p><p>配置技能的对话意图或问答意图需要以下五步：</p><ol><li><p>新建对话意图；</p></li><li><p>添加词槽；</p></li><li><p>设置Bot的回应；</p></li><li><p>新建问答意图；</p></li><li><p>设置预置技能（例如：闲聊、问候、指令等等）；</p></li></ol><p>以下是一些补充说明：</p><p>后续实操课程会专门讲解新建对话意图。</p><p>关于Bot 的回应：</p><p>Bot的回应是说当Bot识别到用户的意图，并且已经识别到所有的词槽之后，Bot的下一步的操作，通常有三种Bot操作方式：答复、引导至对话意图、引导至问答意图。</p><p>这里有三个注意事项：</p><p>实际落地的时候需要在自己的业务代码里判断，当前Bot解析的意图为订票，并且用户提供了系统需要的关键词槽信息，接下来你需要用这三个词槽值你去火车票的系统中找到符合条件的火车票，同时生成一个火车票的例子返回给用户，供用户选择并完成支付。在这个操作的过程中是需要对接外部系统的。</p><p>关于引导至对话意图和引导至问答意图：</p><p>引导至对话意图：当前对话满足一定条件时，把它引导到另外一个对话意图。也就是说让用户进入到另外一个意图的对话里去。</p><p>引导至问答意图：让用户直接在目标问答意图下提问并获取答案，它更像一个Q&amp;A，就是一个我们之前说的问答型的这种。</p><p>比如说我问：“什么是经停航班”，然后有一个回答。</p><p>这些在后续的实操中都会有讲。</p><p><img src="/img/2018/unit-3-6-4.jpeg" alt="image"></p><p>标注对话数据<br>在效果优化训练数据中尽量多的添加对话模版和对话样板，这样搭建的机器人会更贴近真实的业务场景。对话Bot就像一个儿童，教的越多越聪明。</p><p>具体的方法下面简单介绍一下，后续的实操会详细介绍。</p><p>第一步，配置对话模版；<br>举个例子：“明天上午去北京的机票”，在这里把明天上午做成模版，配置好以后，当用户有类似 “明天上午XXXX” 这样的话术出现时，系统会自动匹配。比较适用于样本少，快速识别不同表达方式的用户需求。</p><p>第二步，标注对话样本；<br>在这一阶段，把收集到的对话数据导入到UNIT的平台，依次标注意图、词槽，供后续的学习，让机器人有更好的对话理解泛化能力。</p><p>第三步是添加问答对；<br>在需求分析的阶段，收集整理问答的数据。比如把退款相关的问答对导入到问答集中。</p><p>补充说明一下，不是每个场景都需要同时添加上面的三种训练数据，具体场景具体选择即可。</p><p><img src="/img/2018/unit-3-6-5.jpeg" alt="image"></p><p>关于如何选择不同的方式：</p><p>如果你的场景是任务型，同时缺少对话样本。你就要先去配置对话模版，快速达到一定的效果后，再从日志中筛选出更多的对话样本。</p><p>如果一开始你就有大量真实的对话样本，这时你可以把对话模版和对话样本一起上，进而快速达到一个很好的效果。</p><p>如果你还有问答对话的时候，你只要添加问答对就可以了。</p><p><img src="/img/2018/unit-3-6-6.jpeg" alt="image"></p><p>训练/体验<br>将对话模版对话样板等配置好后，系统会自动训练生成模型，然后把模型放在沙盒中，就可以与自己定制的对话系统对话了。</p><p>UNIT背后的深度学习和对话管理技术会帮你快速训练bot的对话能力。</p><p>机器人是一个反复验证、发现问题、优化配置，补充对话样本的一个循环过程，反复优化，逐步升级，机器越来越聪明。</p><p><img src="/img/2018/unit-3-6-7.png" alt="image"></p><p>这里为大家展示训练和体验的过程。在UNIT上线后，机器人会用户每句话的动作和意图给识别出来，同时可以在这里继续编辑和查看JSON。</p><p>除此之外，还可以进行反问频率、Bot频率等的评级，并重制对话。</p><p>因为UNIT体验的工具做的非常完善，在这里建议大家将刚刚搭建的Bot在UNIT的后台先进行训练。</p><p><img src="/img/2018/unit-3-6-8.jpeg" alt="image"></p><p>应用调用<br>UNIT已经和百度的其它AI技术打通了，创建一个应用以后可以方便的调用百度AI的语音图像识别的所有能力。</p><p>这是本章的讲解，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MicroSoft Tech Summit-快速搭建一个聊天机器人</title>
      <link href="/presentation/2018-10-30-Microsoft-HOL.html"/>
      <url>/presentation/2018-10-30-Microsoft-HOL.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Author: <a href="https://github.com/lijiarui/" target="_blank" rel="noopener">李佳芮</a>，桔子互动创始人，微软AI MVP。</p></blockquote><p><img src="/img/2018/microsoft-hol-chatbot.jpeg" alt="logo"></p><p>这是我在<a href="https://mp.weixin.qq.com/s/Hm2tc_V4b3EKOlBx4PxEuA" target="_blank" rel="noopener">2018微软技术暨生态大会</a> 动手实验室的分享，2018微软技术暨生态大会10月24日在上海世博中心如约而至。 作为微软最负盛名的技术峰会，此次大会将带领参会者深入领略技术精髓，感受微软黑科技的魅力，探讨在云计算、物联网、移动互联网、大数据和人工智能的发展洪流中，如何洞察新技术与新变革，聚焦解决问题与创造价值，如何开启企业数字化转型之旅。</p><p>活动官网信息： <a href="https://www.mstechsummit.cn/speakersession/index" target="_blank" rel="noopener">https://www.mstechsummit.cn/speakersession/index</a></p><p>本次实验帮助开发者从实际业务场景出发，围绕微软Luis 和 Typescript 做实践课，让开发者轻松的做一个微信聊天机器人。另外，对于希望转变为人工智能的传统产品经理或传统工程师而言，可以帮助你快速了解行业背景并快速上手，对于技术决策者，可以在此阶段清楚地了解聊天机器人的局限性和发展。</p><h2 id="Luis-介绍"><a href="#Luis-介绍" class="headerlink" title="Luis 介绍"></a>Luis 介绍</h2><p>LUIS (Language Understanding Intelligent Service，<a href="https://www.luis.ai" target="_blank" rel="noopener">https://www.luis.ai</a>) 是微软发布的面向开发者的自然语言语义理解模块开发服务。LUIS的使命是<strong>让非NLP专业的开发者能够轻松地创建和维护高质量的自然语言理解模型，并无缝对接到相关的智能应用当中</strong>。<br>通过LUIS平台，非NLP专业的开发者可以轻松创建一个LUIS App，并通过标注所期望的输入(自然语言指令)和输出(意图和实体)来进一步“培养” 它。在整个开发过程中，开发者并不需要了解背后算法的细节，只需要清晰地定义自己需要让机器理解的用户意图和实体即可。LUIS App 可以是任何传统的应用，包括社交媒体应用，聊天机器人，实体机器人，车载以及支持语音的桌面程序应用。<br>LUIS的开发流程更像是一个教学过程：开发者是老师，LUIS App是学生。老师通过不停地告知学生正确的语义解析结果来完成教学。一个好的教学过程是一个“训练+实践”的闭环：标注一定量的起始数据；训练得到语义理解模型；对模型进行必要的测试；发布模型并应用到真实用户场景；甄选应用日志中的语句；继续标注并更新模型。这个过程周而复始，通过不停地迭代开发，不停地改善理解模型，使其越来越接近人类的理解能力。</p><p><img src="/img/2018/microsoft-hol-luis.png" alt="luis"></p><h2 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标"></a>实验目标</h2><ul><li>搭建一个LUIS 模型</li><li>使用wechaty 创建一个微信聊天机器人</li><li>将LUIS 模型整合进入微信机器人</li></ul><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul><li>Ubuntu 18</li><li>Microsoft Visual Studio Code (VSCode) </li><li>Node (version &gt; 10.0)</li><li>Github 账号</li><li>Luis 账号</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>安装Unbutun 18</li><li>安装 Node 和 Npm</li><li>安装Microsoft Visual Studio Code (VSCode)</li><li>安装Github</li><li>从Github 上clone 项目：<a href="https://github.com/lijiarui/microsoft-summit-chatbot-course" target="_blank" rel="noopener">https://github.com/lijiarui/microsoft-summit-chatbot-course</a></li></ol><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><ol><li>创建一个LUIS模型</li><li>创建一个微信机器人</li><li>将LUIS 模型整合到微信机器人中</li></ol><h2 id="实验1–创建一个LUIS模型"><a href="#实验1–创建一个LUIS模型" class="headerlink" title="实验1–创建一个LUIS模型"></a>实验1–创建一个LUIS模型</h2><p>创建一个LUIS 模型可以分为3个步骤: 创建APP，训练模型，发布模型。下面将会进行详细的讲解：</p><h3 id="任务1-创建APP"><a href="#任务1-创建APP" class="headerlink" title="任务1-创建APP"></a>任务1-创建APP</h3><p>1.登陆 <a href="http://www.luis.ai" target="_blank" rel="noopener">www.luis.ai</a>  如果之前注册过就sign in, 注册过直接login 就可以了：</p><p><img src="/img/2018/microsoft-hol-luis-1.png" alt="luis-1"></p><p>2.点击左上角的“Create New App” 创建一个新的应用</p><p><img src="/img/2018/microsoft-hol-luis-2.png" alt="luis-2"></p><p>3.在弹框中，给你的LUIS模型起个名字，并设置描述，然后选一个应用环境，我们选择中文。然后点击“Done”</p><p><img src="/img/2018/microsoft-hol-luis-3.png" alt="luis-3"></p><p>4.然后进去LUIS 模型的主页面，接下来去训练LUIS 模型。</p><p><img src="/img/2018/microsoft-hol-luis-4.png" alt="luis-4"></p><h3 id="任务2-增加意图和实体"><a href="#任务2-增加意图和实体" class="headerlink" title="任务2-增加意图和实体"></a>任务2-增加意图和实体</h3><p>接下来，我们为我们的APP增加两个意图，意图表示用户希望执行的任务。定义一组意图，对应于用户希望在APP中执行的操作。</p><p>1.点击‘Create new intent’ 创建一个 ‘BookFlight’ 的意图，并把这个意图命名为‘BookFlight’点击‘Done’</p><p><img src="/img/2018/microsoft-hol-luis-5.png" alt="luis-5"></p><p><img src="/img/2018/microsoft-hol-luis-6.png" alt="luis-6"></p><p><img src="/img/2018/microsoft-hol-luis-7.png" alt="luis-7"></p><p>2.输入一个可能的订票话术，比如“帮我订一张去上海的机票”，然后回车：</p><p><img src="/img/2018/microsoft-hol-luis-8.png" alt="luis-8"></p><p>3.推荐最少写5个类似的话术，你会发现这些话术会自动的被标注为BookFlight 的意图。</p><p><img src="/img/2018/microsoft-hol-luis-9.png" alt="luis-9"></p><p>4.回到点击‘Intent’再添加一个 ‘GetWeather’ 的意图，像刚刚一样，也至少输入5个有表示天气的话术：</p><p><img src="/img/2018/microsoft-hol-luis-10.png" alt="luis-10"><br><img src="/img/2018/microsoft-hol-luis-11.png" alt="luis-11"></p><h4 id="定义实体-entities"><a href="#定义实体-entities" class="headerlink" title="定义实体(entities)"></a>定义实体(entities)</h4><p>你可以创建各种类别的实体。实体代表话术中有用的词语或者短语，他们将是完成任务的关键要素。实体和与之相关的意图对于APP 的任务执行是非常重要的。在我们这个订机票的例子中，“位置”,“日期”，“航空公司”，“舱位”都是非常重要的实体。</p><p>实体有多种类型：</p><ul><li>Simple： 通过机器学习的方法识别出来，是最简单的实体</li><li>Hierarchical: 通过机器学习的方法识别出来，根据上下文关系得到的实体，比如Location，根据上下文知道是ToLocation还是FromLocation. 他们共享一个实体集合，但是根据上下文被分配到不同的实体中。</li><li>Composite: 通过机器学习的方法识别出来，有多个实体组成，比如3张去上海的机票，可以是PlaneTicketOrder 的实体，由number 和ToLocation 组成</li><li>List: 是通过文本匹配的方法识别出来的，是一组封闭的词语。LUIS 不会为List 自动生成更多的值</li><li>Regex: 通过正则表达式识别出来的实体</li><li>Pattern.any: 是一种长度可变的占位符，在模板中使用，用来标出实体的起始位置和结束位置。比如搜索书籍： 谁写了{BookTitle}[?]</li></ul><p>1.点击‘Create new entity’ 创建新的实体.</p><p>2.在弹框中将实体命名为‘Location’，选择实体类别为’Hierarchical’</p><p>3.选择实体类别后，会自动跳出’Child name’,点击‘Add a child entity’增加两个Child name, 分为为’ToLocation’和 ‘FromLocation’</p><p>4.最后，点击’Done’完成保存这个实体。</p><p><img src="/img/2018/microsoft-hol-luis-12.png" alt="luis-12"></p><h4 id="使用预定义实体-Pre-Build-Entities"><a href="#使用预定义实体-Pre-Build-Entities" class="headerlink" title="使用预定义实体(Pre-Build Entities)"></a>使用预定义实体(Pre-Build Entities)</h4><p>接下来，我们增加一个预定义的时间实体。 </p><p>1.点击‘Add prebuild Entity’</p><p><img src="/img/2018/microsoft-hol-luis-13.png" alt="luis-13"></p><p>2.预定义实体现在还不支持中文，我们可以选择’number’先来感受一下。</p><p><img src="/img/2018/microsoft-hol-luis-14.png" alt="luis-14"></p><h3 id="任务3-训练模型"><a href="#任务3-训练模型" class="headerlink" title="任务3-训练模型"></a>任务3-训练模型</h3><p>我们定义了意图和实体以后，需要进行模型的训练。点击右上角的’Train’。当按钮由红色变为绿色以后，训练成功。为了让模型越来越好用，需要添加更多的标注好的意图和实体。</p><p><img src="/img/2018/microsoft-hol-luis-15.png" alt="luis-15"></p><p>点击‘Publish’可以将这个App发布出去。最后就可以整合到微信机器人中。</p><h2 id="实验2–创建一个微信机器人"><a href="#实验2–创建一个微信机器人" class="headerlink" title="实验2–创建一个微信机器人"></a>实验2–创建一个微信机器人</h2><p>这一部分来展示如果快速搭建一个微信机器人</p><h3 id="任务1-运行代码"><a href="#任务1-运行代码" class="headerlink" title="任务1-运行代码"></a>任务1-运行代码</h3><p>1.输入命令git clone <a href="https://github.com/lijiarui/microsoft-summit-chatbot-course.git" target="_blank" rel="noopener">https://github.com/lijiarui/microsoft-summit-chatbot-course.git</a></p><p><img src="/img/2018/microsoft-hol-wechaty-1.png" alt="wechaty-1"></p><p>2.进入目录microsoft-summit-chatbot-course， cd microsoft-summit-chatbot-course</p><p>3.安装依赖包，运行npm install</p><p><img src="/img/2018/microsoft-hol-wechaty-2.png" alt="wechaty-2"></p><h3 id="任务2-运行代码"><a href="#任务2-运行代码" class="headerlink" title="任务2-运行代码"></a>任务2-运行代码</h3><p>1.运行 npm run start</p><p><img src="/img/2018/microsoft-hol-wechaty-3.png" alt="wechaty-3"></p><h2 id="实验3–将LUIS-模型整合到微信机器人中"><a href="#实验3–将LUIS-模型整合到微信机器人中" class="headerlink" title="实验3–将LUIS 模型整合到微信机器人中"></a>实验3–将LUIS 模型整合到微信机器人中</h2><h3 id="任务1-发布LUIS版本"><a href="#任务1-发布LUIS版本" class="headerlink" title="任务1-发布LUIS版本"></a>任务1-发布LUIS版本</h3><p>1.点击LUIS的Publish获取APPID和KEY</p><p><img src="/img/2018/microsoft-hol-integrate-1.png" alt="integrate-1"></p><p>2.发布成功后，可以看到绿色的成功提示，点击Refer to the list of endpoints切换到管理页面：</p><p><img src="/img/2018/microsoft-hol-integrate-2.png" alt="integrate-2"></p><p>3.获取Authoring Key:</p><p><img src="/img/2018/microsoft-hol-integrate-3.png" alt="integrate-3"></p><p>4.点击 Application Information, 获取APP ID</p><p><img src="/img/2018/microsoft-hol-integrate-4.png" alt="integrate-4"></p><h3 id="任务2-将LUIS-RESTFUL-API-接入wechaty"><a href="#任务2-将LUIS-RESTFUL-API-接入wechaty" class="headerlink" title="任务2-将LUIS RESTFUL API 接入wechaty"></a>任务2-将LUIS RESTFUL API 接入wechaty</h3><p>1.安装官方的’luis-sdk’,并将获取的key 和 Application ID 填入：</p><p><img src="/img/2018/microsoft-hol-wechaty-4.png" alt="wechaty-4"></p><p>2.根据已有的LUIS 配置写示例代码：</p><p><img src="/img/2018/microsoft-hol-wechaty-5.png" alt="wechaty-5"></p><p>3.运行 npm run start：</p><p><img src="/img/2018/microsoft-hol-wechaty-6.png" alt="wechaty-6"></p><p>用户发送，即可得到测试回复：</p><p><img src="/img/2018/microsoft-hol-demo.png" alt="demo"></p><p>注意：<br>由于时间关系，本次实验只是讲解了LUIS 的部分，LUIS获取的key 只是免费测试版本，后续需要和Azure 结合，获取到稳定的付费版本接口。</p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> LUIS </tag>
            
            <tag> MicroSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.5 抽取对话流程</title>
      <link href="/chatbot/2018-10-24-unit-3-5.html"/>
      <url>/chatbot/2018-10-24-unit-3-5.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来学习第三章的第五节，抽取对话流程。</p><p>如何抽取对话流程？简单来说就是进行流程图的绘制。</p><p><img src="/img/2018/unit-3-5-1.jpeg" alt="image"><br>首先，绘制基础业务流程图。</p><p>业务流程图描述的是完整的业务流程，以业务处理过程为中心，一般没有数据的概念。流程图以动作来推动业务进行，流程图更加关注的是业务实现具体要进行哪些操作，每一个动作构成的基本形式都是动词加名词，或者动词。例如支付界面，订票结果反馈，都是以动作为驱动的。</p><p>如下图左侧的流程图，可以看到这是一个订票业务的基本流程，从顶端订票开始；然后航班查询、乘客信息收集流程、支付界面、订票结果反馈、订票流程结束。其中每一个步骤，都可以将其进一步细化，右侧的图就是细化航班查询选择流程后的结果。补充了收集用户提供的查询信息、查找并展示查询结果、用户选择航班等过程。</p><p>左侧的流程图可以看出业务的基础脉络，具体的细节可以将左侧图的部分步骤拆解并细化。航班查询选择流程开始（长方形代表流程/步骤），然后机票查询信息收集流程（长方形和三角形的组合图形代表跨页引用），然后看是否有查询结果（菱形代表判定），如果有结果——展示查询结果，接着再跳到下一步——查询结果选择流程，然后航班查询选择流程结束。如果没有结果，对用户提示无结果，请求用户再提供其它槽值，如果提供，重复以上流程，如果没有提供，进入用户意图分析流程，即判定用户是不是有其它意图，而不是订机票。</p><p>其次，还需要绘制跨职能流程图，也叫泳道图，是流程图的进阶。</p><p>泳道图加入了泳道，表示不同的角色或岗位和部门等，在了解业务流程的时候，也清楚由谁执行该动作。</p><p><img src="/img/2018/unit-3-5-2.jpeg" alt="image"></p><p>如上图，每一个动作都放在相应的模块下，对应了执行此动作的人或系统。这样对于业务流程中的不同角色的职责，也会有更加明确的认知。</p><p>首先，用户这边发起了订票请求，查询条件。之后机器人桔小秘，获取查询条件，然后通过票务接口查询航班信息，每一步的操作都会反馈查询结果供用户选择。用户选择航班后，机器人再去收集乘客信息，到票务接口生成订单，之后到用户这里进行付款，然后再到票务接口生成航班信息，再到机器人展示已预定的航班信息，最后流程结束。</p><p>相比业务流程图，跨职能流程图对业务的描述更加清晰。并且可以在旁边补充流程描述，例如，如上的流程，描述为如下：</p><ol><li><p>用户发起订票请求并提供机票相关的查询信息，机器人收集查询信息后，检查必要查询条件是否充足。如航班号或出发或到达地点及日期；</p></li><li><p>必要查询条件不足则继续询问用户，若必要查询条件充足则向票务接口发起航班查询请求；</p></li><li><p>如果没有查询结果，机器人向用户反馈情况后，询问其它查询条件。如果有查询结果，机器人将结果展示给用户。”</p></li><li><p>用户选择航班以后机器人向用户收集乘客信息，并提供票务接口以生成订单。</p></li><li><p>用户付款后，机器人向用户展示最终的结果。</p></li></ol><p>右侧的流程描述，把中间的每一个细节描述的很清楚，再加上左侧清晰的跨职能流程图，即使整个流程相对比较复杂，在给不同部门讲述时，也能够一目了然。</p><p>最后，进行业务线合并汇总。</p><p>例如，即使只是商旅这样相对比较封闭的场景，它依然会有很多业务线。可能有机票、酒店、火车票、订美食、订餐或者订车等等。需要把合并这些业务并梳理相关的意图、词槽和对话样本集，通过如下的树状图能够清晰明了的把业务流程梳理出来。</p><p><img src="/img/2018/unit-3-5-3.jpeg" alt="image"></p><p>在此，给读者介绍两个工具，可以更好的去画流程图，这两个工具都是在线的，可以进行实时协作。</p><p><img src="/img/2018/unit-3-5-4.jpeg" alt="image"></p><p>一个是ProcessOn，支持流程图、思维导图、原型图、网络拓补图等。</p><p>另一个是百度脑图，可以很快的把脑图画出来，非常的清晰。并且不需要在自己的电脑上安装任何的软件，只要在浏览器上就可以完成。</p><p>以上就是这节课的内容，我们下次再见，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.4 撰写故事线</title>
      <link href="/chatbot/2018-10-17-unit-3-4.html"/>
      <url>/chatbot/2018-10-17-unit-3-4.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来学习第三章的第四节，撰写故事线。</p><p>如何撰写故事线？</p><p>建议大家不要先画流程图。把流程图和故事线糅合在一起，会让整个设计变得非常复杂；并且，完全没有多种对话存在的可能性。</p><p><img src="/img/2018/unit-3-4-1.jpeg" alt="image"></p><p>不要先画流程图<br>上图左侧就是一个非常差的例子。设计一开始，机器人说：“我是桔小秘，我可以帮你订机票，请说出你的诉求”；然后拍脑子的去想用户“没听懂”时怎么画，或者用户提供信息后，答复用户“好的，这就帮你去订票”，这种情况下是非常杂乱无章的。这个例子很典型，将故事线和流程图糅合在一起，这样导致话术很难考虑全面，并且非常的刻板。</p><p>因此，我们建议读者，千万不要用刻板的逻辑，将机器与用户场景台词串在一起。机器与人的对话存在多种可能，不要只考虑核心的场景，要尽可能的列举出更多的场景和意外情况去草拟对话草稿，再梳理总的逻辑。</p><p>如上是一个错误的示例，那么，如何去正确的撰写故事线呢？</p><p><img src="/img/2018/unit-3-4-2.jpeg" alt="image"></p><p>任务型故事线<br>首先，针对任务型故事线，如图示例，这是一个愉悦路线，意思就是类似于台词的脚本一样先把这个故事线写出来。机器人说什么样的话，用户说什么样的话，以此类推，直到最后机器人说：“检测到您已支付成功，张晓明从什么时候到什么时候，订一个什么样的机票”。这样，才是一个完整的故事线。</p><p>具体的操作步骤如下：</p><p>第一，先撰写一个完成的任务的完整对话，就一个非常简单的，从开始到结束，中间没有任何分支的对话，将其称之为愉悦路径。</p><p>第二，当完成了愉悦路径以后，考虑其它可以完成任务的对话路径。这些路径能够让用户完成和愉悦路径同样的任务。但是中间有一些不正常的小插曲，比如用户并没有表达出所有的信息，需要Bot去引导。</p><p>第三，修复和调整整个的对话场景。比如，当系统不能理解用户的请求的时候，应该如何应答。举个例子，当用户说：“我去魔都”，机器不理解什么叫魔都的时候，机器如何应答。</p><p>第四，需要考虑当用户中途退出以及用户完成任务后，对话结束的场景。</p><p>第五，需要考虑对用户的问候，以及引出后面对话的操作方式。</p><p>第六，交互不只有对话交互，可以同时使用对话交互和视觉交互。比如一些比较复杂的东西，用户可能用视觉一眼就看的出来，直接去点击去选择，也未尝不是一种更好的选择方式，我们也可以将其放入我们的交互系统中。</p><p>第七，任务型的故事先要注意：所有的地方尽可能用口语化表达，大声的朗读检验对话的自然度，以及思考如何能让对话更加适合你定义的用户画像特征。</p><p>如上，是一个任务型故事线的教程。</p><p><img src="/img/2018/unit-3-4-3.jpeg" alt="image"></p><p>问答型故事线<br>其次，针对问答型故事线，需要尽可能多的列出所有的问答对。如图示例，这个是和火车票相关的，可以先列出来问答对有哪些类型，可能有儿童票的、学生票的、行李托运的、退票的、团体票的、改签的等等，把它们尽可能多的列出来，这是问答型的故事线的设计方法。</p><p><img src="/img/2018/unit-3-4-4.jpeg" alt="image"><br>考虑真实场景<br>最后，要提醒大家一点，所有的这些故事线，一定要考虑真实场景。</p><p>上图左侧是任务型的，需要收集真实场景下用户买票的问法，越多越好。同理，问答型要收集真实场景下，每个知识分类下的问答对，一定不要只是干想。</p><p>比如说，有些人设计故事线的时候，故意做一个非常复杂的故事线。“帮我订一个下个月初二上午08点到10点的机票”，这样显然不是真实场景下大家会交互的对话方式，所以大家也不要为了写故事线而写故事线，尽可能想到一些真实流畅的语句。</p><p>以上，就是这节课的内容，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写代码让我快速进入解决问题的“心流”</title>
      <link href="/thought/2018-10-15-36kr-code-startup.html"/>
      <url>/thought/2018-10-15-36kr-code-startup.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>10.24是属于程序员们的节日，在这个重要的时间节点，36氪邀请了5位经历丰满的技术创业者，回答了一些关于创业的问题，原汁原味地呈现出来，希望给有创业想法的职场人尤其是程序员们提供一些有价值的观点和内容，欢迎在文末评论区留言交流。原文链接：<a href="https://36kr.com/p/5157138.html" target="_blank" rel="noopener">https://36kr.com/p/5157138.html</a></p></blockquote><h3 id="你为什么要创业？"><a href="#你为什么要创业？" class="headerlink" title="你为什么要创业？"></a>你为什么要创业？</h3><p>我的创业非常偶然，最开始只是上学的时候赚外快，接外包，积累项目经验，找到一个好的工作。后来同样为了找到好工作的目标参加了创业比赛。因为接项目接的多了，也做了一些产品，索性就把项目产品改了改，提交了作品。</p><p>参加2014年的腾讯创业比赛，彻底改变了我的职业轨道。</p><p>现在回过头来看，也许是因为2014年在大众创新，万众创业的氛围下，全国创业氛围都过于浮躁，我们做了很多项目有了一些产品的积累，所以在所有参赛的项目中，虽然并没有花心思准备太多，因为产品有人用，就很容易脱颖而出，获得了奖，还拿到了现场的投资特别奖。</p><p>拿到奖以后，我也没想太多，结果就有人找过来说聊聊，想给大投资，然后我问了我的发小，当时还在腾讯的，我后来的合伙人，我该怎么办。他说那我带你见个投资人，结果我人生第一次见投资人，第一次认证讲BP，就融来了500万。</p><p>于是我休学，他辞职，还有两个朋友，就创立了我的第一家公司。</p><p>事实证明，几个毛头孩子可以幸运一次，但不能一直幸运，公司很快就做死了，所以我复学，毕业，上班。</p><p>但是这段创业的经历却在我心里埋下了一粒小小的种子。在安稳的工作日子里，我开始追求挑战，我希望解决更大的问题，喜欢在动荡中建立秩序，而不是既有的秩序中维持稳定。我向往的是一切被理顺的成就感，加上我正好看到了聊天机器人的机会，所以希望能够尝试一下，起码可以深度的学习一下这个行业，那个时候做聊天机器人的公司并不多，也没有我想做的公司，我本身是技术出身，从0到1进入这个行业并不困难，所以我抱着gap 一阵了解这个行业的想法就辞职了，打算自己先搞一阵，就这样开启了我的二次创业。</p><h3 id="你是如何确定现在的行业和项目的？"><a href="#你是如何确定现在的行业和项目的？" class="headerlink" title="你是如何确定现在的行业和项目的？"></a>你是如何确定现在的行业和项目的？</h3><p>一方面，我发现对话交互正在逐渐变成一个一种新的交互方式，我非常坚信这是未来，并发现了比如小冰等有意思的对话机器人，小冰上了以后很快被封杀，后来都逐渐变了形态。</p><p>另外一方面，我从2013年接项目以来，一直围绕微信生态，看到了公众号从初始到鼎盛再到略微衰落的过程，我做过一些微信上的流量生意，我认为在微信上做对话机器人，可以解决重度微信用户的痛点。</p><p>所以我选择了这个行业。</p><h3 id="你是如何组建你的创业团队的？"><a href="#你是如何组建你的创业团队的？" class="headerlink" title="你是如何组建你的创业团队的？"></a>你是如何组建你的创业团队的？</h3><p>我的合伙人是我的大学同学，我们在上大学的时候，就一起做学生社团和学生会，后来他出国了以后远程和我一起做了舞蹈自媒体，回国工作一段时间后，选择和我一起做了现在的项目。另外一些人是在创业的过程中认识的，我在github 上做了最大的微信聊天机器人社群，通过开源项目认识了很多开发者，大家在github上逐渐转战到微信，再转战到线下，逐渐就会一起做一些事情。</p><h3 id="技术人创业，是否有特别的优势？"><a href="#技术人创业，是否有特别的优势？" class="headerlink" title="技术人创业，是否有特别的优势？"></a>技术人创业，是否有特别的优势？</h3><p>技术人更懂得技术的边界，这是优势也是劣势。因为了解技术的边界，会把产品从更加可行可靠的角度去做。劣势是边界会限制你的想象力。但是总体来说，感谢我是技术人，因为人工智能行业是一个产品和技术驱动的行业，作为技术人，我会利用github 降低成本，并找到各种解决方案和这个领域的同行。</p><p>另外，技术是一种思维模式，是一种有逻辑的解决问题的方法。这种方法除了能帮我解决程序中的bug 之外，还能让我沉着稳定的去解决创业中的棘手问题。而且对我而言，写代码很容易进入心流状态，当我在创业里进入混乱慌张状态的时候，我就会尝试借助写代码的这种快速进入状态的方法来稳定自己，进入解决问题的心流中。</p><h3 id="技术人创业，是否有明显的劣势？你是如何克服的？"><a href="#技术人创业，是否有明显的劣势？你是如何克服的？" class="headerlink" title="技术人创业，是否有明显的劣势？你是如何克服的？"></a>技术人创业，是否有明显的劣势？你是如何克服的？</h3><p>像我上面说的，技术人创业，会限制了很多产品的想象力，我记得和一个运营很强的朋友聊过后，他不停的批评我说工程师出身的人太实在，要学会虚实结合，另外，要知道什么时候不要被既有的认知束缚，要拓宽多个维度的思考。</p><p>另外，当技术人有明显的技术思维的时候，很容易会说话非常技术范，换句话说，就是不说人话。技术人总会以为对方已经有了很多知识，然后基于对方有了所有常识之后说，非常不考虑听众的感受，这个非常不利于产品的推广。初此之外，这个可能是我自己的弱点：当我连续赶工沉浸在代码里的时候，我的表达力会非常差，通常得用2-3天才能恢复到一个“创业大忽悠”的口才状态。</p><p>还有一个很大的问题，就是技术人总愿意先把问题彻底解决了再出来见人，其实这样会错过一些市场机会，比如我的融资节奏掌握的就非常不好。在我自己没有底气的时候，我会很害怕出去聊去见人。</p><p>其实克服这些劣势并不困难，困难的是你发现自己有这些问题，这些问题最开始我根本意识不到。当意识到了以后，每次做事情的时候多想一想，有的时候上台或者见人，我还会私底下偷偷彩排，逐渐就好很多了。</p><h3 id="你一天的工作节奏是怎样的？压力大吗？"><a href="#你一天的工作节奏是怎样的？压力大吗？" class="headerlink" title="你一天的工作节奏是怎样的？压力大吗？"></a>你一天的工作节奏是怎样的？压力大吗？</h3><p>我是一个非常不健康的工作状态，熬夜到凌晨2-3点是家常便饭，有的时候事情非常赶的时候，会通宵到第二天早上7点，甚至10点。日子经常是连轴转的。所以我的办公室一直放着卸妆乳，洗面奶，面膜和护肤品。</p><h3 id="工作之外有哪些兴趣爱好？能分配多少时间？"><a href="#工作之外有哪些兴趣爱好？能分配多少时间？" class="headerlink" title="工作之外有哪些兴趣爱好？能分配多少时间？"></a>工作之外有哪些兴趣爱好？能分配多少时间？</h3><p>跳舞，瑜伽，马拉松，攀岩，打拳，健身，写作。创业以后分配的时间越来越少了，不过因为我的生活非常不健康，所以我会强迫自己每周至少运动2-3次，保证工作的时候有更充沛的精力。</p><h3 id="创业过程中，你遇到的最灰暗的时刻和事件？"><a href="#创业过程中，你遇到的最灰暗的时刻和事件？" class="headerlink" title="创业过程中，你遇到的最灰暗的时刻和事件？"></a>创业过程中，你遇到的最灰暗的时刻和事件？</h3><p>其实我觉得，创业里大部分时间都是最灰暗的时刻。。。因为太多了，所以反而没有“最”了。每一次搞不定事情的时候，我都会陷入自己的”崩溃时刻”，而且我”崩溃时刻“蛮多的，但是崩溃不要紧，崩溃以后我还能把事情做完。</p><h3 id="创业过程中，你遇到的最高兴的时刻和事件？"><a href="#创业过程中，你遇到的最高兴的时刻和事件？" class="headerlink" title="创业过程中，你遇到的最高兴的时刻和事件？"></a>创业过程中，你遇到的最高兴的时刻和事件？</h3><p>最高兴的时候，就是”崩溃时刻“结束后的时候。因为每次结束，都是代表着一个问题找到了解决方案。</p><h3 id="创业带给了你什么？"><a href="#创业带给了你什么？" class="headerlink" title="创业带给了你什么？"></a>创业带给了你什么？</h3><p>接受力：越来越可以包容很多人和事。</p><p>不再患得患失：反正最后所有的事情都要失去，只要再过程中尽力就好了。</p><p>敬畏：敬畏对手，敬畏产品，敬畏合作伙伴。</p><p>你对创业成功的定义是什么？距离这个目标还有多远？<br>创造用户需要的价值。可能我才走到5%吧</p><h3 id="你的偶像是谁？"><a href="#你的偶像是谁？" class="headerlink" title="你的偶像是谁？"></a>你的偶像是谁？</h3><p>王潇 </p><p>“做一个坦诚和率真的人，也做一个坦诚和率真的公司，相信微小积累，持续改变和时间的力量，因为，时间看得见。”</p><h3 id="给未来有创业计划的程序员一点建议吧"><a href="#给未来有创业计划的程序员一点建议吧" class="headerlink" title="给未来有创业计划的程序员一点建议吧~"></a>给未来有创业计划的程序员一点建议吧~</h3><p>先确定你自己是不是一个风险偏好者，你是不是喜欢不确定的生活，是不是喜欢每天一睁眼看到的都是需要解决的问题，确认这种不确定性带给你的激动和开心大于痛苦。</p><p>如果是，找到你想做的东西，然后不停试错，记住不要把自己“做“死，然后一直保持”活着“，就算不会创业大成功，也会有一段非常美妙的旅程。</p><p>最后，创业是一个成功概率极低极低的事情，千万别指望着用创业发财。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 程序媛 </tag>
            
            <tag> 梦想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.3 梳理业务要素和知识库</title>
      <link href="/chatbot/2018-10-10-unit-3-3.html"/>
      <url>/chatbot/2018-10-10-unit-3-3.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来学习第三章的第三节，<strong>梳理业务要素和知识库。</strong></p><p><img src="/img/2018/unit-3-3-1.jpeg" alt="image"></p><p><strong>首先，确定优先级和关键信息要素。</strong></p><p>以订票为例，它的第一优先级是订票、退票、改签和查询，其次是各种规章制度等常见问题的解答，第三是天气查询，最后是简答的问候和答谢。</p><p>基于以上提到的要点，先列出订票相关的要素，有出发时间、出发站点、到达站点、火车类型、车次、以及座位信息；除此之外还有个人信息，包括姓名、手机号、身份证号、性别、会员等等；账户信息包括订单，订单的状态，代付款、未出行、账户余额、优惠券和积分；票务的状态，如拍下待支付、拍下未支付等等。需要尽可能多而全的列出所有的关键信息。</p><p><img src="/img/2018/unit-3-3-2.jpeg" alt="image"></p><p><strong>其次，多维度展示状态元素的信息。</strong></p><p>例如，出发可以列出时间、地点、天气；到达同样有时间、地点、天气等等。</p><p>因为机器人的对话实际上就是状态到状态之间转换的有向图。只有把所有的信息列的尽可能全，后续整个的训练流程，包括流程图的绘制，才会更加的顺畅，才能避免信息丢失。</p><p><img src="/img/2018/unit-3-3-3.jpeg" alt="image"></p><p><strong>最后，机器人任务要素梳理，即定义变量。</strong></p><p>以订机票为例，它的领域是订机票，意图是查询飞机票，属性（或称词槽）包括字段名称、字段类型、取值示例和字段说明。比如说time字段，类型是DATETIME，取值可以有明天、后天等等，字段说明是时间；再比如from_geo字段，类型是GEO-INFO（即地理位置），取值可以是北京，字段说明是出发地；再包括from_airport出发机场字段等等，这些都是基础变量信息。</p><p>建议读者在实操时，先列出所有的状态表，再依据状态表，依据这些状态元素去完成如上图的任务要素梳理表。定义好每个字段信息、类型、示例和说明。是一个必不可少的准备工作。</p><p><img src="/img/2018/unit-3-3-4.jpeg" alt="image"></p><p>还需要说明一点，机器任务要素梳理时，即定义变量时如何处理一些更复杂的例子。</p><p>例如，早晨、早上、清晨，如何进行参数化的定义。也就是说，当用户说早上时，代表着什么样的数值，这是一个很难直接回答的问题，不同的情况也不一样，所以可以有多种方式。</p><p>比如，可以把它定义成一个时间段，从6点到8点；或者定义早上就是7点；上午定义成8点到12点；再或者把上午定义成一个折中的10点。</p><p>同理，中午可以定义成11点到13点；或者定义成12点等等。</p><p>因此，在差旅场景中，如果用户说要订一张机票：“帮我订一张早上去北京的”。具体落地时，<strong><em>早上</em></strong>参数化的表示，在具体场景是不一样的。在此例当中，根据如上的表格，可以将变量<strong><em>早上</em></strong>定义为6到8点。</p><p>如上，是一个相对更加复杂的变量定义的方法，希望读者能够把这些方法，灵活运用到聊天机器人梳理任务要素的环节当中。</p><p>这就是这一节讲的内容，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.2 确定场景边界</title>
      <link href="/chatbot/2018-10-3-unit-3-2.html"/>
      <url>/chatbot/2018-10-3-unit-3-2.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第三章的第二节，<strong>确定场景边界</strong>。</p><p><img src="/img/2018/unit-3-2-1.jpeg" alt="image"></p><p>如何确定场景边界？</p><p><strong>第一步，创建机器人的定位</strong>。机器人的形象就像一本书或者影视片中的一个角色一样，需要给它定义一个形象，换句话说是一个定位。比如机器人是严肃的、认真的，还是非常有爱心的、活泼的等。</p><p>不同的定位和公司的品牌理念、公司形象、产品特征是息息相关的。只有将机器人的定位明确，才能在机器人的话术设计中，知道以什么样的口气/口吻去和用户交流，比如是快速的还是缓慢的，轻快的还是严肃的等等。甚至，需要细化到“你”和“您”的使用，什么情况下要用到“您”，什么情况下用到“你”。同时，也希望读者注意一点——<strong>机器人的定位越鲜明，用户就会越极端。</strong>因此，对于机器人的定位，需要找到一个微妙的平衡。</p><p><img src="/img/2018/unit-3-2-2.jpeg" alt="image"></p><p><strong>第二步，明确机器人的产品场景</strong>。分为三点：</p><ol><li><p>明确产品的目标人群，任何一款产品都有一个基本的前提——即产品是为什么样的用户群准备的。比如懂球帝就是为了球迷准备的，如果在懂球帝上做一个关于现金贷的对话管理，显然，是非常奇怪的；</p></li><li><p>确定这个产品给目标人群提供哪些服务与产品。比如，携程提供在线票务购买服务；懂球帝提供最新的足球资讯，当然，也可以购买足球装备。但懂球帝都是围绕着足球领域，而携程都是围绕着票务领域，这个需要明确；</p></li><li><p>要了解目标用户是什么类型的人，产品能解决目标用户的什么痛点，以此来确定机器人的产品逻辑；</p></li></ol><p><img src="/img/2018/unit-3-2-3.jpeg" alt="image"></p><ul><li><strong>应该做 &amp; 不应该做</strong></li></ul><p>举例来说，一个进行火车票预定的，或者差旅预定的聊天机器人应该做什么？</p><ul><li><p>订票、改签、查询业务——任务型；</p></li><li><p>火车票业务中的常见问题解答——问答型；</p></li><li><p>接入简单的问候/答谢作为过场；</p></li><li><p>跟出行相关的查天气；</p></li></ul><p>以上是应该做的。</p><p>那不应该做什么？一个做火车票预定的聊天机器人，不应该闲聊。</p><p><img src="/img/2018/unit-3-2-4.jpeg" alt="image"></p><ul><li><strong>回顾：chatbot 分类</strong></li></ul><p>回顾之前介绍过的，任务型、问答型和闲聊型的定义：</p><ul><li><p>任务型：有任务目标，把需求参数化；</p></li><li><p>问答型：有任务目标，但不需要把需求参数化；</p></li></ul><blockquote><p>比如：退票手续费的相关规则和规章制度等等。</p></blockquote><ul><li>闲聊型：没有任务目标；</li></ul><blockquote><p>比如：今天太热了。</p></blockquote><p><img src="/img/2018/unit-3-2-5.jpeg" alt="image"></p><p><strong>第三步，进一步确定边界，确认目标</strong>。</p><p>依旧以差旅场景中的机器人为例。</p><p>差旅公司会有很多的业务线，不同的业务线也有不同的层级，如何根据用户的需求，把所有的业务都梳理出来，是非常重要的。因此，场景边界是需要在画流程图之前确定的。</p><p>一个差旅的聊天机器人的领域分为火车、飞机票、车票、酒店、打车、美食等等；意图分为购票、改签、退票；词槽又分为时间（针对飞机票的）、出发地、到达地等等；</p><p>因此，差旅业务线的梳理如下：</p><p>1. 能够预定机票、预定酒店、查询美食、叫车、查询个人信息，并对常见问题进行解答。</p><p>2. 可以接入简单的问候作为过场。</p><p>3. 不接入纯闲聊。</p><p>如上，是一个确定边界，明确目标的例子。</p><p>这节课就先讲到这里，谢谢大家。</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 3.1 为什么要定义对话系统</title>
      <link href="/chatbot/2018-9-27-unit-3-1.html"/>
      <url>/chatbot/2018-9-27-unit-3-1.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第三章的第一节，<strong>为什么要定义对话系统</strong>。</p><p><img src="/img/2018/unit-3-1-1.jpeg" alt="image"></p><ul><li><strong>定义对话系统的重要性</strong></li></ul><p>首先，要有一个清晰的目标，这个就好像游戏中要有明确的规定，什么是输、什么是赢。延伸到人工智能在商业领域的应用，即要有明确的目标。</p><p>同时，在对话系统中，要对所有遇到的问题有一个清晰的理解和定义，就好像下棋一样，要在有限的领域内完成特定的行为操作。</p><p>我们具体来说，如何定义对话系统。</p><p><img src="/img/2018/unit-3-1-3.jpeg" alt="image"></p><ul><li><strong>定义对话系统的方法</strong></li></ul><p>定义对话系统，有如下的方法论：</p><p><strong>首先，找出系统有什么，定义要创建系统的哪些部分。</strong></p><p><strong>第二步，要通过确定用户和用例来确定边界。</strong></p><p><strong>第三步，确定目标用户，谁在使用这个系统</strong>。例如，我们要搭建一个差旅的聊天机器人，到底是C端的用户在用这个聊天系统，还是企业的用户在出差的时候再使用。这决定了这个系统要和哪些其它外部系统做对接，谁从这个系统获取信息，系统为谁提供信息等一系列的问题。提问的方式最好针对用户的目标。</p><p><strong>第四个，确定用户用例</strong>。用例是在传统的计算机领域里面经常遇到的一个词，它是系统执行的一系列活动，用户执行它会产生一种可量化的结果。可量化<strong>是指用例执行后的结果，有持久性、稳定性的数据进行评价</strong>。确定用户的用例，包括用户希望系统什么样，提供什么样的功能。比如是订机票还是订酒店的机器人，还是什么都能做的机器人。</p><p><strong>第五步，确定系统用例</strong>，系统是否需要把自身的状态变化通知用户。比如：“请稍等，我正在为你查询或正在为你订票”，以及是否需要在对话中调用系统的外部资源。总结一下：<strong>系统必须知道哪些外部的事件和怎样通知用户这些事件</strong>。</p><p><strong>第六步，是言简意赅的描述用户和用例</strong>。</p><p><strong>第七步，是发现新需求和问一些问题：</strong></p><ul><li><p>这些需求是不是必须的？</p></li><li><p>是系统逻辑上必须完成的吗？</p></li><li><p>是不是会影响到风险分析？</p></li><li><p>需求是否能被现在的执行者处理？</p></li><li><p>是用户希望的系统能做的吗？</p></li><li><p>会使产品在市场上变得与众不同吗？</p></li></ul><p>这些问题在做传统产品的时候也会用到，这在某种程度上和定义对话系统是一样的。</p><p><strong>最后，系统边界确定之后，需要进一步确定项目范围，然后划分优先级</strong>。要知道搭建一个好用的差旅助手可能从第一步订机票开始，下一步再能订酒店，再下一步能订火车票，再下一步又能去问美食，从简单的功能逐渐增加完善整个系统的。</p><p><img src="/img/2018/unit-3-1-3.jpeg" alt="image"></p><ul><li><strong>定义对话系统的内容</strong></li></ul><p>最后给大家梳理一下，之前给大家简单讲了定义对话系统的内容有哪些部分，那在接下来的小章节中，我会针对每一部分详细的给大家进行讲解。</p><p><strong>1. 确定场景边界</strong>，下一节我们将会介绍。</p><p><strong>2. 梳理业务要素和知识库</strong>，是和对话系统需要的相关内容。</p><p><strong>3. 撰写故事线</strong>，会在之后的小节里详细的介绍如何去写故事线，如何去写愉悦路线。</p><p><strong>4. 如何去抽取对话流程</strong>。</p><p>以上是整个定义对话系统的内容。</p><p>这一篇作为这一大章的开篇，给大家简单的讲了一下定义对话系统，接下来针对每一章我们再详细的进行讲解。</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.6 UNIT专业术语科普</title>
      <link href="/chatbot/2018-9-20-unit-2-6.html"/>
      <url>/chatbot/2018-9-20-unit-2-6.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家跟我学习第二章的第六节，UNIT的专业术语科普。</p><p>这一节我会介绍所有和UNIT相关的专业术语，方便接下的UNIT实操课程。</p><p>第一个：BOT和技能。</p><p><img src="/img/2018/unit-2-6-1.jpeg" alt="image"></p><ul><li><strong>BOT &amp; 技能</strong></li></ul><p>一个Bot对应的是在一个特定的场景下独立完成的对话系统。用来满足特定场景下的对话理解与交互需求，通常按行业垂直划分。</p><blockquote><p>例如：银行信用卡办理的Bot，电视遥控的Bot。</p></blockquote><p>Bot在这里和我们手机里App是类似的。</p><blockquote><p>例如：一个银行卡办理的Bot，一个电视遥控的Bot，甚至说一个差旅的Bot。它就是在一个特定场景下独立完成的对话系统。</p></blockquote><p>技能是某一个方向的对话能力，分为两个：一个是自定义技能；一个是系统的技能。<strong>自定义的技能完全由用户配置，系统技能由UNIT平台预置</strong>。但是开发者可以在后期进行干预，技能同时包含了对话意图和问答意图.Bot拥有的技能，既可以用于用户对话的对话意图，也可以实现简单的FAQ问答。</p><p><img src="/img/2018/unit-2-6-2.jpeg" alt="image"></p><ul><li><strong>意图 &amp; 词槽</strong></li></ul><p>意图的意思是在一个对话任务中，Bot要理解用户的目的。</p><blockquote><p>例如：用户说帮我换到中央台，对应的就是电视控制Bot技能下的对话的意图就是换台；</p></blockquote><blockquote><p>例如：我说北京天气，这个对应的意图就是查天气，它是代表着一种下一步其实要做的一种操作的方向；</p></blockquote><p>定义Bot技能下的对话意图时，需要设置对话意图关联的词槽。关联的词槽是实现对话意图的必须条件，以及Bot理解对话意图后给Bot用户的一个回应。 </p><p>用户意图分为<strong>对话意图和问答意图</strong>，问答意图主要用来圈定某一个范围内的主题问答对，这就是意图。意图很多时候可以理解成一个方法，是一个开始，然后把它做成一个分类，通过知道了他的意图是什么，然后下一步，我们就知道你这句话的意思。</p><p><strong>简单的说意思是什么，然后接着去引导用户给出更多的信息。</strong></p><p>词槽是满足用户对话意图时的关键信息或限定条件。可以理解为，用户需要提供的筛选条件。简单的来说，就是为了完成这件事所需要的关键信息。</p><blockquote><p>例如：在查询天气的时候，词槽就是地点和时间；</p></blockquote><blockquote><p>例如：说换到中央台的时候，中央台就是一个电视台的词槽；</p></blockquote><p><strong>词槽会一定程度上影响系统对换台这个对话意图的执行</strong>，这个是意图和词槽的定义，这两块非常关键。</p><p>在整个UNIT系统中，我们进一步的来把它理解下。</p><p><img src="/img/2018/unit-2-6-3.jpeg" alt="image"></p><ul><li><strong>将一句话理解为意图和词槽</strong> </li></ul><p>比如：用户说今晚6点帮我在全聚德预定一个房间。意图是预订餐厅，词槽就是关键的信息，餐厅名是全聚德，时间是2017年7月5日18点。</p><p><img src="/img/2018/unit-2-6-4.jpeg" alt="image"></p><p>进一步我们会发现，我们需要知道有多少人，才能决定订多少人的包厢。</p><p>所以机器人会说：“好的，多少人？”。那么用户进一步回答：“10个人”。这个意图是澄清人数词槽，那这个词槽是人数，是10。</p><p><img src="/img/2018/unit-2-6-5.jpeg" alt="image"></p><p>进一步的用户说：“多谢”。这个意图是<strong>表达感谢</strong>，词槽是<strong>空</strong>。</p><p>我们要注意一下，词槽为空是一个比较正常的现象，不要说发现词槽为空硬要往里面去填，这个是没有意义的行为。</p><p><img src="/img/2018/unit-2-6-6.jpeg" alt="image"></p><ul><li><strong>词典</strong>  </li></ul><p>下一个比较关键的定义叫词典。词典是<strong>属于词槽的所有词汇的集合</strong>，这个读起来比较拗口。我们拿两个例子做个解释。</p><p>比如餐厅的词槽，刚才我们看到了是全聚德，那词典就是所有的餐厅名，全聚德、海底捞、便宜坊、肯德基等等。这样大家就能理解了，词槽是：全聚德，它是一个餐厅名。词典则是所有的餐厅名。</p><p>再比如说晴天，词槽是晴天，词典是所有天气的词槽，晴天、阴天、下雨、大雨等。我们看到图片上有一个“#”，这代表的是它的同义词，肯德基和KFC是同义词，晴朗、晴和晴天是同义词，有雨、下雨是同义词，阴和阴天是同义词。</p><p>我们在这些同义词上也要尽可能多的标注出来，才能让机器人更加聪明，才能够识别不同的词语。</p><p>下面这对比较重要的概念是对话样本和对话模版。</p><p><img src="/img/2018/unit-2-6-7.jpeg" alt="image"></p><ul><li><strong>对话样本 &amp; 对话模版</strong></li></ul><p>对话样本：是用来给对话系统做示范，教它在用户说的具体句子里面<strong>如何理解对话意图，哪个词是重要信息，对应的词槽是什么</strong>。</p><p>比如通过对话样本标注告诉机器人，三亚明天会不会下雨和三亚明天会下雨吗，都是告诉它这是询问天气的语句。其中三亚是对应城市city这个词槽，明日和明天都是time这个词槽。</p><p>我们训练的越多，机器人的理解能力就越强。这个和我们在现实生活中小孩子的学习是非常相似的。听的越多、读的越多，他就越聪明，这就是对话样本。</p><p>对话模版是用来给对话系统按照具体的语法句式做出的示范，教它在某一个特定的语法句式中如何理解对话意图。哪个词是重要的信息，对应的词槽和特征值是什么。</p><p>我们从话术里面就可以感觉到，对话模版它是一个模版，换句话说我们要给它定义好的一个模版，然后告诉它这句话里边哪一部分代表着什么。</p><p>我们看一下<strong>对话样本 &amp; 对话模版</strong>中<strong>对话模版</strong>的例子，前面这一块的例子看起来很生涩，有一个“system location，system time天气如何”，这个其实可以把它做成一个“城市+时间+天气如何”这样一个询问天气的对话意图。</p><p><strong>比如北京的天气如何？北京今天的天气如何？</strong></p><p>这里边我们就会发现，北京或者天津就是这个“system location”，它代表的是所有城市词的组合，“system time”代表的今天&amp;明天，是所有时间描述组成的组合。</p><p>对话模版也可以使用读条对话模版组成一个对话模版组，实现按片段去匹配用户的query，实现更强的对话意图，泛化匹配的能力，提高模版对用户的query的召回率。</p><p>通常情况下，当我们的对话样本比较少的时候，我们会先用一些对话模版上线。这时候，先让机器人通过对话模版去回答用户的问题，进而再大量的收集用户的信息，收集更多的对话样本，再反过头来让机器变得更加聪明。</p><p>下一个比较重要的概念叫<strong>特征词</strong>。</p><p><img src="/img/2018/unit-2-6-8.jpeg" alt="image"></p><ul><li><strong>特征词</strong> </li></ul><p>通常情况下特征词代表了一种<strong>约束某条对话模版匹配的范围</strong>。比如<strong>天气、下雨、热</strong>等类别的关键词，它是一种特征词或者提供一定限度的泛化能力。</p><p>在订机票的对话中，从北京到上海的“到”就可以和“去、飞”等助词，一起作为特征词。我们如果活用特征词，就可以事半功倍并提高对话模版的精度和覆盖度，最终得到一个很好的效果。</p><p>再进一步给大家解释一下，什么叫做特征词词典。它和词槽词典感觉上很类似，开发者自行导入词典，用于系统识别特征词。<strong>所有相关的特征词的组合，我们叫它特征词词典</strong>。</p><p><img src="/img/2018/unit-2-6-9.jpeg" alt="image"></p><ul><li><strong>问答对 &amp; 问答集</strong> </li></ul><p><strong>问答对是什么？</strong></p><p>问题和答案的组合称之为问答对，这个听起来比较好理解。它支持一对一、一对多、多对一和多对多。</p><p>当某一个问题的问题对中包含多个答案的时候，答案随机呈现，这就是一个问答对，问题与答案的组合。</p><p><strong>问答集是什么？</strong></p><p>问答集是承载着问答对的容器，与技能中问答意图的定义一一对应，它是一个集合所以叫它问答集。</p><p>支持批量将问答内容导入问答集，也支持在线编辑。</p><p><img src="/img/2018/unit-2-6-10.jpeg" alt="image"></p><ul><li><strong>训练模型</strong> </li></ul><p>把Bot下所有的配置标注的对话样本、对话模版，打包提交给UNIT平台，来训练对话理解模型，这就叫训练模型。</p><p>训练的时长跟训练的对话样本量，对话模版量是有很大关系的。训练量越多，训练的时间越长。训练完成后沙盒中的Bot就会自动加载并生效模型，通常操作会花费几分钟的时间。</p><p><img src="/img/2018/unit-2-6-11.jpeg" alt="image"></p><ul><li><strong>沙盒环境 &amp; 生产环境</strong></li></ul><p><strong>沙盒环境的定义</strong>：沙盒环境是UNIT平台提供给开发者创建Bot，训练优化Bot模型的一个环境。每个Bot都配有一个沙盒环境，将训练好的Bot模型生效到沙盒环境后，就可以进行效果验证了，同时可以接入到自己的业务系统中进行使用。沙盒环境可以生成多个模型模版，但只能选择一个放在沙盒环境中。 </p><p>我们用的多个模型模版，只能放到一个沙盒环境中。</p><p><strong>生产环境的定义</strong>：生产环境是UNIT平台在百度云上为开发者提供的可定制的稳定的对话服务环境。</p><p>它和我们的开发者开发的术语中的生产环境是一样的，就是线上的一个稳定为用户提供服务的环境，就叫生产环境。</p><p>说了这么多的概念，我们来看一下是怎么用的。</p><p><img src="/img/2018/unit-2-6-12.jpeg" alt="image"></p><ul><li><strong>UNIT：多轮交互中的回应方式</strong> </li></ul><p>刚刚我们举的这个例子：</p><ul><li><p>帮我订一个全聚德的十人包间；</p></li><li><p>好的，您想订什么时间的；</p></li></ul><p>上面就是一个词槽澄清的询问。 </p><ul><li><p>今晚6点吧；</p></li><li><p>好的，帮您订好了；</p></li></ul><p>接下来，还有一种叫引导。</p><ul><li>需要帮您叫车吗？这是一个引导；</li></ul><p><img src="/img/2018/unit-2-6-13.jpeg" alt="image"></p><ul><li><strong>UNIT：将用户提问进行问答匹配</strong></li></ul><p>第二个例子：<strong>怎么借现金？</strong>，这是一个问题。</p><p>我就会在我的库里边去发现，怎么借现金是和【现金贷】借现金的申请流程是什么？这两个是一个意思，我就会把答案推出来，然后告诉你怎么去借现金。这是另外一个问答匹配的例子。</p><p>再给大家展示一个精确询问和多轮引导的例子。</p><p><img src="/img/2018/unit-2-6-14.jpeg" alt="image"></p><ul><li><strong>精确询问 &amp; 多轮引导</strong> </li></ul><p>刚才我们看到怎么借现金？它是一个问答单元，然后回答。</p><p>那问答单元加对话单元是什么样的？</p><ul><li><p>我想了解现金贷怎么申请？</p></li><li><p>我这有三种，您选择哪一个？</p></li></ul><p>这是一种对话。 </p><ul><li><p>我借现金吧；</p></li><li><p>帮您找到三个相似问题；</p></li><li><p>那第一个吧；</p></li><li><p>然后机器人再去说；</p></li></ul><p>这是一个对话单元加问答单元，这两个是有一定区别的。 </p><p>接下来再给大家介绍两个在智能对话领域经常会说到的概念——知识图谱。</p><p><img src="/img/2018/unit-2-6-15.jpeg" alt="image"></p><ul><li><strong>知识图谱</strong></li></ul><p>知识图谱本质上是语义网，描述真实世界中存在的各种实体或者概念。通俗的将，它可以理解成一个数据库。当然，它不是数据库，不过我们可以用这样的方式去辅助理解。知识图谱是知识的结构化表示。</p><p>通常我们用一张巨大的，有点和边组成的图来可视化表现知识图谱。</p><p>点，代表实体或概念。用全局唯一确定的ID来表示，称为标识符。点包含属性，称为值对，用来刻画实体的内在特性。</p><p>边代表实体之间的关系，用来联系两个实体。说起来非常拗口，我们来举一个例子：</p><ul><li>比如：知识库中有一个iPhone7的屏幕尺寸的答案，还有一个是iPhone7plus的屏幕尺寸答案。当用户问到iPhone7屏幕比iPhone7plus屏幕大多少时，知识图谱可以支持机器人进行加减乘除的运算，得出大小，比较答案，就不需要在知识库中具备对应的知识规则。</li></ul><p>它可以跳出一些知识规则，自动的去做一些匹配。</p><p><img src="/img/2018/unit-2-6-16.jpeg" alt="image"></p><ul><li><strong>情感分析</strong>  </li></ul><p>情感分析是为对话赋予情感值，根据情感值的正负将情感倾向分为：正面情感、中立情感以及负面情感。</p><p>通常情况下，企业更关心客户在对话中产生的负面情绪。因为这明确代表了企业客服工作和改进的方向，以及降低客户的投诉。提升客户体验和工作考核KPI直接相关。</p><p>情感分析主要应用于机器人的智能质检中，可以作为一个指标判断对话质量。</p><p>评测情感分析的指标主要分为：情感分类的准确和负面情感的召回率。这个之前我们也简单的在前面的对话系统中，大概的介绍了一下。</p><p>当我们的一个机器人上线，发现全都是负面情感的时候，我们就知道如何去优化了。什么样的话术引发了后面的负面情感，我们也知道这样的话术尽量少用，或者通过上下文的关联，知道如何优化我们的故事线、优化我们的对话逻辑。</p><p>最后我们做一个UNIT所有概念的总结。</p><p><img src="/img/2018/unit-2-6-17.jpeg" alt="image"></p><ul><li><strong>总结</strong>  </li></ul><p>首先ChatBot分为两块，一个是如何理解用户，一个是如何回应用户。我要先听懂你说的话，之后还要怎么去回复你说的话。这和我们在现实生活中，人和人的交往、沟通是非常相似的。</p><p>如何理解又分为意图和词槽，例如：订电影票是一个意图，电影名称、电影院和日期就是词槽。属于如何理解这块。</p><p><img src="/img/2018/unit-2-6-18.jpeg" alt="image"></p><p>词槽中有个很重要的词叫词典，词典就是我们所有这些词槽的集合。例如：电影院的影城，所有电影院的名称（天幕新彩云影城、天幕新彩云、天幕），都是天幕新彩云的别称。又或者是：新华国际影城大钟寺店和新华大钟寺店，大钟寺的新华，它们都是一个意思。我们要尽可能多的收集这些词典。</p><p><img src="/img/2018/unit-2-6-19.jpeg" alt="image"></p><p>第二步第二块是如何回应，它又分为词槽澄清、回复和引导，刚刚也在例子里给大家做了一个介绍，例如：到哪个电影院看。就是一个词槽澄清，需要确定用户的词槽是什么。</p><p><img src="/img/2018/unit-2-6-20.jpeg" alt="image"></p><p>回复又分为两块，一个叫回复话术，一个叫触发条件。</p><ul><li><p>回复话术：用户说好了所有订票的内容，机器人说：“好的，这就为您订票”。这就是一个回复话术。</p></li><li><p>触发条件：同时它何时回复，是通过之前收集到的信息，还要做一个词槽填满，当我把这个词槽都填满了之后，我才会去说：“好的，这就问您订票”。如果词槽没有填满，可能会去引导说：“您要去哪个电影院呀，要看哪个电影呀”。</p></li></ul><p><img src="/img/2018/unit-2-6-21.jpeg" alt="image"></p><p>第三块是引导，引导分为引导话术、引导目标和出发条件。</p><p>引导话术例如：我已经订好了电影票，我可以继续问：“您是不是要买小吃呀？是不是要选个座位？我还可以帮您干什么？”。</p><p>引导目标例如：引导买一些饮料，小吃。</p><p>触发条件也就是何时去引导，当我已经把这个任务完成了，词槽都填满的时候，我再去进行下一个任务。引导买小吃或是饮料。</p><p>好的，这一课主要是给大家科普一下UNIT所有的相关概念，希望大家能有一个全面的理解，之后在UNIT的实操中可以更加得心应手，谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.5 UNIT整体介绍</title>
      <link href="/chatbot/2018-9-13-unit-2-5.html"/>
      <url>/chatbot/2018-9-13-unit-2-5.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第二章的第五节，UNIT的整体介绍。</p><p><img src="/img/2018/unit-2-5-1.jpeg" alt="image"></p><p>上一节课我们介绍了需要搭建一个对话系统的五个步骤,这节课我们先来复习一下:</p><ul><li><p>1. 我们需要定义对话系统；</p></li><li><p>2. 我们需要富集数据资源；</p></li><li><p>3. 我们需要搭建系统、训练、评价和调优；</p></li><li><p>4. 我们需要系统接入；</p></li><li><p>5. 我们需要进行运营迭代；</p></li></ul><p>在第五步我们需要将结果反馈到第二步以及第三步上，通过运营数据，更好的收集数据资源进而更好的搭建系统。</p><p>给大家举一个例子：百度的地图语音交互项目，经过了数个深度学习对话系统，NLP数据挖掘资深工程师，他们花了一年多的时间，写了超过10万行的NLP和DNN代码，经过了十余个大版本的版本迭代，通过了上亿对的对话数据和上亿个地址数据，才完成了我们现在看到的<strong>百度的地图语音交互项目</strong>。</p><p>我们会发现，从头搭建一个好用的对话系统，是需要非常高的成本和代价的。对于小公司来，如果不善用工具，拥有一个智能的对话系统是一件非常困难的事情。</p><p>这节课我给大家介绍<strong>一个特别好用的搭建对话系统的工具–**</strong>UNIT**。有了UNIT之后，只要熟悉业务逻辑，就可以很轻松的成为对话系统训练专家。</p><p><img src="/img/2018/unit-2-5-2.jpeg" alt="image"></p><p>同样还是五个步骤，我们每一个步骤进行一个一个的说一下： </p><ul><li><p>定义对话系统：UNIT会为你提供高质量高可干预的预置技能，助力你定义对话系统；</p></li><li><p>富集数据资源：直接拥有通过百度大数据，智能引擎，智能推荐引擎的超过40个的预置词槽；</p></li><li><p>搭建系统、训练、评估和调优：UNIT是一个真实应用打磨的对话系统，拥有最懂中文的自然语言理解（NLU）技术。可以快速的帮助业务人员搭建系统，甚至一行代码都不用写，就可以直接搭建我们的对话系统；</p></li><li><p>系统接入：UNIT集成了微信公众号的一键接入，并且有完善的iOS、安卓的sdk；</p></li><li><p>运营迭代：UNIT增加了AI加持的反馈分析和学习机制，通过反馈的内容，持续优化数据；</p></li></ul><p>简单的说，有了UNIT后，搭建对话系统就不一定需要专业的编程人员，对话系统开发工程师和算法工程师，只需要让熟悉业务的人维护语言模型就可以了。懂业务的人定义好它的业务逻辑，并根据UNIT进行一步一步的操作，只需要简单的几行开发和部署对接到消息系统中，这样可以免费享用百度NLP多年的研究成果。</p><p>换句话说，我们是站在巨人的肩膀上，开发我们自己的对话系统。</p><p><img src="/img/2018/unit-2-5-3.jpeg" alt="image"></p><ul><li><strong>UNIT概述</strong>  </li></ul><p>UNIT是一个建立在百度多年的自然语言处理和对话技术积累和大数据的基础上的对话系统的平台，她是一个面向第三方提供的对话系统生成器，对话系统的搭建工具。</p><p><img src="/img/2018/unit-2-5-4.jpeg" alt="image"></p><ul><li><strong>UNIT技术特色</strong>  </li></ul><p>它的技术特色有四块： </p><ul><li>平台非常的简单，易学易用，不需要具备算法的基础，五步就可以训练一个对话机器人；</li></ul><ol><li><p>新建bot；</p></li><li><p>添加技能；</p></li><li><p>标注数据；</p></li><li><p>训练优化；</p></li><li><p>发布上线；</p></li></ol><ul><li><p>对话管理更加贴近真人，领先的NLP技术、海量的大数据、多轮交互、自动澄清、主动引导，对话更贴近真人；</p></li><li><p>门槛非常的低，只需要少量的语料，就可以实现强大的泛化效果，轻松对接微信、手机App、网站和硬件等等；</p></li><li><p>UNIT的机制非常灵活，并且持续进行优化。同时拥有高可干预的预置技能、勾选调用、灵活调整、对话系统持续优化，你的机器人越来越聪明；</p></li></ul><p><img src="/img/2018/unit-2-5-5.jpeg" alt="image"></p><ul><li><strong>UNIT概览</strong></li></ul><p>搭建对话机器人需要开发者先进行数据标注、搭建领域知识和交互逻辑，开发你自己的领域对话产品。对应的UNIT 有以下的能力：</p><p>一、理解技术：</p><ul><li><p>多知识融合的意图理解；</p></li><li><p>基于大数据的联合词槽识别；</p></li></ul><p>二、问答技术：</p><ul><li>依托海量优质数据的语义匹配</li></ul><p>三、交互技术： </p><ul><li><p>面向任务的多轮交互技术；</p></li><li><p>面向问答的多轮交互技术；</p></li></ul><p>四、大数据的助力： </p><ul><li><p>知识推荐的加速模型迭代；</p></li><li><p>训练师模式助力零门槛标注； </p></li></ul><p>UNIT有NLP的基础技术，机器学习能力和百度大数据，帮助不懂算法而懂业务的人搭建对话系统，是一个非常好用的对话系统生成器。</p><p><img src="/img/2018/unit-2-5-6.jpeg" alt="image"></p><ul><li><strong>UNIT提供预置技能，最低成本创建对话系统</strong>  </li></ul><p>以上是UNIT提供的预置技能，帮助业务人员最低成本最快速度的搭建对话系统，平均解析准确率超过90%。应用领域包括但不限于：家庭娱乐；智能车载；智能客服；服务机器人。</p><p>我们在第二个小节介绍的对话系统的分类里有任务型的机器人和问答型的机器人，应用场景包括智能助理、会议系统，健身系统等等。这些都可以用UNIT进行简单的配置实现。</p><p><img src="/img/2018/unit-2-5-7.jpeg" alt="image"></p><ul><li><strong>UNIT平台案例</strong>  </li></ul><p>这是一个UNIT平台的案例，用户说：“我要去北京南站，不走高速”。UNIT 可以识别到用户的目的地是北京南站，偏好是不走高速。</p><p>因此进一步可以实现这样的对话对：导航问：“请问您要去哪里？”，“已为您规划到北京首都机场的路线，有避开高速”，“好的”。</p><p>再比如说：“限号策略”，那么回答：“限号策略是2008年10月1日在北京市发布的”。</p><p>UNIT平台可以提供很好的任务型和问答型对话系统的解决方案。</p><p><img src="/img/2018/unit-2-5-8.jpeg" alt="image"></p><ul><li><strong>全渠道接入</strong>  </li></ul><p>UNIT支持全渠道的接入，她包括了训练服务、数据模型，管理模块和对话服务模块。</p><p>对话服务模块支持全渠道接入，包括HttpAPI、DuerOS、iOS、安卓，微信等等。只要你能想到的，基本上UNIT都能够覆盖到。</p><p>再一个是服务管理模块，登陆unit.baidu.com，有非常好用的管理API帮助你去管理。</p><p>介绍了UNIT之后，我们再介绍一下UNIT的一个非常强大的工具，叫做DMKit。</p><p>DMKit是一个开源的对话管理框架。</p><p><img src="/img/2018/unit-2-5-9.jpeg" alt="image"></p><ul><li><strong>UNIT系统构成</strong>  </li></ul><p>我们先来看一下对话系统的构成：</p><p>当用户说一句话的时候，需要通过对话理解技术，比如说我要订一张北京到上海的机票，识别出到订票意图和词槽（北京和上海）。这些我们叫它对话理解，在云端的对话理解。</p><p>下一步是对话的管理，当用户说了北京到上海，我们拿到这些词槽以及意图后，下一步机器人应该如何引导用户给出更多重要的信息，包括机器人收集到所有的词槽后，如何完成对话任务并给出搜索到的机票信息。这个过程叫做资源的检索与任务的执行。</p><p>第一步更多在云端的对话叫做云端的对话理解，将一句话分成意图和实体，也就是用户的目的地等参数对。</p><p>第二步是针对高级开发者的，根据拿到的意图和参数对，通过代码进行灵活的对话管理。接下来我详细的给大家介绍DMKit，一个开源的对话管理解决方案。</p><p><img src="/img/2018/unit-2-5-10.jpeg" alt="image"></p><ul><li><strong>DMKit 开源对话管理方案</strong>  </li></ul><p>我们再来回顾一下这张图，对话理解，对话管理，资源检索和答复生成，灵活的和知识库及外部的服务进行交互，这是DMKit的一个优势。同时，DMKit 还有很多独特的优势，包括完整的离线框架、图形化对话管理、搭建门槛更低、开发更简单、无缝对接云端、轻松易用等。</p><p>开发的同学可以去github上看一下，这是github上的地址：<a href="https://github.com/baidu/unit-dmkit，通过代码管理是更高级的搭建对话的玩法，处理更加灵活。" target="_blank" rel="noopener">https://github.com/baidu/unit-dmkit，通过代码管理是更高级的搭建对话的玩法，处理更加灵活。</a></p><p><img src="/img/2018/unit-2-5-11.jpeg" alt="image"></p><p>当用户说一句话的时候，通过语音识别讲语音转成文字，UNIT 分析后，放在DMKit 中拿到对话状态。根据对话的状态跳转到不同的策略，再跳转到不同的对话状态。外面可以调用UNIT的解析服务以及知识库，最后升到了不同的对话状态之后，再通过ASR反馈到系统，再去和用户进行应答。</p><p><img src="/img/2018/unit-2-5-12.jpeg" alt="image"></p><ul><li><strong>DMKit 在百度支撑了工业级的真实流量</strong>  </li></ul><p>以上简单的介绍了DMKit，我会在稍后的课程介绍更详细的内容，主要是面向开发者的。</p><p>在百度里，DMKit 支撑了工业级的真实的流量，比如说小度机器人，小度聊球和百度的车载语音系统都用到了DMKit，开发者可以放心使用。</p><p><img src="/img/2018/unit-2-5-13.jpeg" alt="image"></p><ul><li><strong>如何优化理解能力</strong>  </li></ul><p>第三块是要介绍的是UNIT的持续学习能力，也就是如何优化机器的理解能力。</p><p>举个例子说，“我要去北京火车站，哎呀，那个啥，帮我导航去北京站，要快一点的路线。我要从西二旗出发，先去西单，再去南锣鼓巷，然后去后海，最后去北京站赶火车，帮我规划一条红绿灯少的不堵车的最快的路线吧”。 </p><p>通过理解模型和大量的训练数据，UNIT会自动的一点一点的优化它的理解能力。</p><p><img src="/img/2018/unit-2-5-14.jpeg" alt="image"></p><ul><li><strong>可终身进化的对话理解技术</strong>  </li></ul><p>UNIT是一个可终身进化的对话理解技术。通过自定义技能和预置技能加上语料，模版，问答对，知识图谱和词典可以优化对话理解技术。在对话理解技术中，包括了内系统内置的对话管理技术和用户定制的多引擎驱动的SLU。多引擎渠道的SLU包括启发式SLU，DNN-SLU和IR-SLU，它可以再的反馈回到整个外面的自定义技能和预置技能里。</p><p>我们会发现，UNIT是在持续不停的迭代过程，通过和用户的交互，用户在后台的配置，可以实现机器的自学习和自进化，进而机器人会更加聪明。</p><p>再举一个例子，让UNIT像人一样在交流中学习，比如说，我问机器人梅球王进了几个球，机器人不知道梅球王是谁，机器人就会问我，梅球王是谁？然后我告诉它梅球王是梅西，那机器人待会儿就会直接回答我梅西进了一个球。</p><p>下一次，你再跟它说梅球王的时候，它就记住了。所以你只要不停的跟机器人去聊天，机器人就能够学习，然后优化自己的对话系统。</p><p><img src="/img/2018/unit-2-5-15.jpeg" alt="image"></p><ul><li><strong>主动学习</strong>  </li></ul><p>我们看到这样一个图，研发人员通过数百条的数据搭建，搭建初始模型，训练师通过1到2天的对话实战练习，用户通过大量的交互反馈持续学习，系统可以在对话中向所有人去学习。那么你只需要做的事就是跟它聊一聊，聊了之后，机器人就会变得越来越聪明。</p><p><img src="/img/2018/unit-2-5-16.jpeg" alt="image"></p><ul><li><strong>UNIT完整的系统推动效果优化</strong>  </li></ul><p>我们看到这是UNIT完整的系统来持续推动效果优化，线上对话我们去采集得到了，UNIT会自动采集得到日志系统，然后进行对话反馈。正确的我们会有漏识别和误识别的，正确的我们都会收集出来，然后只是提炼，得到一些训练的数据，然后在反馈给服务上，然后进行持续的学习和效果优化。</p><p>整个UNIT系统是符合我们上面说的对话系统的生命周期。换句话说你只要在UNIT去搭建，就可以很好的去对话系统的生命周期。</p><p>从最开始的定义、搭建、接入，到后面的我们去看数据去反馈，再回过头来更好的定义搭建。</p><p><img src="/img/2018/unit-2-5-17.jpeg" alt="image"></p><ul><li><strong>UNIT 日志分析系统</strong>  </li></ul><p>这是UNIT的日志对话分析系统，一个新的bot模型，通过对话系统的日志分析，分析出已识别到的意图、未识别到的意图和识别错的意图，再去拿用户的需求，找到bot覆盖到的高频需求，bot覆盖到的低频需求，bot没有覆盖到的高频需求和bot没有覆盖到的低频需求，然后将这些再反馈到bot定义里边，去优化bot的定义。然后再进一步的训练bot，再造一个新bot模型。</p><p>这样我们会发现，我们从0.1、0.2、0.3到1.1、1.2，随着这个模型，我们一点一点地通过大量的真实场景去迭代，逐渐搭建一个越来越好用的机器人。</p><p>建议大家现在就立刻着手去搭建。搭建的越早，上线的越早，你的机器人就越早被你的用户所训练，你的机器人就越早变得越聪明。</p><p>最后给介绍一下UNIT的应用场景。</p><p><img src="/img/2018/unit-2-5-18.jpeg" alt="image"></p><ul><li><strong>应用场景</strong>  </li></ul><p>UNIT不止能应用在我之前介绍的各种应用场景，基本上已经覆盖了所有的行业。</p><p>不论是金融、制造业、汽车业、客服、银行、媒体、旅游、教育、安防、餐饮等。UNIT提供的是一种对话式的智能系统，所以我们可以发现UNIT可以应用在各行各业，有兴趣的小伙伴快来试试吧！</p><p>谢谢大家。</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.4 五步创建一个对话系统</title>
      <link href="/chatbot/2018-9-6-unit-2-4.html"/>
      <url>/chatbot/2018-9-6-unit-2-4.html</url>
      
        <content type="html"><![CDATA[<p><strong>以下为视频文字内容：</strong></p><p>欢迎大家来到第二章的第四节，<strong>五步搭建一个对话系统</strong>。</p><p><img src="/img/2018/unit-2-4-1.jpeg" alt="image"></p><ul><li><strong>对话的六个步骤</strong></li></ul><p>说到在计算机领域如何搭建一个对话系统，我们可以先从现实生活中的对话系统开始。</p><p>在现实生活中，人与人之间的对话通常有下面几个步骤：</p><ol><li><p>打开沟通的渠道，建立沟通的基础：A向B发送一条消息；</p></li><li><p>B向A表达要进行对话的意愿；</p></li><li><p>建立语言的表意，A和B基于一系列既有认知和潜在的背景上下文建立联系；</p></li><li><p>进行扩充，A和B基于它们之间的互动进行学习和积累；</p></li><li><p>达成一致，如果没有达成一致，就进一步的修复和改善；</p></li><li><p>进行行动或者互动，对话的结果可以引发有效的行动，达成一些潜在的目标。</p></li></ol><p>以上是我们抽象的一些步骤，在计算机领域中又是如何搭建对话系统呢？</p><p><strong>总共需要分五个步骤。</strong></p><p><img src="/img/2018/unit-2-4-2.jpeg" alt="image"></p><ul><li><strong>定义对话系统</strong>  </li></ul><p><strong>第一个是定义对话系统</strong>，通常会分为四个步骤。</p><p><strong>首先是确定场景边界</strong>。比如我要做一个差旅机器人，我们需要知道这个聊天机器人的场景边界在哪里，换句话说功能有哪些，是只能定机票，酒店，火车票的一种或者几种，还是所有的任务都能完成。以及要确定机器人是否支持闲聊功能。</p><p><strong>第二步要梳理业务要素和知识库</strong>，同样用机票酒店预订机器人举例子，我们需要知道具体的机票酒店信息，包括时间地点等等。在后续章节中我们会继续的详细介绍，这些都是要梳理到的业务要素。</p><p>那什么是知识库呢，比如说用户问“什么叫经停航班”，那么机器人需要有能力再库中匹配到相应的回答出来，这就叫知识库。</p><p><strong>第三步要撰写故事线</strong>，这就想一个编剧编写剧本一样，需要把场景中每个人说的话通过一个完整的故事线体现出来。</p><p>同样当我们做一个对话系统的时候，也需要把一个场景下机器人和人的完整对话写出来，这也叫故事线。在差旅机器人的例子中，故事线就是从最开始，“你好我要订一张北京到上海的机票”，到机器人最后说：“好的，已经收集到你所有的信息了。我已经帮您订票完毕” 的完整话术。</p><p><strong>一问一答的整个过程叫做故事线</strong>。最简单完整故事线，我们称之为愉悦路线，具体的撰写的方法和要点，我会在稍后的课程里边进一步细讲。</p><p><strong>第四部分叫抽取对话流程</strong>，换句话说，画出对话<strong>流程图</strong>。</p><p>比如订机票酒店的机器人，从第一步用户说到了不同的话不同的参数，到下一步要跳转到哪一步。这个和在GUI，或者做app的产品、网页的产品的之前需要先画交互图是一个逻辑：用户点击了不同的按钮后后应该执行什么操作。</p><p>在对话系统里，当用户触发了某些的参数或产生某种行为，也会触发聊天机器人的行为或者回答。这个时候我们需要制作一个流程图，方便后面的系统搭建，具体细节后面我也会进一步仔细讲解。</p><p>第二步叫<strong>富集数据资源</strong>，那什么叫富集数据资源或者说有哪些资源类型呢？</p><p><img src="/img/2018/unit-2-4-3.jpeg" alt="image"></p><ul><li><strong>富集数据资源</strong></li></ul><p><strong>第一个就是词典词槽</strong>，比如说我们要做一个电影票的机器人，那我们是不是要把电影、电影院这些都收集好，这个就叫做词典词槽值。把具体的电影名、电影院名收集好作为词典值。</p><p><strong>第二个是对话样本</strong>，对话样本就是一问一答的对话。我们的目标就是要找到足够多的这种对话样本。</p><p><strong>第三个是问答对</strong>，像刚刚我们说的“经停航班”的问答叫做问答对。</p><p>如何富集呢？其实有很多种方法，我这里简单的列了三点，后面我们也会具体的教大家。</p><p>第一种就是在指定的业务场景中提取数据，或者我们先拍脑子给出一些具体的数据。</p><p>第二种是在对话日志中进一步分析，当系统上线以后用户和机器人会产生真实的对话交互，我们在这种真实的对话交互中，再进行二次的抽取以完善我们的对话系统。</p><p>第三个是官方的数据库，比如电影院、机票、酒店，这些其实是一些开放的语料库，以及一些航空公司或者院线的信息。它们的数据库能够爬取或者直接下载，换句话说，我们可以从官方数据库中获取词槽词典。</p><ul><li><strong>搭建系、训练、评估和调优。</strong></li></ul><p>通常搭建系统可以有两大种方式去搭建。</p><p><img src="/img/2018/unit-2-4-4.jpeg" alt="image"></p><p><strong>一种是用很多很厉害的对话系统工程师，用代码的方式搭建整个的系统搭建</strong>。包括进行系统的训练，算法和工程上的实现。这当然非常棒，不过花费的成本是很多公司承担不起的。</p><p><strong>第二种我们可以用第三方工具实现</strong>，如百度的UNIT。我们用了百度的UNIT，不懂代码的业务人员通过可视化界面一步步的操作进行系统的搭建，完成最核心的对话系统的一部分，进而完成整个对话系统的实现。</p><p><img src="/img/2018/unit-2-4-5.jpeg" alt="image"></p><p>对话系统的搭建系统、训练、评估和调优通常情况下还有一些小的细节要和大家介绍。</p><p>当你搭建完了对话系统以后，可以找一些搭建系统之外的人，不告诉他任何背景信息让他进行对话测试，多测试几遍就能发现一些你想不到的有趣问题。</p><p>比如哪个对话任务完成起来有困难，或者是用户在和系统进行语音交互的过程中，给用户的感受是怎么样的。通过这种方式收集主观反馈，知道他们在哪里卡住了，在什么地方不顺畅，进行进一步的优化。这些是上线之前的。</p><p>其实这些信息在你上线之后从用户那里也能够收集到。但由于每个人的对话方式和行为习惯不一样，建议还是要找到一些团队之外的人，至少说10-20个来先测试对话系统。这样在上线之后，系统才会更加拟人化，让用户觉得机器人还没那么笨一些。</p><p><img src="/img/2018/unit-2-4-6.jpeg" alt="image"></p><ul><li><strong>系统接入：全渠道API接入</strong>  </li></ul><p><strong>第四步我们要做的叫做系统接入：全渠道的API接入</strong>。</p><p>经常会有人问我：“我们的对话机器人更适合放在哪里？”，其实回答很简单：<strong>用户在哪里，我们的机器人就放在哪里，我们的服务就接入到哪里</strong>。</p><p>比如可以接入到DuerOS里边，也可以接入到微信、微博、京东、阿里旺旺、小程序，甚至可以接到我们的电话里，网页和app中。</p><p>这一块是需要工程化的操作的，当创建完语言模型后，就会抽象出一个一进一出的API。用户每说一句话，系统返回一句话。开发者只要把API一步步的对接到这些不同的系统里边就可以完成了。</p><p>也就是说，把搭建好的语言模型插到不同的message app里，叫做系统接入。</p><p><img src="/img/2018/unit-2-4-7.jpeg" alt="image"></p><ul><li><strong>系统接入：通用模块</strong>  </li></ul><p>同时系统接入还有第二个部分，也是很多人会经常忽略却非常重要的，有三个模块。</p><p>1.<strong>智能的人机协作</strong> 我们知道现在的机器人一定不是100%的智能，也不可能100%的解决用户的需求。当用户已经呈现出不满意，或者用户的反馈已经不好，需要人工接入的时候。我们的系统要能够判断出来并做一个迅速切换。把机器人切换到人上面，人接管之后也需要知道用户和机器人交流的上下文。</p><p><strong>2. 用户评价 </strong>那么每一次机器人完成一个任务后可以给用户推送一个反馈，比如“您对我的服务满意吗？0到10分，你打几分？”</p><p>通过用户的评价能帮助我们发现对话系统的问题，以进行进一步的优化，优化之后再上线后还可以通过用户的评价系统了解优化之后提升的效果。</p><p>比如平均分是从3分提升到6分，还是从6分提升到了7分，或者从7分又降低到了4分。这个有助于我们持续优化对话系统。</p><p><strong>3. 数据化的商业决策</strong>，根据用户数据，引导商业上决策。</p><p>我们需要要多推荐哪个产品，举个金融消费类的例子，比如通过用户情绪判断多推荐哪一个保险用户购买转化率会比较高。以上是系统接入的部分 。</p><p><img src="/img/2018/unit-2-4-8.jpeg" alt="image"></p><ul><li><strong>运营迭代</strong>  </li></ul><p><strong>最后一部分叫**</strong>运营迭代<strong>**，记录与观察机器人和用户的交流应答，沉淀用户信息。</strong></p><p>举个例子，包括消息类型的统计、用户情感的分析，在统计中查看热点业务问题的答案命中次数。<strong>根据统计结果可以更好的调整客服工作策略，甚至进一步调整企业市场的宣传重点</strong>。</p><p>这个是根据我刚刚在说第四部分一些小的模块中，结合这些模块的数据做数据分析，进行下一步的运营迭代。</p><p><img src="/img/2018/unit-2-4-9.jpeg" alt="image"></p><p>我们也可以像传统的GUI设计中一样，设置对话漏斗，层层追踪信息转化的比例，了解用户在哪一层丢失了，用户在哪一类对话中放弃了，就着重优化这一句话说的方式并进行对话流的修改。</p><p>比如机器人问：“你想去哪里？”，还是问“你想订哪里的机票。”</p><p>虽然看起来是一个意思，但是每种问法产生的效果是不一样的。通过数据帮助我们优化机器人和用户交流的方式。</p><p><img src="/img/2018/unit-2-4-10.jpeg" alt="image"></p><ul><li><strong>对话系统的生命周期</strong>  </li></ul><p><strong>最后给大家介绍一下对话系统的生命周期，对话系统不是从第一步到第五步完成后就结束了，而是一个周而复始循环的过程</strong>。</p><p>它的生命周期和传统的软件开发有相似的地方也有不同的地方，着重介绍几个不同的点。</p><p><strong>首先</strong>，传统软件开发在设计了产品文档后就可以做开发了，而对话系统在产品文档和开发中间要加入对话脚本，也就是故事线的设计。</p><p><strong>另外</strong>，传统软件上线后的测试可能不需要考虑多个平台，而对话系统的设计需要加入适配不同的消息平台的控制机制。</p><p><strong>最后</strong>，对话系统的分析中要善于利用线上的对话日志，通过用户在对话过程中的纠正、反馈来优化对话模型的对话理解效果，让机器人越来越聪明。</p><p>这一课给大家讲了如何搭建一个对话系统，<strong>也希望大家知道对话系统不是五步就完成了。是需要五步之后再不停的优化，我们要小步快跑，快速迭代</strong>。</p><p>最后希望每一个人都能够通过五步搭建出你喜欢的对话系统，谢谢大家，我们下期再见！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.3 对话系统话术设计注意事项</title>
      <link href="/chatbot/2018-8-30-unit-2-3.html"/>
      <url>/chatbot/2018-8-30-unit-2-3.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来学习我们第二章的第三节，<strong>对话系统话术设计的注意事项</strong>。</p><p><img src="/img/2018/unit-2-3-1.jpeg" alt="image"></p><ul><li><strong>简洁明了</strong></li></ul><p>首先是简洁明了，我们来对比这两个话术。</p><ul><li><p>如果你想要再听一遍可以说“重复”；</p></li><li><p>如果想要做出回答可以说“回答”；</p></li><li><p>如果要继续到下一个，可以说“下一个”；</p></li></ul><p>这是一个对话系统里面常见的话术，完全照搬了之前GUI的的做法，每个模块都罗列上去，而正常人交流会说：你是要重复回答，还是要去到下一个。</p><p>借此，给大家介绍一个法则：<strong>格里斯法则</strong>。</p><p><img src="/img/2018/unit-2-3-2.jpeg" alt="image"></p><ul><li><strong>Gricean 语言准则</strong></li></ul><p>格里斯是一个非常有名的语言哲学家，他有四个法则：</p><ul><li><p><strong>质量准则</strong>：只说确认的真实的内容；</p></li><li><p><strong>数量准则</strong>：所说的话必须要满足交流所需要的信息量，但不应该超出所要求的信息量。换句话说就是不多也不能少；</p></li><li><p><strong>相关法则</strong>：只说和主题相关的内容；</p></li><li><p><strong>态度法则</strong>：说话要清晰明了，避免模棱两可；</p></li></ul><p><img src="/img/2018/unit-2-3-3.jpeg" alt="image"></p><ul><li><strong>Gricean 语言准则反例</strong> </li></ul><p>给大家举一些反例：</p><ul><li><p><strong>质量法则</strong>：宣传一些你根本做不到的事，比如你明明是一个订机票的机器人，你却去问用户：“我能帮你做什么吗？”，用户自然就会说：“你能帮我点个餐吗，能帮我叫个车吗？”，机器人做不到或者是直接理解成订机票的意图就会让用户失望；</p></li><li><p>第二个是<strong>数量准则</strong>：有人经常会说：“请您注意听，因为我们的选项已经变了”，实际上这句话并没有任何的意义；</p></li><li><p>第三个是<strong>相关准则</strong>：给了用户一些当前用不到的知识，比如在用户还没下单的时候，就开始解释退货的策略，这是没有必要的。应该要追踪用户每一步，他要什么你再给，他不要就不要往上硬塞；</p></li><li><p>最后是<strong>态度准则</strong>：很多人愿意给机器人罗列很多晦涩难懂的专业术语，以为这样能显得自己高大上，实际上用户只会觉得你很傻；</p></li></ul><p><img src="/img/2018/unit-2-3-4.jpeg" alt="image"></p><ul><li><strong>对话语句要自然</strong></li></ul><p>第二个需要注意的事项是<strong>对话的语句要自然</strong>，经常会看到很多的机器人，用刻板的对话脚本教导用户，希望用户按照他们希望的台词去说话。</p><p>处理的办法很简单，大家注意以下这三点：</p><ul><li><p><strong>首先</strong>，大声朗读你写的内容，使用随机化的表达，使对话听起来更自然。只有你把你写出来的读出来，你才会发现哪里有问题；</p></li><li><p><strong>第二</strong>，用人正常说话的方法去写对话脚本，很多人做对话机器人会很懒，直接去官网或app上把内容原封不动的复制黏贴。这样对开发者简单了，对用户反而觉得不好理解；</p></li><li><p><strong>第三</strong>，需要给用户明确的上下文暗示，而不是一个模糊的陈述，让用户不知所措；</p></li></ul><p><img src="/img/2018/unit-2-3-5.jpeg" alt="image"></p><ul><li><strong>处理新手用户&amp;老手用户</strong></li></ul><p>第三点要处理的是新手用户和老手用户。</p><p>这是一个医疗保健的助理，你第一次使用的时候，机器人会说：“让我们来测量血压，请确保血压计的袖带已经打开。将袖带卷到你的手臂上，并使用蓝色箭头指向你的手掌。请保持坐姿双脚平方在地上，当你准备就绪时按下按钮”。</p><p>对于一个新用户，机器人用非常详细的去跟他交流是没有问题的。但当一个用户使用一周之后，机器人依然说这么多废话，用户会逐渐变得不耐烦。所以这个时候，你只要跟他说：“到测量血压的时间了，请带上袖带并按下“继续”按钮”，就可以了。</p><p>很多时候，也不能只依靠次数来确认模式，因为一个人可能使用了多次，但一两个月只使用一次。在这种情况下，应该继续保持新手提示。要注意你的目标不是简单的训练你的用户，而是适应用户的行为，不是用已有命令让用户感到厌烦。</p><p>我们再来看第四个要注意的事项，<strong>适当的使用问候语和结束语</strong>。</p><p><img src="/img/2018/unit-2-3-6.jpeg" alt="image"></p><ul><li><strong>适当使用问候语&amp;结束语</strong> </li></ul><p>首先，你要告诉你的用户是谁，用户要知道他在和机器人说话，还是在和真人说话，让用户有一个明确的预知，当你进行转换的时候你也要告诉他：“我刚刚是机器人，现在我转到了人工。我是人工的小芮，在这儿为你回答问题。”</p><p>第二，对话包含的信息要合适，新接触的用户和老用户需要的内容是不一样的。这是在设计对话的时候是要考虑的。</p><p>第三，是要采用合适的方式来结束对话，当用户完成目标的时候，比如用户说：“好的，谢谢”“不需要了，谢谢”，你是否知道它是完成？你是否知道它代表着什么？然后你能不能够去快速退出。还是说你会不停的在问：“还有什么需要帮助您的吗？”，或者是说：“你还是需要订机票吗？”，这样的话也会显得你的机器人非常的弱智。</p><p><img src="/img/2018/unit-2-3-7.jpeg" alt="image"></p><ul><li><strong>积极确认</strong> </li></ul><p>第五个可能会讲的稍微多一点，关于确认这一块，当用户提出一些请求，机器人必须要给用户以回应，就像人和人的交流一样，你需要给对方以回应。你说：“我知道你在说什么了”，这样对方才会继续有跟你沟通下去的欲望，<strong>确认上我们做了三个区分</strong>：</p><ol><li><p>第一个叫显性确认； </p></li><li><p>第二个叫隐形确认；</p></li><li><p>第三个叫置信度综合的显性确认和隐形确认；</p></li></ol><p>那这三个有什么区别，接下来会给大家详细的去讲解。</p><p><strong>同时注意两件事</strong>：</p><ol><li><p>应答用于话题更换前，表示拒绝、接受、二次确认和更正。这个就是一个确认；</p></li><li><p>第二个是对重复信息需要谨慎，不要滥用；</p></li></ol><p><img src="/img/2018/unit-2-3-8.jpeg" alt="image"></p><ul><li><strong>显性确认</strong> </li></ul><p>我们来看一下这三个确认，什么情况下我们要用到显性确认。</p><p>有三种情况：</p><ul><li><p>第一种情况这种场景非常难撤销，一般是在用于订单最后跟用户来确认的，你是不是要订这张机票，你是不是要交这笔钱，它是用于什么。</p></li><li><p>第二个就是对于购买者的消费协议或者法律法规。比如说我一些免责协议，要明确的确认好。</p></li><li><p>第三个系统性能不好的时候，右边就给大家展示了一个很明确的最终的订单的确认的这种话术。它会很明确的告诉你：“请您确认”，它有这个很明确的说法，是这个东西吗？它是在做明显的确认。</p></li></ul><p><img src="/img/2018/unit-2-3-9.jpeg" alt="image"></p><ul><li><strong>隐性确认</strong> </li></ul><p>隐性确认，根据名字我们就可以看的出来，它是在暗示你，不是在明确的说请您确认。</p><p>给大家举两个例子，我们看第一个例子：</p><ul><li><p>用户说：“今天天气怎么样”；</p></li><li><p>机器人说：“北京今天的天气晴转多云”；</p></li></ul><p>其实这个就是隐性确认，它也是在偷偷的跟你确认，你是不是在问我北京的天气。如果你说不是，上海的天气怎么样？那机器人也会说：“上海的天气小雨加雪”或者类似怎么样。所以这个时候你要让用户知道，我已经识别到你的信息。</p><p>再比如说第二个再给大家举个例子 ：</p><ul><li>世界上最高的山峰是什么？</li></ul><p>如果机器人没有识别的很好的时候，那它就可以说：“世界上最高山峰珠穆朗玛峰”，说明我知道你的意思是什么，在问我世界上最高的山峰，我识别到了，那世界上最高的山峰珠穆朗玛峰，这种回答远比回答说：“珠穆朗玛峰”，要更舒服，贴切和智能。</p><p>一般隐性确认的场景，则是在对获取信息的识别度，识别准确度较高的时候，为了减少出错进行确认的。</p><p><img src="/img/2018/unit-2-3-10.jpeg" alt="image"></p><ul><li><strong>置信度综合的显性确认和隐形确认</strong> </li></ul><p>以上是给大家举的例子，是置信度综合的显性确认和隐性确认，这个是看情况而定的。 </p><p>简单说是看情况而定，比如这是一个智能音响的例子，你跟机器人说再买一些纸巾，那么机器人根据对你话术的识别有一个置信度。技术里面叫confidedce，也可以理解为概率。</p><p>当它觉得你80% 的概率会再买一些纸巾，它会直接说：“好的，已经为您订购了更多纸巾”。</p><p>如果因为声音较远或者背景嘈杂，他觉得你只有45%-79% 的概率是说在买纸巾的时候，它就会去问你：“你是想再订购一些纸巾吗？”。</p><p>如果杂音更多或者它听到了其它的东西，低于45%的概率觉得你在买纸巾，它可以直接问：“对不起，我没有听清你说的话，你想要买什么？”。</p><p>当然，80，45也都是一个在现实的场景中迭代总结的数据，任何一个系统不会有一个统一的标准数据的。</p><p><img src="/img/2018/unit-2-3-11.jpeg" alt="image"></p><ul><li><strong>确认策略话术对比</strong> </li></ul><p>最后再给大家做一个对比，那么左边是我没有放任何的确认话术：</p><ul><li><p>帮我日历上加个备忘</p></li><li><p>哪一天？</p></li><li><p>星期六</p></li><li><p>几点？</p></li><li><p>下午2点</p></li><li><p>什么事？</p></li><li><p>张三的生日聚会</p></li><li><p>最后说已保存，然后张三的生日聚会，星期六下午2点</p></li></ul><p>这个时候用户的感知是非常硬冷的，总觉得机器人的信息不一定是准确信息。这是缺少隐性确认的话术进行引导的原因，会让用户会觉得很困扰。</p><p>以下是修改后的案例： </p><ul><li><p>用户说：“帮我在日历上加个备忘录”；</p></li><li><p>“好的什么时候？”，机器人说好的就是我知道我要给你加备忘录了；</p></li><li><p>“星期六下午2点”；</p></li><li><p>“收到，我知道了，星期六下午2点，活动名称是什么？”；</p></li><li><p>“张三的生日聚会”；</p></li></ul><p>这个时候你有没有觉得更踏实一点了呢。</p><p><img src="/img/2018/unit-2-3-12.jpeg" alt="image"></p><ul><li><strong>随机策略</strong> </li></ul><p>随机策略是很简单的，因为机器人是我们去设计的，我们希望机器人更加的贴近人，所以回答的时候，尽量加一些随机的策略，避免应答的单调或套路化。</p><p>比如说好的，没问题，收到，OK都可以这么说。只要用户觉得机器人好像还满聪明的，不会很刻板。</p><p><img src="/img/2018/unit-2-3-13.jpeg" alt="image"></p><ul><li><strong>使用对话时标识</strong> </li></ul><p>第七个是使用对话式标识。什么叫对话式标识？</p><p>对话式标识是让用户了解交谈进展，以及进展情况的重要方式。当系统在对话中使用了一些基本的对话礼仪以后，用户的参与度会更高，并且会以同样的方式进行回复，就像胶水一样将各个部分连接在一起。</p><p>比如说时间线：</p><ul><li><p>首先；</p></li><li><p>完成一半了；</p></li><li><p>最后；</p></li></ul><p>比如说我有三个问题想问你：</p><ul><li><p>首先您是要买车吗？</p></li><li><p>好的，我知道了；</p></li><li><p>请问您洗车的频率是多少？</p></li><li><p>最后想问一下，你是不是接受我这家公司呀？</p></li></ul><p>类似这样的一个调研问卷，远比你直接抛给他三个问题要好。 </p><p>第二个是接受回应时段</p><ul><li><p>谢谢；</p></li><li><p>知道了；</p></li><li><p>好的；</p></li><li><p>不好意思；</p></li></ul><p>这个之前就有例子给大家介绍了。 </p><p>积极反馈：</p><ul><li><p>干得好；</p></li><li><p>很高兴听到这个消息；</p></li></ul><p>类似这样比较适合做医疗助理，那么比如说用户已经按你的要求测量了血压等，这个时候你可以给用户一个积极的反馈，用户会更愿意按照你接下来的操作去往下进行。 </p><p><img src="/img/2018/unit-2-3-14.jpeg" alt="image"></p><p>这是一个医疗的例子，左边：</p><ul><li><p>“你昨晚睡了几个小时？”；</p></li><li><p>“你昨天吃了几份水果？”；</p></li><li><p>“你吃药了吗？”；</p></li><li><p>“再见！”；</p></li></ul><p>感觉非常生硬，冷冰冰的。 </p><p>但我们看另外一种话术设计：</p><ul><li><p>“我会问你几个有关你身体健康的问题，第一个问题，你昨晚睡了几个小时？”；</p></li><li><p>“然后不错，我收到你的回答了，你昨天吃了几份水果”；</p></li><li><p>“我们说四份”；</p></li><li><p>“那我了解了，最后一个问题”；</p></li></ul><p>用户就知道自己走到哪一步了，他知道我跟你说吃完了，基本上我可以跟你结束对话了，所以它最后也说：“暂时就这些了，我以后再问你，再见”。</p><p>希望大家通过这种对话式标识，让你的机器人看起来更舒服。</p><p><img src="/img/2018/unit-2-3-15.jpeg" alt="image"></p><ul><li><strong>异常处理</strong> </li></ul><p>再有一个是加入异常处理，比如说可以主动询问：</p><ul><li>很抱歉，我没有听懂您的意思；</li></ul><p>第二类是增强错误提示信息，比如机器人说：</p><ul><li>请告诉我您的航班号码，我来帮您查询预约信息；</li></ul><p>用户随便说一个数字，机器人说： </p><ul><li>我没有识别到，您的航班号应该是四个数字，而且是在CA之后；</li></ul><p>机器人很快就反应过来了。</p><ul><li>哦，那是这个，1807；</li></ul><p>然后这样的话，会通过这种对话去告诉它，你应该去引导他给出一个正确答案。</p><p>最后实在没有办法了，我们可以把他转交给人工。</p><p><img src="/img/2018/unit-2-3-16.jpeg" alt="image"></p><ul><li><strong>设计对话通用模块</strong> </li></ul><p>还有一块是设计对话通用的模块，比如说主菜单。这一块是想跟大家说CUI和GUI是有一些共同的地方的。</p><p>GUI里边有的主菜单、帮助健或退出键，我们CUI中或者对话的这种交互中一定要有的，只不过它可能代表的是一种意图。你要去设计这种意图，用户说什么样的话会触发。</p><ul><li><p>比如用户说：“桔小秘，你能做什么呢？”，这是一种意图触发主菜单；</p></li><li><p>“接下来我该怎么办”，这是一种意图，触发帮助；</p></li><li><p>“再见”，这也是一种意图，触发的是退出；</p></li></ul><p>那么很多人会只顾着设计自己的故事线，设计自己的愉悦路径，就把这些最基本的GUI里面要注意的点忘记了。</p><p><img src="/img/2018/unit-2-3-17.jpeg" alt="image"></p><ul><li><strong>设计延迟话术</strong> </li></ul><p>再给大家最后再讲几个设计延迟的话术。</p><p>其实很多时候，查询的过程是需要一些时间的，或者说我们去买一张机票，可能需要等代理商确认以后才能出票，你都要明确告知你的用户：“请稍等，我在查询相关记录”或“请稍等，我正在订票”，让用户知道我需要等待多久，远比你等三分钟之后再跟他说：“您好，给您做好了”。用户为着三分钟等着就很焦躁，你不如先告诉他，再让他等三分钟。</p><p><img src="/img/2018/unit-2-3-18.jpeg" alt="image"></p><ul><li><strong>设计歧义消除话术</strong> </li></ul><p>还有一个就是设计歧义的消除话术，也是一个例子吧：</p><ul><li><p>给Linda打一个电话；</p></li><li><p>好的手机还是座机？</p></li><li><p>用户说：“手机”；</p></li><li><p>正在拨打Linda的手机号。</p></li></ul><p>这也是通过一些隐性确认的方式，去做了歧义的消除。</p><p><img src="/img/2018/unit-2-3-19.jpeg" alt="image"></p><ul><li><strong>主动学习</strong> </li></ul><p>最后再给大家举一个例子，也是希望大家能够有这个意识，人的表达会存在各种各样的情况，不管用户说什么，不要把它当场一个错误来处理，而是去寻找如何把它变成一个主动学习的机会。</p><p>那么举一个例子就是：</p><ul><li>梅球王在小组赛中最后进了几个球？</li></ul><p>其实机器人根本就不知道梅球王是谁，那你不要把它当成一个错误，你可以问他 </p><ul><li><p>请问梅球王是谁？是里奥内尔·梅西吗？</p></li><li><p>用户说：“是”；</p></li><li><p>那机器人就可以说：“梅西进了一个球”；</p></li></ul><p>把每一种对话的交互都转变成一种提供价值的互动机会，机器像人一样在交流中学习。</p><p>这就是我们在对话系统设计话术中的一些例子和注意事项，希望大家能够有所收获，我们下期再见。</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>像种子慢慢生长，像蒲公英慢慢吹散</title>
      <link href="/thought/2018-08-29-slow-down.html"/>
      <url>/thought/2018-08-29-slow-down.html</url>
      
        <content type="html"><![CDATA[<p>每一天做的事情，都是在为以后埋种子；好种子，发好芽；坏种子，发坏芽。</p><p>“我不愿意想，想这些太累了”，这就让坏的种子不断的种下去，等他们发芽之后，再想除掉他们就没那么容易了。</p><p>真正影响力的建立，都不是立竿见影的。现在的收获很多都是3-6个月前中下的种子。</p><p>“carpe diem, quam minimum credula postero” 未来不可预见，事情也不会自己到位，盲目追求未来和瞎着急没有任何意义。我们能做的只有今天做出行动，尽力而为。只要不停播种，明天一定会变得更好。</p><p>好多东西，是急不来的，慢慢积累，有耐心的人会看到花开。</p><p>我现在依然很急，但我更有耐心了。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.2 对话系统分类</title>
      <link href="/chatbot/2018-8-23-unit-2-2.html"/>
      <url>/chatbot/2018-8-23-unit-2-2.html</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到第二节课，对话系统的分类。</p><p><img src="/img/2018/unit-2-2-1.jpeg" alt="image"></p><p><strong>对话系统的分类场景概览</strong></p><p>对话系统总共分为三类，第一类是<strong>任务型</strong>、第二类是<strong>问答型</strong>、第三类是<strong>闲聊型</strong>。</p><p><strong>任务型有固定的任务，且每一句话是需要转换成参数**</strong>。**</p><ul><li>比如“明天下午2点帮我订一张北京去上海的机票”，会把它参数化成“下午2点”“北京上海”，然后就把它转换成了参数化的请求。它的任务目标是：我要订机票； </li></ul><p><strong>问答型同样有任务目标，但是不需要转化成参数**</strong>。**</p><ul><li>比如，“什么叫做经停航班”，“怎么定闹钟”，或者“如何购买现金贷”。这些不需要转换成参数，但是有明确的任务目标，通常它是在客服中使用的比较广泛； </li></ul><p><strong>闲聊型是开放不限定领域的，没有目标，只要能一直聊下去就好。</strong></p><p>以下是这三类的应用场景：</p><p><strong>任务型应用场景：</strong></p><ul><li><p><strong>智能助理：</strong>如<strong>办公行政的助理</strong>。你可以问它“我要订一张北京到上海的机票”，可以做成任务型的对话系统；</p></li><li><p><strong>新手妈妈</strong>、<strong>母婴专家：</strong>，你会去问一些儿童相关的问题，机器人通过多轮对话去引导着用户完成一个任务；</p></li><li><p><strong>导游：</strong>如“去厦门的鼓浪屿怎么走啊”</p></li><li><p><strong>智能会议系统：</strong>比如用一句话去操控：幻灯片打开；投影仪打开；拨通一个视频会议；拨通一个会议电话等等；或者在健身房运动中，用语音去控制器械。比如：跑步机开始，跑步机停止等等；</p></li><li><p><strong>地图导航</strong>，<strong>车载系统</strong>；</p></li><li><p><strong>儿童故事机：</strong>它会同时用到任务型和闲聊型，一些明确性教育目标的是任务型的，剩下的一小部分是闲聊型的，主要为了陪孩子聊天，聊的越久越好；</p></li></ul><p><strong>问答型的应用场景：</strong></p><ul><li><strong>电话客服类：</strong>它能帮助我们去解决售前80%的共性基础问题，比如“什么叫做经停航班”或者说去咨询某个产品的使用情况等；</li></ul><p>除了电话客服，在网页、APP、微信公众号上，这种问答型的对话机器人也非常常见。它被大量的使用在电商、金融、银行等系统中。</p><p><strong>闲聊型的应用场景：</strong></p><ul><li><p>闲聊型应用场景是不限定领域的，聊的越久越好；</p></li><li><p>比如一个我们去和<strong>虚拟的陪伴助手</strong>闲聊：</p><ul><li><p>“我今天不高兴”</p><ul><li><p>“你是为什么不高兴”</p></li><li><p>“因为感情的问题不高兴”</p></li><li><p>…</p></li></ul></li></ul></li></ul><p>我们进一步看一下，他们在技术上的对比。</p><p><img src="/img/2018/unit-2-1-2.jpeg" alt="image"></p><p>首先是<strong>平台系统的开放性</strong>。</p><ul><li><p><strong>任务型</strong>通常是一家公司开发直接面向C端的消费者的，不开放技术细节，可能会调用第三方的任务，不能定制机器人的对话；</p></li><li><p><strong>问答型</strong>通常是一个平台，技术细节可能开放，可以让普通的用户配置修改机器人的行业；</p></li><li><p><strong>闲聊型</strong>是一家公司开发，直接面向C端消费者，通常不开放技术细节，可能调用第三方的服务，很难定制机器人的对话；</p></li></ul><p>技术方案上，任务型会更加精准、可控、复杂。它通常使用意图识别+多轮对话，并且对接公开的API和知识图谱，领域意图和对话是要预先进行定义的。</p><p>而问答型相对于任务型更加精确，可控和简单，需要自行挖掘问答对或知识图谱，通常使用的意图识别+多轮对话+对接企业的API+企业知识图谱补充同意的问题。</p><p>闲聊型几乎不可控，你不知道用户下一句话会说什么，一般是可以直接调用的。通常，这个系统会使用构建一个闲聊库，检索类似的问题给出答案。</p><p>有两种技术方案：</p><ul><li><p>第一种是检索式；</p></li><li><p>第二种是生成式，从闲聊库里生成模型；</p></li></ul><p>这三块的优化目标是不一样的：</p><ul><li><p>任务型是希望用最短的对话轮次来满足用户的需求。</p></li><li><p>问答型是希望用最短的对话轮次来满足用户的需求。只要解决了问题，聊的越短越好。</p></li><li><p>闲聊型则相反，聊的越久越好，而且也没有明确的问题要回答；</p></li></ul><p>接下来，再给大家具体的举一个例子： </p><p><img src="/img/2018/unit-2-1-3.jpeg" alt="image"></p><p><strong>对话系统的分类：任务型</strong></p><p>如上图，我们看到用户说的每一句话都是可以转换成明确参数的。机器人把所有的参数收集全以后，完成整个任务。 </p><p>整个对话围绕着一个目标，一般只有通过多轮对话才能达成这个目标，只要完成这个目标，聊天机器人就是合格的。</p><p><img src="/img/2018/unit-2-1-4.jpeg" alt="image"></p><p><strong>对话系统的分类：问答型</strong></p><p>第二类是问答型，上图中举了两个例子。</p><p>第一个：</p><ul><li><p>用户问：“在哪里设置闹钟呢？”；</p></li><li><p>机器人告诉用户怎么去设置：</p></li></ul><ol><li><p>我们看到进入闹钟设置页面；</p></li><li><p>点击左上角的“编辑”；</p></li><li><p>选择一个想要设置铃声的闹钟；</p></li><li><p>在设置页面看到铃声选项，点击进入就可以设置闹钟了；</p></li></ol><p>以上这一块是已经预先录入好的，设置好一个问答放了进去。类似于咨询客服，用户提出问题有较为固定的回答。 </p><p>第二个例子：</p><p>这个时候不一定是用户提问，机器人回答，也可以是用户说一句陈述的话“谢谢”，机器人回答“不用谢”。只要有这种匹配的问答对在库里，我们都可以叫做问答型。</p><p><img src="/img/2018/unit-2-1-5.jpeg" alt="image"></p><p><strong>对话系统的分类：闲聊型</strong></p><p>闲聊型例子如上，可以看到，这是没有明确目的对话。只要人愿意一直和机器人聊下去，越久越好。</p><p><img src="/img/2018/unit-2-1-6.jpeg" alt="image"></p><p><strong>差旅中的chatbot场景类型：任务型&amp;问答型</strong></p><p>最后给大家做一个对比，<strong>图中是差旅场景中聊天机器人的一个应用</strong>。实际上在很多场景中，只用一个类型的机器人很难解决所有问题。</p><p>比如，<strong>做差旅中的聊天机器人，我们同时需要用到任务型和问答型。</strong></p><p>任务型：我说：“后天出差，帮我订张机票飞往深圳”，那机器人一步一步的手机城市，时间等参数信息直到任务完成。</p><p>问答型：用户问：“什么是经停航班”，然后机器人通过库里检索出类似的问题回答：“经停航班是一张机票的一个航班号，是同一个航空公司运行的航线，在第三地经停的时候，有可能换飞机继续飞行，也有可能不换飞机继续飞行”。</p><p>这就是一个任务型和问答型结合到一起使用的案例。</p><p>希望大家在搭建自己的聊天机器人的时候，也不要拘泥于某一种场景，比如只用任务型、只用问答型或者只用闲聊型。<strong>一定要把多种类型融会贯通放到一起，我们的机器人才会更加聪明。</strong></p><p>以上就是这节课的内容，谢谢大家，下期再会！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 2.1 对话系统专业术语科普</title>
      <link href="/chatbot/2018-8-16-unit-2-1.html"/>
      <url>/chatbot/2018-8-16-unit-2-1.html</url>
      
        <content type="html"><![CDATA[<p>欢迎来到我们的第二节课，<strong>对话系统专业术语科普</strong>。</p><p>我们之前说过要搭建一个对话系统，在对话系统中有很多非常专业术语。</p><p>今天我会把常用的术语给大家做一个解释，同时介绍一下他们在什么样的场景下会被用到和对话系统的评价标准。</p><p><img src="/img/2018/unit-2-1-1.jpeg" alt="image"></p><p><strong>单轮对话</strong></p><p>简单来说它就是一问一答，问题用一句话去描述，回答可能用几句话或者一段文字去回答，不依赖于上下文。</p><p>比如我问什么是经停航班，那机器人就会在它的数据库里去寻找什么是经停航班，并做一个介绍。一般这样的问答依赖于数据库，专业一点说是知识库。机器人从知识库里检索到相似的问题并给出答案。</p><p>单轮对话有3个评价指标：</p><p><strong>1</strong>.<strong>**</strong>召回率**</p><p><strong>2. 准确率</strong></p><p><strong>3. 问题解决率</strong></p><p><img src="/img/2018/unit-2-1-2.jpeg" alt="image"></p><p><strong>召回率等于机器人能回答的问题数量除以总共的问题数量，机器人能回答的数量越高，它的召回率就越高。</strong></p><p>如果会话的召回率非常低，通常有2种情况：</p><ul><li><p>1. 我们知识库里面的问答对太少，解决办法就是完善知识库，塞更多的问答对进去，这样机器人就会越来越聪明。所以，单轮对话的系统上线之后，我们也是在反复的迭代优化，让知识库里面的问答对越来越多。</p></li><li><p>2.相似的问题知识库里面有，但由于语义的问题而没有找到，这种情况下应该去做算法的优化。同一个问题，比如说我的快递到哪了，或是我的快递什么时候到，大概问的都是查询快递的问题，要把它归类到一个问题，这样的话叫<strong>算法优化</strong>。</p></li></ul><p><img src="/img/2018/unit-2-1-3.jpeg" alt="image"></p><p><strong>准确率是机器人正确回答的数，除以问题总数**</strong>。**</p><p>准确率并不是闲聊型机器人的指标，但是刚刚说的召回率是闲聊机器人的一个指标，除此之外还有情感，是否有趣等等。</p><p>但是对于任务型和问答型的机器人来说，就一定要要求准确率，宁可机器人不回答，也不能回答错误。</p><p>准确率这一评测指标，在实际中需要人工来标注机器人回答的是否准确。所以场景有的时候会相对比较受限，企业的客服部门通常会使用问题解决率，作为日常工作中对机器人的主要评测指标。</p><p>那么下面我们就看一下，什么叫做<strong>问题解决率</strong>。</p><p><img src="/img/2018/unit-2-1-4.jpeg" alt="image"></p><p><strong>问题解决率等于问题的总数减去转人工客服的数量，再减去客户反馈不满意的问题数量。</strong></p><p>这个就不需要人工去标注，机器(系统)能直接衡量出来的，企业需要设置合理的策略，来判断什么时候机器人要转到人工客服。</p><p>比如已经检测到客户的状态非常不好了，客户已经开始骂人了，就一定要转到人工客服去安抚一下客户，或者说这个客户一个问题已经问了三遍了，机器人还没回答，也一定要转到人工去回答。</p><p>这些都从侧面反映出机器人的问题解决率有待提高。</p><p>同时企业在客服系统中，应该提供对机器人客服的反馈和打分机制，这样我们就可以把客户反馈不满意的问题数量标记出来，也可以自动的算出这个问题的解决率，进而知道怎么去进一步提升我们单轮对话的系统。</p><p><img src="/img/2018/unit-2-1-5.jpeg" alt="image"></p><p><strong>单轮对话还有几个难点</strong>：</p><p>第一，<strong>识别同一个问题的不同表达方式。</strong>我们会发现，在现实生活中的一句话，不同的人有不同的表达方式。如果机器人不够智能，可能就需要把上图中左边这5种问法，一个个的都录入到我们的知识库中。</p><p>但做的好的机器人，可能只要录入1个，剩下的它可以通过它的<strong>聚类</strong>，来知道都是同一个问题。</p><p>例如：</p><ul><li><p>我明天去上海出差</p></li><li><p>我要订一张去上海的机票</p></li><li><p>上海明天几点有航班</p></li><li><p>去上海，明天的</p></li><li><p>明天要去魔都出差，求订票</p></li></ul><p>这个时候，你也要识别出魔都是上海等等。</p><p>这是同一个问题的多种表达方式，它其实都等同于，用户需要订明天去上海的机票。机器人是否可以准确地识别并且进行回复，识别同一个问题的不同表达方式，这也是一个问题。</p><p><img src="/img/2018/unit-2-1-6.jpeg" alt="image"></p><p>第二，<strong>就是理解语义的细微差别，处理差异性的问题</strong>。我们继续看这张图，机器人说：</p><ul><li><p>你能干嘛？</p></li><li><p>你干嘛的？</p></li><li><p>你在干嘛？</p></li><li><p>你干嘛啊！</p></li></ul><p>这是4种不同的问法。 </p><p>如果识别不好的机器人，看起来都有“你”、“干嘛”，都是4个字的，看起来它们应该都是一个意思，但显然这4句话是完全不同的意思。</p><p>你能干嘛？我们要回答的是：“我可以帮你预定机票和酒店”。</p><p>你干嘛的？他是问机器人是干什么的，应该它说：“我是智能订票机器人”。</p><p>你在干嘛？这个其实，是一种更多偏向闲聊的，应该它说：“我在帮你订机票”。</p><p>你干嘛啊！这个时候就说明这个用户已经非常不高兴了，应该它说：“对不起，我怎么了”。</p><p>所以我们会发现，语言在叙述中的这些细微差别，因为一个引号或因为一个表达不一样，语义也是完全不一样的。</p><p>在问句非常类似，但是语义有差别的情况下，是不是能够匹配到正确的答案，也是来考验机器人处理单轮对话能力的一个非常难的地方。</p><p><img src="/img/2018/unit-2-1-7.jpeg" alt="image"></p><p>我们再来看第三个难点，<strong>聚类高频问题，自动的学习优化知识库</strong>。</p><p>刚刚我们说了，提高召回率和准确率是需要完善知识库的，但是如果纯靠人工去补充知识库是非常困难的，如果机器人没有自主学习能力，那就应了一句江湖话：“有多少人工就有多少智能”。每天不停的补数据库，最终补数据库的时间，比回答问题的时间还要长，对企业就得不偿失了。</p><p>所以这对我们的系统有一个反向的要求，机器人必须要有一种自主学习的能力。它根据所有的历史对话数据，需要知道哪些数据是类似的，把它进行<strong>聚类</strong>。自动总结，并且挖掘不在知识库内的高频问句，如果这个高频问句不在知识库中，机器人或是系统，我们总结出来，人再根据总结出来的这些无法解答的高频论据进行回答，然后再反向补充到我们的知识库里边。</p><p>这样就会螺旋累积我们的这个单轮对话的系统，有一个很好的效果。但这依然也是相对比较难的，也就是我们的单轮对话的第三个难点。<strong>聚类高频问题，自动学习优化知识库</strong>。</p><p><img src="/img/2018/unit-2-1-8.jpeg" alt="image"></p><p><strong>多轮对话</strong></p><p>介绍完了单轮对话，对应的我们就一定会想到多轮对话。</p><p>什么叫多轮对话，我们和单轮对话的特点进行一个对比，很容易就会知道什么叫多轮对话。</p><p>单轮是一个轮次，每一个轮次是没有任何关联性的。而多轮代表的就是多个轮次，每一个轮次是有相互关联的，所以他要处理不完整的语义情况。</p><p>比如说我们这个例子“北京天气怎么样”，回答完了之后，“上海呢？”，它要知道他问的是上海天气怎么样，同时它也能记录所有的历史话语，是有一个记忆的功能的。</p><p><img src="/img/2018/unit-2-1-9.jpeg" alt="image"></p><p>同样多轮对话也有一些指标。</p><p><strong>1. 多轮对话的第一个重要指标就是**</strong>任务完成率。**</p><p>任务完成率等于成功结束的多轮会话数，除以多轮会话的总数。成功结束的会话数越多，任务完成率就越高，也就代表着多轮对话系统的可用性越高。</p><p>但是有一点大家要注意，<strong>会话成功结束，并不一定意味着问题得到解决</strong>，也有可能是客户没有从机器人那里得到需要的答案。通常多轮对话这个时候应该转到人工策略，如果机器人的会话不能继续，就转给人工客户进行处理。</p><p>比如，一个用户和机器人订机票，订到中间他说我要去魔都的，因为机器人一直都没有理解魔都是什么意思，不知道是上海，所以不停的提问。</p><p>当然，用户切换了各种方式，在说上海的时候机器人可能也没有理解，机器人不停的在问：“你要从哪出发？你要从哪出发？”，这个时候就要把问答切换到人工。</p><p><img src="/img/2018/unit-2-1-10.jpeg" alt="image"></p><p><strong>2. 多轮对话的第二个指标是定制的难度。</strong></p><p>因为多轮对话很多时候就像一个APP一样，交互第一步做什么，第二步做什么是需要定制的，定制的难度决定了多轮对话系统的好坏，也就是多轮对话系统的一个评测指标。</p><p>关于定制难度，我们有3点可以说：</p><ol><li><p>是否提供完整的 API 接口和开发文档，技术人员能够快速开发和集成；</p></li><li><p>一个普通的工程师是否能够开发多轮对话模型；</p></li><li><p>界面交互体验是否优秀，是否支持直观可视化的编辑；</p></li></ol><p>我们知道专业的对话系统架构师非常少，他们薪水要求也比较高，他们懂算法，懂NLP，懂模型，但是却不是很理解真实的业务场景，所以这时候系统是不是能让普通的工程师，甚至一个普通的客服学会使用，是非常重要的。只有这样，多轮对话系统才能发挥自己的价值。</p><p><img src="/img/2018/unit-2-1-11.jpeg" alt="image"></p><p>之前给大家介绍多轮对话的时候，有人会问到这么两个问题。</p><p>第一个是说，所谓的<strong>必要信息</strong>，一定要通过与用户对话获取吗？</p><p><strong>这是不一定的</strong>，比如说我们要做一个机票酒店预定的机器人，如果用户在公众号上跟我交流，其实我已经拿到地理位置信息了。这个时候，我就不需要再问他你从哪出发，除非他故意要修改，当然这就是另外一个维度的事情了。所以对话本身包含的信息，只占总传递信息量的一小部分。更多的信息来源于说话人的身份、说话的时间地点等一系列的场景信息。这个就类比于我们和对方交流，我们要知道他的“肢体语言”。</p><p>多轮对话的信息获取方式，也不应该仅限于用户所说的话，我们要通过系统给的基础的信息去判断，这个可以通过和系统CRM打通的方式来完成。</p><p>另外，有人也会问，多轮对话一定在形式上表现为和用户的多次交流，才叫多轮对话吗？</p><p>这个也不是的，只要我们理解了他的语意，以及在其它的渠道获得的用户的信息。比如用户需要订票，我已经知道了他是从北京出发了，他跟我说要去上海，我可以直接帮他去订北京到上海的机票。</p><p>也就是说，如果用户的话语中，已经提供了充足的信息或者我从其它的渠道已经拿到了充足的信息，我们就不需要交流太多次数，不一定需要多次交互才叫多轮。</p><p><strong>多轮对话的</strong>核心<strong>是要完成任务，并不是用交互的数量来看是不是多轮对话</strong>。</p><p><img src="/img/2018/unit-2-1-12.jpeg" alt="image"></p><p>多轮对话同样也有一些难点。</p><p>第一个是，要准确的进行语义的理解，它和单轮对话相比更难了，体现在以下三块：</p><ul><li><p><strong>上下文关联</strong>：第一句说了，“<strong>要一张机票去上海”</strong>，第二句说“<strong>明天”</strong>。要能把第一句和第二句的信息关联起来，最后完成帮助用户订票的任务；</p></li><li><p><strong>支持中途打断回溯</strong>：当用户从A任务切换到B任务的时候，B任务结束后，机器人要能保存之前的信息，让A任务继续快速的完成；</p></li><li><p><strong>指代识别</strong>：假设之前所有的信息机器人都拿到了，在用户做出选择后，机器人能够识别出来用户的选择，比如“第二个吧”，“最后一个吧”。 没有必要一定让用户按照机器的标准来输入。</p></li></ul><p>这些在多轮对话中都会有一些难度。</p><p><img src="/img/2018/unit-2-1-13.jpeg" alt="image"></p><p>第二个难点是<strong>状态管理和个性化语言的生成</strong>，这个分为两块：</p><ul><li><strong>用户画像管理</strong></li></ul><p>机器人应该做出一个千人千面的个性化问答反馈。</p><p>比如去咨询教育机构，在北京的用户，机器人应该自动给他推荐北京的教育机构。在上海的用户，机器人应该自动给他推荐上海的教育机构。这样用户才会觉得，这个机器人还能办点事儿，还稍微有点智能。所以，即使相同的问题，不同地域的人得到的答案是完全不同的；</p><p>再举一个例子，比如做电商销售护肤品或者销售化妆品，这时候不同的用户可能在我们的数据库里已经有不同的记录了，有关注肤质的、关注价格的、关注功效的，所以当一个用户说：“帮我推荐一个化妆品”的时候，机器人也要根据不同的用户背景，给出不同的推荐；</p><ul><li><strong>对话状态管理</strong></li></ul><p>这是多轮对话中非常重要的一环，我也用机票酒店预定的例子给大家举例。</p><p>比如我要订一张机票，最简单的可能需要有始发地、目的地，出发时间以及乘机人这四项信息。那么大概有4*4=16种状态，当用户说不同的话的时候，机器人的状态也是不一样的。</p><p>比如第一个，请帮我订一张3月28日北京到上海的机票。这个时候我们要引导用户提供他的身份信息，因为我已经把前三个信息都收集到了。始发地是北京，目的地是上海，出发时间是3月28日。</p><p>再看第二个，请帮我订北京到上海的机票，这个时候机器人就需要同时引导用户，说出出发时间和乘机人信息。</p><p><strong>对话状态管理也是多轮对话中很重要的一环，或者说是难点之一</strong>。</p><p><img src="/img/2018/unit-2-1-14.jpeg" alt="image"></p><p><strong>意图识别</strong></p><p>接下来，再给大家介绍一个名词，叫做<strong>意图识别</strong>。</p><p>意图识别是指：<strong>提问者的潜在目的以及他的表达诉求。</strong></p><p>你可以把它理解成一句话的目的是什么。比如【我要订一张北京到上海的机票】的意图是订机票。</p><p>什么情况下需要意图识别呢？当系统需要将用户说的话参数化的时候，换句话说，任务型对话需要用到意图识别。而不需要把用户说的话参数化的时候，也就是问答型对话不需要意图识别。</p><p>意图识别也和预置的行业知识库有关，知识库越完善，机器人对用户意图的识别就会越高。整个行业预置知识库也是随着系统上线之后，不停的根据用户和机器人的交互，收集到更多的语料和反馈，反复迭代来变得越来越完整的。</p><p>在相同的意图大类下，还可能有更详细的意图的细分领域。比如，请问你们发哪家快递？请问我的快递走到哪儿了？大的意图可能都是物流咨询，但你还是可以再把它做小的意图分类。你们发哪家快递，属于选择快递公司的意图。请问我的快递走到哪了，属于物流状态查询的意图。</p><p>通过意图识别这块的介绍，我们会发现意图识别也有难点。</p><p>意图识别的难点就是没有一个固定的评价标准，刚刚我们看的这个例子，用户的意图可能都是人的主观判断为准。刚才说的你可以把它分成一个大类，也可以再把它分成一个小类，然后在小类中它代表的意图名称有可能不一样，所以相对意图的分类，它可能也比较没有标准。<strong>没有标准的事一般都会比较复杂</strong>。</p><p><img src="/img/2018/unit-2-1-15.jpeg" alt="image"></p><p>那么还有其它四个难点：</p><ul><li>1. 用户输入不规范，同一个问题的不同用户的表达方式存在差异</li></ul><p>比如说，有人会在我们的系统里说：“帮我订一张深沪的高铁”，深沪的高铁它代表的是深圳和上海，用户如果说深沪高铁，他可能是为了快速的打字，快速的完成，机器人是不是能够理解他和另外一个用户说的，帮我订一张深圳到上海的高铁，是同样的一个意思。</p><ul><li>2. 多意图的判断</li></ul><p>比如说，水这个词其实很常见，但在不同的场景里边意思是不一样的。如果我说：“我口渴了，要喝点水”，代表的是我们喝的水；如果我是一个电商平台，专门卖化妆品的，用户说：“我要水”，那它可能理解的是我要爽肤水，而不是我口渴的意思。</p><ul><li>3. 数据的冷启动，必须要基于大量的数据，才能定义并获取准确的意图</li></ul><p>最开始的数据获取相对也比较难。</p><ul><li>4. 没有固定的评价标准 </li></ul><p>很多时候又有大意图，又有小意图。这些分类对于具体业务人员来说是需要非常耐心的整理的。</p><p><img src="/img/2018/unit-2-1-16.jpeg" alt="image"></p><p>接下来再给大家介绍最后的一些专业的话术。</p><p>一个叫做<strong>基于语义的解析</strong>，还有<strong>基于语义的匹配</strong>。</p><p><img src="/img/2018/unit-2-1-17.jpeg" alt="image"></p><p><strong>基于语义解析的对话理解</strong></p><p>要识别用户的意图，并将其参数化。</p><p>什么叫参数化？</p><p>今晚帮我在全聚德定一个包厢，十个人的。</p><p>这句话人类是能听懂的，对于机器来说，它可能需要结构化的数据。参数化就是相当于把它做成一个结构化的数据</p><ul><li><p>餐厅名：全聚德</p></li><li><p>时间：2017.07.05，18点</p></li><li><p>人数：10</p></li></ul><p>做这种非常参数化的数据给到系统，然后意图我们要去识别出来是预定餐厅。这个就叫做基于语义解析的对话理解。 </p><p><img src="/img/2018/unit-2-1-18.jpeg" alt="image"></p><p>基于语义解析有三个常见技术手段，这里简单的给大家说一下。</p><ul><li>第一块是启发式规则和推导</li></ul><p>启发式规则和推导的优势就是，只要少量的数据我们就可以把它启动。因为咱们刚才说了，很多时候冷启动是很难的，尤其我们刚搭建一个系统的时候，很难达到上千条或上百条的这种对话都很难。</p><p>另外，它的优化手段也是直观可控的，但是它需要大量专业的知识和背景知识，而且效果很快就达到瓶颈了，可迁移性较差。我做好了一个机票酒店预定的机器人，紧接着我去订一个旅游门票，可能就要重新再走一遍。</p><ul><li>第二块是传统的机器学习</li></ul><p>第二块是传统的机器学习，它是用数据和特征来进行驱动和优化，有较好的泛化效果。</p><p>泛化效果就是说不同的话，多个问法，它能够听明白，然后一句话多个问法都能够把它归类，一起去理解。但是它有一个劣势，就是需要咱们这个领域的特征工程，需要标注大量的数据，可迁移性较差，会比启发式规则强点，可控性和可解释性也较差。</p><ul><li>第三块是深度机器学习</li></ul><p>深度的机器学习是纯数据驱动的，有更好的泛化效果，可迁移性较强。它的劣势是需要海量的语料，可控性和可解释性针对传统的机器学习会更差一点。因为我们知道机器学习，就是我们丢大量的数据喂给机器，然后告诉它这个是输入，那个是输出的结果，然后学习搜索出把输入计算成输出结果的公式，接着就可以用这个公式去预测，新的输入对应的结果是什么样的。这个东西很难去解释，为什么就识别出了。</p><p>比如说图像的一个识别，为什么就识别出来这个是猫，那个是狗，这个是很难去解释的。如果不能解释，我们可能就没有办法去优化某一点，所以我们就说所有的机器学习，它的可控性和可解释性相对较差。</p><p>这个是给大家做的一个简单介绍。</p><p><img src="/img/2018/unit-2-1-19.jpeg" alt="image"></p><p><strong>基于语义匹配的对话理解</strong></p><p>另外一块儿是基于语义匹配的对话理解，比如说这句话：“我想了解现金贷怎么申请”，这就要从问答库中找出整句语义与这句话最相似的问题，然后给出这个相似问题的答案。</p><p>那么我想了解现金贷怎么申请，因为咱们的知识库里有这个标准的问题，现金贷借现金的申请流程是什么，然后下面就可以把回答推过去，所以它其实是语义的匹配，基于语义匹配的对话理解</p><p><img src="/img/2018/unit-2-1-20.jpeg" alt="image"></p><p>基于语义匹配的对话理解的常见技术手段，给大家介绍一下。</p><p>用户输入查询，在语言处理里边，然后通过语义计算，在问答数据库里找到相似的问题，再把这个相似问题对应的答案推出去。</p><p>比如，我想了解一下限号政策，在问答数据库里找到和它匹配的是限号政策，把答案推过去。</p><p>这一节我简单的介绍了一下，对话系统里边常用的一些专用术语，我们只有了解了这些专用术语，在后续我们学习具体的方法的时候，也会得心应手。</p><p>这节课就先到这里了，谢谢大家，下期再会！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连载 | 1.对话系统趋势分析</title>
      <link href="/chatbot/2018-8-9-unit-1.html"/>
      <url>/chatbot/2018-8-9-unit-1.html</url>
      
        <content type="html"><![CDATA[<p>本章我会带领大家了解对话系统的趋势，以及为什么我们要搭建一个对话系统。</p><p><img src="/img/2018/unit-1-1.jpeg" alt="unit-1"></p><p><strong>前Apple交互设计师</strong>是这样说的：“在未来的25年没有人会再点击下拉菜单，但是人们仍然会指着地图互相纠正对方说的话，这是最基本的。好的信息软件在处理信息的时候会更加贴近人类本来的方式，而不是电脑”。</p><p>换句话说，未来的交互更多的是机器和电脑适应人，而不是人按照电脑的方式一步一步的操作完成任务。</p><p><img src="/img/2018/unit-1-2.jpeg" alt="unit-2"></p><p>这是交互趋势的变化：从80年代以PC为主的交互方式，到90年代的<strong>互联网时代</strong>，再后来的<strong>移动互联网时代</strong>，以及现在的<strong>人工智能时代</strong>，我们会发现，信息的交互方式一直在演进。</p><p><strong>从最开始的鼠标键盘，到后来的以触摸为主的移动交互。</strong></p><p>人类一直在追求更加便捷的人接对话方式。能用一句话解决的事情，我们就不需要再按照电脑的方式一步一步的操作。</p><p>也就是说，<strong>接下来是对话交互的时代，过去的成百上千个app会逐渐演化成未来的成百上千个chatbot。</strong>  </p><p><img src="/img/2018/unit-1-3.jpeg" alt="unit-3"></p><p>这是未来交互趋势的变化，发现交互是从没有<strong>AI</strong>到有<strong>AI</strong>，从有界面到无界面的转换。话说，就是机器从不懂你到懂你，UI界面会变得越来越少，CUI（Conversation UI）会逐渐发展起来。 </p><p><img src="/img/2018/unit-1-4.jpeg" alt="unit-4"></p><p>我们发现一个很有意思的现象：</p><p>从手机到智能手机的一个最大变化，是因为它有了操作系统。</p><p>而从家居到智能家居，机器人到智能机器人，客服到智能客服，是因为他们有了对话的能力，或者说是有了对话系统。</p><p>所以，我们说未来的对话系统将会逐渐成为新的操作系统，换句话说，对话系统将是人工智能时代的一个必要组件，<strong>任何产品依赖对话系统为之赋予智能的能力</strong>。</p><p><strong>在未来，每一个行业都像现在拥有自己的APP一样需要拥有自己的对话机器人。</strong>  </p><p><img src="/img/2018/unit-1-5.jpeg" alt="unit-5"></p><p>过去我们依赖操作系统去完成游戏、听音乐、看视频，买东西，而未来，所有这些操作中的一大部分都会逐渐交给对话系统去完成。</p><p><img src="/img/2018/unit-1-6.jpeg" alt="unit-6"></p><p><strong>对话交互是一种新的UI</strong>。网站和App强制用户像机器人一样去思考问题，而对话系统是强制机器人像人一样思考问题，让机器去适应人，而不是人去适应机器。</p><p><img src="/img/2018/unit-1-7.jpeg" alt="unit-7"></p><p>当然，未来的交互方式并不会是单一的对话交互，它会变成一个多感官的综合交互，包括对话、视觉、触觉，但我们这一系列的课程主要是讲对话的。</p><p>进一步为各位科普两个观念：</p><ul><li><p>GUI：是图形用户界面接口，就是我们过去的电脑，包括手机都是图形化界面，需要用户根据设计者的要求，一步步的点击操作完成。</p></li><li><p>CUI：是Conversation的User Interface，通过对话去完成所有的交互任务，在未来，交互会逐渐从GUI 转到CUI上来。 </p></li></ul><p><img src="/img/2018/unit-1-8.jpeg" alt="unit-8"><br>对话交互的产品形态也非常广泛，可以是商用机器人，家用机器人，儿童故事机、智能音响、智能家居、车载系统、智能客服以及个人助手类的产品。所有的产品通过对话系统为它赋予智能的能力。</p><p><img src="/img/2018/unit-1-9.jpeg" alt="unit-9"></p><p>对话交互的目标是希望机器像人一样对话，对话系统训练的要求是需要有合理的逻辑，正确的场景，包括对话的上下文关联，角色的设定。你要知道，机器人是以一个什么样的角色去扮演，用什么样的口气去和你的客户进行交流，包括语境的感知。</p><p>举个例子来说：用户已经非常愤怒了，我们是不是要应该把机器人的对话终止，立刻切换到人工去为用户服务。</p><p>最后，为大家推荐未来的一个新兴的职业：<strong>对话系统训练师</strong>，他可能是一个设计师，因为他要设计整个的流程，还需要了解基本的开发的话术，基本开发的一些原理，同时他也需要是一个语言学家，所有的对话都需要用合理的话术去做，包括要了解用户的心理。甚至他还是一个剧作家，他去编写所有对话的故事线，带着用户一步一步的完成任务。</p><p><strong>简单的来说，对话交互是通过梳理业务逻辑，让机器人辅助用户以最便捷的方式获取服务。</strong></p><p><img src="/img/2018/unit-1-10.jpeg" alt="unit-10"></p><p><strong>如果你希望成为一个对话系统训练师</strong>，<strong>这一系列课程会带着你从入门到精通</strong>。</p><p><strong>如果你是传统行业的产品设计师或开发工程师</strong>，对人工智能或者对话系统非常感兴趣，通过这一系列的课程，也可以帮助你完成职场转型。</p><p><strong>如果你是市场拓展或者管理者</strong>，也希望你通过这一系列课程，了解技术的发展是什么样的，了解技术的边境是什么样的，了解技术的局限是什么样的，从而能更好地管理自己公司产品的发展。</p><p>换个角度来说，如果你从来没有接触过代码，通过我的方法论和介绍相关的工具，你可以搭建一个满足自己需求的聊天机器人。</p><p><strong>如果你是一名开发者</strong>，通过本课程的一系列方法，你会从产品维度知道，如何搭建一个更加符合用户需求，能够帮助用户完成任务的聊天机器人或者对话机器人。</p><p><img src="/img/2018/unit-1-11.jpeg" alt="unit-11"></p><p>最后我也给大家简单介绍一下，什么是我们一直在说的，<strong>对话系统训练师，他到底是什么样的一个角色</strong>。</p><p>他其实是在系统和终端用户之间，从开始到结束的整个对话过程中，思考着正在解决的问题，以及用户需要什么来帮助他完成任务。</p><p>他要知道用户是谁，也要负责产品的设计、原型的设计，并且去描述所有用户的行为，他还要知道底层的所有技术优点和缺点，在系统上线之后，通过用户的行为去分析这个系统有什么样的不足，进而去更新改进这个系统。</p><p>甚至在整个的流程中，因为我们的系统不可能完全那么智能，如果有人参与的时候，他要知道在什么时候让客服去接入，接入的时候，是怎么样的一个流程平滑过渡。</p><p><img src="/img/2018/unit-1-12.jpeg" alt="unit-12"></p><p>希望大家在课后能够进一步思考：</p><ul><li><p>对话设计和屏幕的交互，是一个什么样的关系？</p></li><li><p>对话机器人需要有什么样的性格？</p></li><li><p>如何去管理用户的预期值？</p></li><li><p>如何弥补对话过程中带来的挫败感？</p></li><li><p>以及交互过程中的用户情感如何控制？</p></li></ul><p>这就是我们第一节课给大家做的简短的介绍，后面我们会更加细致的说明对话系统的很多概念，包括一些工具和搭建的过程。 </p><p>先到这里，谢谢大家！下期再会！</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 百度 </tag>
            
            <tag> UNIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将业务代码从Puppeteer 迁移到Padchat</title>
      <link href="/project/2018-06-24-migrating-wechaty-v0.14-to-v0.18-guide-from-puppeteer-to-padchat-zh.html"/>
      <url>/project/2018-06-24-migrating-wechaty-v0.14-to-v0.18-guide-from-puppeteer-to-padchat-zh.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Author: <a href="https://github.com/lijiarui" target="_blank" rel="noopener">@lijiarui</a> Founder of BotOrange, Author of Wechaty.</p></blockquote><p>Wechaty 近期有了很大的升级，从0.14版本之后，开始陆续支持各类非Web 版本的解决方案。我的业务逻辑代码重度依赖于wechaty，所以自从wechaty release 了0.15 版本以后，我开始将我们的业务逻辑代码陆续从Web版本迁移到了非Web版本上来。</p><p>本篇博客主要介绍了我是如何将业务逻辑代码，从Puppeteer 迁移到 Padchat上的。</p><p><img src="/img/2018/code-migration-zh.png" alt="code"></p><h1 id="1-Puppeteer-VS-Padchat"><a href="#1-Puppeteer-VS-Padchat" class="headerlink" title="1. Puppeteer VS Padchat"></a>1. Puppeteer VS Padchat</h1><p>首先进行一下名词解释，在说这两个名词之前，先介绍一下Puppet</p><p><strong>Puppet 系统</strong>是一个用来连接Wechaty API 和其他的微信实现方式的连接器。简单的来说，通过微信API进行微信自动化操作会有很多种不同的是实现方式，比如基于网页微信的实现，基于ipad协议的实现，基于ios hook 的实现，基于windows hook 的实现，基于Android xposed的实现等等。不同的实现方法代码是完全不一样的。如果没有puppet 帮助桥接不同的实现方法，开发者就会有不同的接入API，这对上层业务逻辑的开发非常不方便，因此这是Puppet 系统设计的初衷。</p><p>现在再来介绍Puppeteer 和 Padchat 就会比较清楚了:</p><p><img src="https://github.com/Chatie/wechaty/wiki/image/abstract-info.png" alt></p><ul><li>Puppeteer<br>基于网页微信的实现，通过puppet连接到Wechaty API。</li><li>Padchat<br>基于ipad 协议的实现，通过puppet 连接到Wechaty API。</li></ul><p>具体的Puppet 和各个实现方法，可以参考下图和这篇博客：<a href="https://blog.chatie.io/wechaty-new-release-version-0.16/" target="_blank" rel="noopener">Wechaty New Version 0.16(BETA, with super power) Released</a></p><h1 id="2-如何无缝切换"><a href="#2-如何无缝切换" class="headerlink" title="2. 如何无缝切换"></a>2. 如何无缝切换</h1><p>默认情况下，启动wechaty 是使用puppeteer的，切换成padchat 需要再运行的时候设置环境变量。</p><p>更多信息详细见wiki<a href="https://github.com/Chatie/wechaty/wiki/Puppet#2-run" target="_blank" rel="noopener">How to run a new wecahty-puppet-padchat</a></p><h2 id="Git-源码的方式"><a href="#Git-源码的方式" class="headerlink" title="Git 源码的方式"></a>Git 源码的方式</h2><h3 id="1-拉下github最新的代码"><a href="#1-拉下github最新的代码" class="headerlink" title="1. 拉下github最新的代码"></a>1. 拉下github最新的代码</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line">rm -rf package-lock.json</span><br><span class="line">rm -rf node_modules/</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="2-获取token并设置环境变量"><a href="#2-获取token并设置环境变量" class="headerlink" title="2. 获取token并设置环境变量"></a>2. 获取token并设置环境变量</h3><p>在<a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">Wechaty v0.17 Padchat Testing: Win32/iPad/Android/iOS/API Puppets Support are comming!</a> 中进行alpha test 版本的内测报名，并获取到token： <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-设置环境变量并运行"><a href="#3-设置环境变量并运行" class="headerlink" title="3. 设置环境变量并运行"></a>3. 设置环境变量并运行</h3><p>记得要设置<code>WECHATY_PUPPET=padchat</code> 来切换puppet版本。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WECHATY_PUPPET_PADCHAT_TOKEN=your padchat token WECHATY_PUPPET=padchat  node examples/ding-dong-bot.js</span><br></pre></td></tr></table></figure></p><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><h3 id="1-安装到最新版本的npm"><a href="#1-安装到最新版本的npm" class="headerlink" title="1. 安装到最新版本的npm"></a>1. 安装到最新版本的npm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install wechaty@next</span><br></pre></td></tr></table></figure><h3 id="2-获取token并设置环境变量-1"><a href="#2-获取token并设置环境变量-1" class="headerlink" title="2. 获取token并设置环境变量"></a>2. 获取token并设置环境变量</h3><p>在<a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">#1296</a> 中进行alpha test 版本的内测报名，并获取到token： <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-设置环境变量并运行-1"><a href="#3-设置环境变量并运行-1" class="headerlink" title="3. 设置环境变量并运行"></a>3. 设置环境变量并运行</h3><p>记得要设置<code>WECHATY_PUPPET=padchat</code> 来切换puppet版本。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WECHATY_PUPPET_PADCHAT_TOKEN=your padchat token WECHATY_PUPPET=padchat   node examples/ding-dong-bot.js</span><br></pre></td></tr></table></figure></p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="1-拉下最新版本的docker-镜像"><a href="#1-拉下最新版本的docker-镜像" class="headerlink" title="1. 拉下最新版本的docker 镜像"></a>1. 拉下最新版本的docker 镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull zixia/wechaty:latest</span><br></pre></td></tr></table></figure><h3 id="2-获取token"><a href="#2-获取token" class="headerlink" title="2. 获取token"></a>2. 获取token</h3><p>在<a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">#1296</a> 中进行alpha test 版本的内测报名，并获取到token： <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-设置环境变量并运行-2"><a href="#3-设置环境变量并运行-2" class="headerlink" title="3. 设置环境变量并运行"></a>3. 设置环境变量并运行</h3><ul><li>记得要设置<code>WECHATY_PUPPET=padchat</code> 来切换puppet版本。</li><li>记得docker 版本不要重复安装wechaty 的npm 包，检查方法： 查看node_module 是否有wechaty，如果有就删掉它</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -t -i  -e WECHATY_PUPPET="padchat" -e WECHATY_PUPPET_PADCHAT_TOKEN="your token"  --volume="$(pwd)":/bot --name=wechaty zixia/wechaty:latest examples/ding-dong-bot.ts</span><br></pre></td></tr></table></figure><h1 id="3-代码检查"><a href="#3-代码检查" class="headerlink" title="3. 代码检查"></a>3. 代码检查</h1><p>wechaty 是使用typescript 写的，都是强类型的，我之前的代码没有统一typings，由于切换到padchat 以后，很多函数由同步变成了异步，所以索性我的代码也统一用了typings，并进行了类型检查。</p><p>人是一定会出错的，所以我们需要通过代码检查工具来发现代码错误、统一代码风格。我使用 <strong>TSLint</strong> 进行 TypeScript 的代码检查，编辑器用的是VSCODE。<strong>TSLint</strong> 支持自定义的代码检测规则。</p><h2 id="为什么需要代码检查"><a href="#为什么需要代码检查" class="headerlink" title="为什么需要代码检查"></a>为什么需要代码检查</h2><p>有人会觉得，JavaScript 非常灵活，所以需要代码检查。而 TypeScript 已经能够在编译阶段检查出很多问题了，为什么还需要代码检查呢？</p><p>因为 TypeScript 关注的重心是类型的匹配，而不是代码风格。当团队的人员越来越多时，同样的逻辑不同的人写出来可能会有很大的区别：</p><ul><li>缩进应该是四个空格还是两个空格？</li><li>是否应该禁用 var？</li><li>接口名是否应该以 I 开头？</li><li>是否应该强制使用 === 而不是 ==？</li><li>是否需要分号？</li></ul><p>这些问题 TypeScript 不会关注，但是却影响到多人协作开发时的效率、代码的可理解性以及可维护性。</p><p><a href="https://ts.xcatliu.com/engineering/lint.html" target="_blank" rel="noopener">这篇文章</a> 给了很好的例子和相关说明，有兴趣的同学可以移步去看看</p><p>简单的说，虽然发现代码错误比统一的代码风格更重要，但是当一个项目越来越庞大，开发人员也越来越多的时候，代码风格的约束还是必不可少的。</p><h2 id="使用tslint-工具代码检查"><a href="#使用tslint-工具代码检查" class="headerlink" title="使用tslint 工具代码检查"></a>使用tslint 工具代码检查</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>TSLint 的使用比较简单，参考<a href="https://palantir.github.io/tslint/" target="_blank" rel="noopener">官网</a>的步骤安装到本地即可：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save-dev tslint</span><br><span class="line">npm install tslint-config-standard</span><br></pre></td></tr></table></figure></p><h3 id="2-创建配置文件"><a href="#2-创建配置文件" class="headerlink" title="2. 创建配置文件"></a>2. 创建配置文件</h3><p>创建配置文件 <code>tslint.json</code></p><p>tslint 和tsconfig 建议参考wechaty 的配置：</p><ul><li><a href="https://github.com/Chatie/wechaty/blob/master/tslint.json" target="_blank" rel="noopener">tslint 配置文件</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/tsconfig.json" target="_blank" rel="noopener">tsconfig 配置文件</a></li></ul><p>这里针对wechaty 的一些配置进行说明</p><ul><li>“strict” : true<br>启用所有严格类型检查选项。 启用 –strict相当于启用 –noImplicitAny, –noImplicitThis, –alwaysStrict,–strictNullChecks和 –strictFunctionTypes和–strictPropertyInitialization。</li><li>“noEmitOnError”              : true<br>报错时不生成输出文件。</li><li>“noUnusedLocals”             : true<br>若有未使用的局部变量则抛错。</li><li>“noImplicitReturns”          : true<br>不是函数的所有返回路径都有返回值时报错。</li><li>“noFallthroughCasesInSwitch” : true<br>报告switch语句的fallthrough错误。（即，不允许switch的case语句贯穿）</li><li>“strictNullChecks”           : true<br>在严格的 null检查模式下， null和 undefined值不包含在任何类型里，只允许用它们自己和 any来赋值（有个例外， undefined可以赋值到 void）</li><li>“noImplicitAny”              : true<br>在表达式和声明上有隐含的 any类型时报错。 相关issue: <a href="https://github.com/Chatie/wechaty/issues/1383" target="_blank" rel="noopener">ts-node 7.0 breaking change: Skip <code>files</code> by default</a></li><li>“no-floating-promises”: true<br>如果有async 方法，要求必须使用await。相关issue: <a href="https://github.com/Chatie/wechaty/issues/1346" target="_blank" rel="noopener">Prevent the Floating Promise in the Async/Await Code</a></li><li>“noUnusedParameters”         : true<br>若有未使用的参数则抛错。</li><li>“noImplicitThis”             : true<br>当 this表达式的值为 any类型的时候，生成一个错误。</li></ul><p>更多参考<a href="https://tslang.cn/docs/handbook/compiler-options.html" target="_blank" rel="noopener">typescript 文档</a></p><h3 id="3-为-package-json-添加-tslint-脚本"><a href="#3-为-package-json-添加-tslint-脚本" class="headerlink" title="3. 为 package.json 添加 tslint 脚本"></a>3. 为 package.json 添加 tslint 脚本</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"lint"</span>: <span class="string">"tslint --project . src/**/*.ts src/**/*.tsx"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 –project . 会要求 tslint 使用当前目录的 tsconfig.json 配置来获取类型信息，很多规则需要类型信息才能生效。</p><p>此时执行 <code>npm run lint</code> 即可检查整个项目</p><h3 id="4-在-VSCode-中集成-TSLint-检查"><a href="#4-在-VSCode-中集成-TSLint-检查" class="headerlink" title="4. 在 VSCode 中集成 TSLint 检查"></a>4. 在 VSCode 中集成 TSLint 检查</h3><p>在 VSCode 中安装 <code>tslint</code> 插件即可，安装好之后，默认是开启的状态。</p><h3 id="5-彩蛋"><a href="#5-彩蛋" class="headerlink" title="5. 彩蛋"></a>5. 彩蛋</h3><p>唔。。。这里再赠送一个VSCode 插件彩蛋：editorconfig : 让使用不同编辑器的开发者在共同开发一个项目时“无痛”地遵循编码规范。更多说明见<a href="https://editorconfig.org/" target="_blank" rel="noopener">editorconfig官网</a> </p><p>wechaty 的配置见 <a href="https://github.com/Chatie/wechaty/blob/master/.editorconfig" target="_blank" rel="noopener">.editorconfig</a></p><h1 id="4-BREAKING-CHANGES"><a href="#4-BREAKING-CHANGES" class="headerlink" title="4. BREAKING CHANGES"></a>4. BREAKING CHANGES</h1><p>wechaty 升级版本后(参考<a href="https://blog.chatie.io/wechaty-new-release-version-0.16/" target="_blank" rel="noopener">博客</a>)，虽然尽可能的减少接口变动，但是为了适配padchat， 还是会有一些接口有了不同程度的变化。因此在进行代码迁移的时候，我们也需要修改原来的部分代码，我把相关内容列在下面了，更多内容，建议仔细阅读<a href="https://github.com/chatie/wechaty/blob/master/CHANGELOG.md" target="_blank" rel="noopener">CHANGE LOG</a></p><h2 id="bot-init-变成了-bot-start"><a href="#bot-init-变成了-bot-start" class="headerlink" title="bot.init() 变成了 bot.start()"></a>bot.init() 变成了 bot.start()</h2><h2 id="bot-quit-变成了-bot-stop"><a href="#bot-quit-变成了-bot-stop" class="headerlink" title="bot.quit() 变成了 bot.stop()"></a>bot.quit() 变成了 bot.stop()</h2><h2 id="FriendRequest-改成了-Friendship"><a href="#FriendRequest-改成了-Friendship" class="headerlink" title="FriendRequest 改成了 Friendship"></a>FriendRequest 改成了 Friendship</h2><p><code>FriendRequest</code> class refactored.</p><h3 id="之前-v0-14-或者更低"><a href="#之前-v0-14-或者更低" class="headerlink" title="之前 (v0.14 或者更低)"></a>之前 (v0.14 或者更低)</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">wechaty.on(<span class="string">'friend'</span>, <span class="function">(<span class="params">contact, request</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!request) &#123;</span><br><span class="line">    <span class="comment">// this is a friend request confirmation event</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// this is a friend request</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="之后-v0-16-或者更高"><a href="#之后-v0-16-或者更高" class="headerlink" title="之后 (v0.16 或者更高)"></a>之后 (v0.16 或者更高)</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">wechaty.on(<span class="string">'friendship'</span>, <span class="function"><span class="params">request</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (request.type()) &#123;</span><br><span class="line">    <span class="keyword">case</span> FriendRequest.Type.RECEIVE:</span><br><span class="line">      <span class="comment">// this is a friend request request</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> FriendRequest.Type.CONFIRM:</span><br><span class="line">      <span class="comment">// this is a friend request confirmation</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>建议仔细看代码<a href="https://github.com/Chatie/wechaty/blob/master/examples/friend-bot.ts" target="_blank" rel="noopener">friend-bot.ts</a></p><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1196" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 on(‘friend`) arguments changed!</a></li><li><a href="https://github.com/Chatie/wechaty/issues/1312" target="_blank" rel="noopener">BREAKING CHANGES v0.16: FriendRequest class will be replaced with Friendship</a></li></ul><h2 id="Message-content-改成了-Message-text"><a href="#Message-content-改成了-Message-text" class="headerlink" title="Message.content() 改成了 Message.text()"></a>Message.content() 改成了 Message.text()</h2><p>从 v0.16, Message.content() 依然是可被兼容的状态.<br>从 v0.18, Message.content() 会彻底弃用.</p><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1163" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 will replace <code>Message.content()</code> with <code>Message.text()</code></a></li></ul><h2 id="MediaMessage-将会被弃用"><a href="#MediaMessage-将会被弃用" class="headerlink" title="MediaMessage 将会被弃用"></a>MediaMessage 将会被弃用</h2><p>从 0.16, MediaMessage 依然是可被兼容的状态.<br>从 v0.18, MediaMessage 会彻底弃用.</p><p>未来统一使用 Message</p><p>代码变化<br><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- bot.say(new MediaMessage('/image.png')</span></span><br><span class="line"><span class="addition">+ bot.say(new Message('/image.png')</span></span><br></pre></td></tr></table></figure></p><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1164" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 will remove <code>MediaMessage</code> class </a></li></ul><h3 id="介绍一个好用的发送图片的功能"><a href="#介绍一个好用的发送图片的功能" class="headerlink" title="介绍一个好用的发送图片的功能"></a>介绍一个好用的发送图片的功能</h3><p>介绍一个非常好用的包: <a href="https://www.npmjs.com/package/file-box" target="_blank" rel="noopener">FileBox 官网</a>, 一个将文件数据打包方便读取的npm 包，可以轻松地在具有最少有效负载的服务器之间进行传输，而不会比其位置（本地路径，远程URL或云存储）。详细使用方法见官网。</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fileBox = FileBox.fromStream(</span><br><span class="line">fs.createReadStream(BOT_QR_CODE_IMAGE_FILE),</span><br><span class="line">BOT_QR_CODE_IMAGE_FILE,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Wechaty-self-改成了-Wechaty-userSelf"><a href="#Wechaty-self-改成了-Wechaty-userSelf" class="headerlink" title="Wechaty.self() 改成了 Wechaty.userSelf()"></a>Wechaty.self() 改成了 Wechaty.userSelf()</h2><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1369" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Wechaty.self() eprecated, use Wechaty.userSelf() instead</a></li></ul><h2 id="Contact-personal-和-Contact-official-改成了-Contact-type"><a href="#Contact-personal-和-Contact-official-改成了-Contact-type" class="headerlink" title="Contact.personal() 和 Contact.official() 改成了 Contact.type()"></a>Contact.personal() 和 Contact.official() 改成了 Contact.type()</h2><h3 id="之前"><a href="#之前" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isPersonal = contact.personal()</span><br><span class="line"><span class="keyword">const</span> isOfficial = contact.official()</span><br></pre></td></tr></table></figure><h3 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the type of the Contact</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returns ContactType - Contact.Type.PERSONAL for personal account, Contact.Type.OFFICIAL for official account</span></span><br><span class="line"><span class="comment"> * @example</span></span><br><span class="line"><span class="comment"> * const isOfficial = contact.type() === Contact.Type.OFFICIAL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">type</span> = Contact.type()</span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1366" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Contact.personal() and Contact.official() deprecated, use Contact.type() instead</a></li></ul><h2 id="Room-add-返回值从Promise-变成了-Promise"><a href="#Room-add-返回值从Promise-变成了-Promise" class="headerlink" title="Room.add() 返回值从Promise 变成了 Promise"></a>Room.add() 返回值从Promise<boolean> 变成了 Promise<void></void></boolean></h2><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1362" target="_blank" rel="noopener">BREAKING CHANGE v0.16 room.add return Promise<void> instead of return Promise<boolean> </boolean></void></a></li></ul><h2 id="Room-topic-从Sync-变成了-Async"><a href="#Room-topic-从Sync-变成了-Async" class="headerlink" title="Room.topic() 从Sync 变成了 Async"></a>Room.topic() 从Sync 变成了 Async</h2><h3 id="之前-1"><a href="#之前-1" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> topic = room.topic()</span><br></pre></td></tr></table></figure><h3 id="现在-1"><a href="#现在-1" class="headerlink" title="现在"></a>现在</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> topic = <span class="keyword">await</span> room.topic()</span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1295" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.topic()</code> change from Sycn to Async</a></li></ul><h2 id="Room-alias-contact-从Sync-变成了-Async"><a href="#Room-alias-contact-从Sync-变成了-Async" class="headerlink" title="Room.alias(contact) 从Sync 变成了 Async"></a>Room.alias(contact) 从Sync 变成了 Async</h2><h3 id="之前-2"><a href="#之前-2" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> alias = room.alias(contact)</span><br></pre></td></tr></table></figure><h3 id="现在-2"><a href="#现在-2" class="headerlink" title="现在"></a>现在</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> alias = <span class="keyword">await</span> room.alias(contact)</span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1293" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.alias(contact)</code> change from Sycn to Async</a></li></ul><h2 id="Room-memberList-从Sync-变成了-Async"><a href="#Room-memberList-从Sync-变成了-Async" class="headerlink" title="Room.memberList() 从Sync 变成了 Async"></a>Room.memberList() 从Sync 变成了 Async</h2><h3 id="之前-3"><a href="#之前-3" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> memberList = room.memberList()</span><br></pre></td></tr></table></figure><h3 id="现在-3"><a href="#现在-3" class="headerlink" title="现在"></a>现在</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> memberList = <span class="keyword">await</span> room.memberList()</span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1290" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.memberList()</code> change from Sycn to Async</a></li></ul><h2 id="Room-member-从Sync-变成了-Async"><a href="#Room-member-从Sync-变成了-Async" class="headerlink" title="Room.member() 从Sync 变成了 Async"></a>Room.member() 从Sync 变成了 Async</h2><h3 id="之前-4"><a href="#之前-4" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> contact = room.member(<span class="string">'Huan'</span>)</span><br></pre></td></tr></table></figure><h3 id="现在-4"><a href="#现在-4" class="headerlink" title="现在"></a>现在</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const contact = room.member('Huan')</span></span><br><span class="line"><span class="addition">+ const contact = await room.member('Huan')</span></span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1258" target="_blank" rel="noopener">BREAKING CHANGES: v0.16 <code>Room.member()</code> from <code>sync</code> to <code>async</code></a></li></ul><h2 id="Room-has-contact-从Sync-变成了-Async"><a href="#Room-has-contact-从Sync-变成了-Async" class="headerlink" title="Room.has(contact) 从Sync 变成了 Async"></a>Room.has(contact) 从Sync 变成了 Async</h2><h3 id="之前-5"><a href="#之前-5" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> exist = room.has(contact)</span><br></pre></td></tr></table></figure><h3 id="现在-5"><a href="#现在-5" class="headerlink" title="现在"></a>现在</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> exist = <span class="keyword">await</span> room.has(contact)</span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1289" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.has(contact)</code> change from Sycn to Async</a></li></ul><h2 id="Message-mention-从Sync-变成了-Async"><a href="#Message-mention-从Sync-变成了-Async" class="headerlink" title="Message.mention() 从Sync 变成了 Async"></a>Message.mention() 从Sync 变成了 Async</h2><h3 id="之前-6"><a href="#之前-6" class="headerlink" title="之前"></a>之前</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mentionList = message.mention()</span><br></pre></td></tr></table></figure><h3 id="之后"><a href="#之后" class="headerlink" title="之后"></a>之后</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const mentionList = message.mention()</span></span><br><span class="line"><span class="addition">+ const mentionList = await message.mention()</span></span><br></pre></td></tr></table></figure><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1259" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Message.mention()</code> change from <code>sync</code> to <code>async</code></a></li></ul><h2 id="scan-事件参数发生了变化"><a href="#scan-事件参数发生了变化" class="headerlink" title="scan 事件参数发生了变化"></a><code>scan</code> 事件参数发生了变化</h2><p>对老代码是兼容的</p><h3 id="之前-7"><a href="#之前-7" class="headerlink" title="之前"></a>之前</h3><p><a href="https://github.com/Chatie/wechaty/blob/860e85ec776ac20e92751ec4b67e0d539ef40a16/examples/ding-dong-bot.ts#L74-L77" target="_blank" rel="noopener">https://github.com/Chatie/wechaty/blob/860e85ec776ac20e92751ec4b67e0d539ef40a16/examples/ding-dong-bot.ts#L74-L77</a></p><h3 id="之后-1"><a href="#之后-1" class="headerlink" title="之后"></a>之后</h3><p><a href="https://github.com/Chatie/wechaty/blob/07008dff17ccc46b347ba28b85af167984573ea0/examples/ding-dong-bot.ts#L74-L76" target="_blank" rel="noopener">https://github.com/Chatie/wechaty/blob/07008dff17ccc46b347ba28b85af167984573ea0/examples/ding-dong-bot.ts#L74-L76</a></p><p>请注意我们删除了 <del><code>const loginUrl = url.replace(/\/qrcode\//, &#39;/l/&#39;)</code></del></p><p>相关issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1262" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>scan</code> event args will be different!</a></li></ul><h2 id="Room-Contact-Message-FriendRequest在不能直接实例化"><a href="#Room-Contact-Message-FriendRequest在不能直接实例化" class="headerlink" title="Room,Contact,Message,FriendRequest在不能直接实例化"></a><code>Room</code>,<code>Contact</code>,<code>Message</code>,<code>FriendRequest</code>在不能直接实例化</h2><h3 id="相关错误信息"><a href="#相关错误信息" class="headerlink" title="相关错误信息"></a>相关错误信息</h3><ol><li>Error: class can not be instanciated directly!</li><li>Error: must not use the global Message/Contact/Room. use a cloned child via cloneClass instead</li></ol><p>由于 <code>Contact</code>, <code>FriendRequest</code>, <code>Message</code>, 和 <code>Room</code> 这些类要和 <code>Puppet</code> 绑定，所以这些类不能直接实例化</p><p>他们需要先有一个 <code>cloneClass()</code>, 然后才能和<code>Puppet</code> 绑定, 之后才能像下面一样使用:</p><ol><li><code>wechaty.Contact</code>, or</li><li><code>puppet.Contact</code>, etc.</li></ol><h3 id="错误的做法"><a href="#错误的做法" class="headerlink" title="~错误的做法~"></a><del>~错误的做法</del>~</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Room &#125; <span class="keyword">from</span> <span class="string">'wechaty'</span></span><br><span class="line"><span class="keyword">const</span> room = <span class="keyword">await</span> Room.create(...)</span><br></pre></td></tr></table></figure><p>上面的代码出出错</p><h3 id="正确的做法"><a href="#正确的做法" class="headerlink" title="正确的做法"></a>正确的做法</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- import &#123; Room &#125; from 'wechaty'</span></span><br><span class="line"><span class="addition">+ import &#123; Wechaty &#125; from 'wechaty'</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">- const room = await Room.create(...)</span></span><br><span class="line"><span class="addition">+ const wechaty = new Wechaty()</span></span><br><span class="line"><span class="addition">+ const room = await wechaty.Room.create(...)</span></span><br></pre></td></tr></table></figure><p>Contact, FriendRequest, and Message这些也一样</p><p>Related Link</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1217" target="_blank" rel="noopener">Error: class can not be instanciated directly! </a></li><li><a href="https://github.com/Chatie/wechaty/issues/1364" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Contact, FriendRequest, Message, and Room classes will not be able to instantiate directly</a></li><li><a href="https://github.com/Chatie/wechaty/issues/1161" target="_blank" rel="noopener">Error: static puppet not found</a></li><li><a href="https://github.com/Chatie/wechaty/issues/518" target="_blank" rel="noopener">Wechaty Multi-Instance Suport</a></li><li>NPM <a href="https://www.npmjs.com/package/clone-class" target="_blank" rel="noopener">clone-class</a></li><li><a href="https://github.com/zixia/node-clone-class/issues/5" target="_blank" rel="noopener">https://github.com/zixia/node-clone-class/issues/5</a></li></ul><h2 id="Message-ext-返回-ext-而不是-ext"><a href="#Message-ext-返回-ext-而不是-ext" class="headerlink" title="Message.ext() 返回 .ext 而不是 ext"></a>Message.ext() 返回 <code>.ext</code> 而不是 <code>ext</code></h2><p>根据<code>ext()</code> 在 Node/Python/C# 中的实现，我们的 <code>ext()</code> 也返回包括<code>.</code>的文件扩展名。 所以更新如下：</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ext = message.ext()</span><br><span class="line"><span class="comment">// assume the filename is `test.txt`</span></span><br></pre></td></tr></table></figure><h3 id="之前-v0-14-或更早"><a href="#之前-v0-14-或更早" class="headerlink" title="之前 (v0.14 或更早)"></a>之前 (v0.14 或更早)</h3><p><code>assert(ext === &#39;txt&#39;)</code></p><h3 id="现在-v0-16-或之后"><a href="#现在-v0-16-或之后" class="headerlink" title="现在 (v0.16 或之后)"></a>现在 (v0.16 或之后)</h3><p><code>assert(ext === &#39;.txt&#39;)</code></p><p>相关链接</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1168" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 Message.ext() return ‘.ext’ instead of ‘ext’ before</a></li></ul><p>嗯，这大概就是所有的迁移记录了，谢谢！希望大家使用顺利！</p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> wechaty-puppet-padchat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Migrating Wechaty v0.14 to v0.18 Guide - From Puppeteer To Padchat</title>
      <link href="/project/2018-06-24-migrating-wechaty-v0.14-to-v0.18-guide-from-puppeteer-to-padchat-en.html"/>
      <url>/project/2018-06-24-migrating-wechaty-v0.14-to-v0.18-guide-from-puppeteer-to-padchat-en.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Author: <a href="https://github.com/lijiarui" target="_blank" rel="noopener">@lijiarui</a> Founder of BotOrange, Author of Wechaty.</p></blockquote><p>Wechaty has been updated to version 0.16(BETA) these days and begin to support all kinds of wechat solutions including web, ipad, ios, etc. My product based on wechaty has to migration from wechaty solution based on web to ipad solution.</p><p>This blog introduces how to porting code from wechaty puppeteer to padchat.</p><p><img src="/img/2018/code-migration-en.png" alt="code"></p><h1 id="1-Puppeteer-VS-Padchat"><a href="#1-Puppeteer-VS-Padchat" class="headerlink" title="1. Puppeteer VS Padchat"></a>1. Puppeteer VS Padchat</h1><p><strong>Puppet System</strong> means to connect Wechaty API to any kinds of Puppets, including Web, iPad, Android, Windows Hook and ios. Different implements of these puppets are totally different, without the puppet, using one API to bridge all implement is very difficult, so we had Puppet System.</p><p><img src="https://github.com/Chatie/wechaty/wiki/image/abstract-info.png" alt></p><ul><li>Puppeteer<br>A solution based on Web Wechat</li><li>Padchat<br>A solution based on Ipad Wechat</li></ul><p>You can find more in this blog: <a href="https://blog.chatie.io/wechaty-new-release-version-0.16/" target="_blank" rel="noopener">Wechaty New Version 0.16(BETA, with superpower) Released</a></p><h1 id="2-How-to-run-puppet-padchat"><a href="#2-How-to-run-puppet-padchat" class="headerlink" title="2. How to run puppet-padchat"></a>2. How to run puppet-padchat</h1><p>Wechaty will start with puppeteer(web solution) by default, if you want to change to padchat, you need to set the environmental variable. </p><p>See more in wechaty wiki: <a href="https://github.com/Chatie/wechaty/wiki/Puppet#2-run" target="_blank" rel="noopener">How to run a new wecahty-puppet-padchat</a></p><h2 id="Start-with-Github-repo"><a href="#Start-with-Github-repo" class="headerlink" title="Start with Github repo"></a>Start with Github repo</h2><h3 id="1-Pull-the-latest-code"><a href="#1-Pull-the-latest-code" class="headerlink" title="1. Pull the latest code:"></a>1. Pull the latest code:</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line">rm -rf package-lock.json</span><br><span class="line">rm -rf node_modules/</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="2-Get-Token"><a href="#2-Get-Token" class="headerlink" title="2. Get Token"></a>2. Get Token</h3><p>Participate in our alpha test here: <a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">Wechaty v0.17 Padchat Testing: Win32/iPad/Android/iOS/API Puppets Support are coming!</a> and Get <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-Set-environment-variable-and-run"><a href="#3-Set-environment-variable-and-run" class="headerlink" title="3. Set environment variable and run"></a>3. Set environment variable and run</h3><p>Remeber to set <code>WECHATY_PUPPET=padchat</code> to change from puppeteer to padchat</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WECHATY_PUPPET_PADCHAT_TOKEN=your padchat token WECHATY_PUPPET=padchat  node examples/ding-dong-bot.js</span><br></pre></td></tr></table></figure><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><h3 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install wechaty@next</span><br></pre></td></tr></table></figure><h3 id="2-Get-token"><a href="#2-Get-token" class="headerlink" title="2. Get token"></a>2. Get token</h3><p>Participate in our alpha test here: <a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">Wechaty v0.17 Padchat Testing: Win32/iPad/Android/iOS/API Puppets Support are coming!</a> and Get <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-Set-environment-variable-and-run-1"><a href="#3-Set-environment-variable-and-run-1" class="headerlink" title="3. Set environment variable and run"></a>3. Set environment variable and run</h3><p>Remeber to set <code>WECHATY_PUPPET=padchat</code> to change from puppeteer to padchat</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WECHATY_PUPPET_PADCHAT_TOKEN=your padchat token WECHATY_PUPPET=padchat   node examples/ding-dong-bot.js</span><br></pre></td></tr></table></figure><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="1-Install-1"><a href="#1-Install-1" class="headerlink" title="1. Install"></a>1. Install</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull zixia/wechaty:latest</span><br></pre></td></tr></table></figure><h3 id="2-Get-Token-1"><a href="#2-Get-Token-1" class="headerlink" title="2. Get Token"></a>2. Get Token</h3><p>Participate in our alpha test here: <a href="https://github.com/Chatie/wechaty/issues/1296" target="_blank" rel="noopener">Wechaty v0.17 Padchat Testing: Win32/iPad/Android/iOS/API Puppets Support are coming!</a> and Get <code>WECHATY_PUPPET_PADCHAT_TOKEN</code></p><h3 id="3-Set-environment-variable-and-run-2"><a href="#3-Set-environment-variable-and-run-2" class="headerlink" title="3. Set environment variable and run"></a>3. Set environment variable and run</h3><ul><li>Remeber to set <code>WECHATY_PUPPET=padchat</code> to change from puppeteer to padchat</li><li>Remove wechaty in <code>node_module</code> if exist.</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -t -i  -e WECHATY_PUPPET="padchat" -e WECHATY_PUPPET_PADCHAT_TOKEN="your token"  --volume="$(pwd)":/bot --name=wechaty zixia/wechaty:latest examples/ding-dong-bot.ts</span><br></pre></td></tr></table></figure><h1 id="3-Check-Code"><a href="#3-Check-Code" class="headerlink" title="3. Check Code"></a>3. Check Code</h1><p>Wechaty is written by typescript, all with strong typing. Since to change all wechaty code, I change my logic product to strong typing.</p><p>We need tools to help us check our code errors. I use <strong>TSLint</strong> to help me to check typescript code and use VS CODE as my IDE.</p><h2 id="Why-we-need-to-check-code"><a href="#Why-we-need-to-check-code" class="headerlink" title="Why we need to check code"></a>Why we need to check code</h2><p>Maybe you think JavaScript is so flexible so it needs to be checked, but typescript has been able to check out a lot of problems when compiling. Why do we still need to check the code? </p><p>This is because TypeScript focuses on the type of match, not the code style. When there are more and more people on our team, the same logic may be totally different in different people:</p><ul><li>Four spaces indentation or two spaces indentation?</li><li>Should we disable <code>var</code>?</li><li>Should all the interface name begin with <code>I</code>?</li><li>Should it be mandatory to use <code>===</code> instead of <code>==</code>?</li><li>Should we need a semicolon?</li></ul><p>TypeScript will not concern these problems, but these affect the efficiency of multi-person collaboration when developing, and how easy the code to read and maintain.</p><p><a href="https://ts.xcatliu.com/engineering/lint.html" target="_blank" rel="noopener">This blog</a> explain why we need to check code in typescript.</p><p>In one word, though code errors are more important than the uniform code style when a project becomes bigger and more and more developers join in, the code style constraints are still very important.</p><h2 id="Using-TSLint"><a href="#Using-TSLint" class="headerlink" title="Using TSLint"></a>Using TSLint</h2><p>TSLint is an extensible static analysis tool that checks TypeScript code for readability, maintainability, and functionality errors. It is widely supported across modern editors &amp; build systems and can be customized with your own lint rules, configurations, and formatters. Learn more in <a href="https://palantir.github.io/tslint/" target="_blank" rel="noopener">TSLint Website</a></p><h3 id="1-Install-2"><a href="#1-Install-2" class="headerlink" title="1. Install"></a>1. Install</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save-dev tslint</span><br><span class="line">npm install tslint-config-standard</span><br></pre></td></tr></table></figure><h3 id="2-Config-File"><a href="#2-Config-File" class="headerlink" title="2. Config File"></a>2. Config File</h3><p>Create config file <code>tslint.json</code> </p><p>I suggest to refer wechaty config about <code>tslint</code> and <code>tsconfig</code></p><ul><li><a href="https://github.com/Chatie/wechaty/blob/master/tslint.json" target="_blank" rel="noopener">tslint config file in wechaty</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/tsconfig.json" target="_blank" rel="noopener">tsconfig config file in wechaty</a></li></ul><p>Here are some tips about wehcaty config:</p><ul><li>“strict” : true<br>Enable all strict type checking options.<br>Enabling –strict enables –noImplicitAny, –noImplicitThis, –alwaysStrict, –strictNullChecks, –strictFunctionTypes and –strictPropertyInitialization</li><li>“noEmitOnError”              : true<br>Do not emit outputs if any errors were reported.</li><li>“noUnusedLocals”             : true<br>Report errors on unused locals.</li><li>“noImplicitReturns”          : true<br>Report error when not all code paths in function return a value.</li><li>“noFallthroughCasesInSwitch” : true<br>Report errors for fallthrough cases in switch statement.</li><li>“strictNullChecks”           : true<br>In strict null checking mode, the null and undefined values are not in the domain of every type and are only assignable to themselves and any (the one exception being that undefined is also assignable to void).</li><li>“noImplicitAny”              : true<br>Raise error on expressions and declarations with an implied any type.<br>Related issue: <a href="https://github.com/Chatie/wechaty/issues/1383" target="_blank" rel="noopener">ts-node 7.0 breaking change: Skip <code>files</code> by default</a></li><li>“no-floating-promises”: true<br>Check the floating promise。Related issue: <a href="https://github.com/Chatie/wechaty/issues/1346" target="_blank" rel="noopener">Prevent the Floating Promise in the Async/Await Code</a></li><li>“noUnusedParameters”         : true<br>  Report errors on unused parameters.。</li><li>“noImplicitThis”             : true<br>Raise error on this expression with an implied any type.</li></ul><p>see more in <a href="https://www.typescriptlang.org/docs/handbook/compiler-options.html" target="_blank" rel="noopener">official website</a></p><h3 id="3-Add-tslint-script-for-package-json"><a href="#3-Add-tslint-script-for-package-json" class="headerlink" title="3. Add tslint script for package.json"></a>3. Add tslint script for package.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"lint"</span>: <span class="string">"tslint --project . src/**/*.ts src/**/*.tsx"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>-- project .</code> require all tslint to use <code>tsconfig.json</code> configuration of the current directory to get the information. </p><p>Then run <code>npm run lint</code> will check the whole code.</p><h4 id="4-Add-TSLint-to-VSCode"><a href="#4-Add-TSLint-to-VSCode" class="headerlink" title="4. Add TSLint to VSCode"></a>4. Add TSLint to VSCode</h4><p>Search <code>tslint</code> and install a plugin for vscode. It is enabled by default.</p><h4 id="5-Sweet-Tips"><a href="#5-Sweet-Tips" class="headerlink" title="5. Sweet Tips"></a>5. Sweet Tips</h4><p>I also recommend another plugin in vscode: <code>editorconfig</code>: EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs. see more: <a href="https://editorconfig.org/" target="_blank" rel="noopener">Official EditorConfig Website</a></p><p>You can find wechaty editorconfig in <a href="https://github.com/Chatie/wechaty/blob/master/.editorconfig" target="_blank" rel="noopener">.editorconfig</a></p><h1 id="4-BREAKING-CHANGES"><a href="#4-BREAKING-CHANGES" class="headerlink" title="4. BREAKING CHANGES"></a>4. BREAKING CHANGES</h1><p>After upgrade wechaty, see more in<a href="https://blog.chatie.io/wechaty-new-release-version-0.16/" target="_blank" rel="noopener">blog</a>. Although we are trying to minimize API changes, there are some breaking changes. I really suggest you reading <a href="https://github.com/chatie/wechaty/blob/master/CHANGELOG.md" target="_blank" rel="noopener">CHANGE LOG</a>. Also, I list some important changes here:</p><h2 id="bot-init-change-to-bot-start"><a href="#bot-init-change-to-bot-start" class="headerlink" title="bot.init() change to  bot.start()"></a>bot.init() change to  bot.start()</h2><h2 id="bot-quit-change-to-bot-stop"><a href="#bot-quit-change-to-bot-stop" class="headerlink" title="bot.quit() change to bot.stop()"></a>bot.quit() change to bot.stop()</h2><h2 id="FriendRequest-change-to-Friendship"><a href="#FriendRequest-change-to-Friendship" class="headerlink" title="FriendRequest change to Friendship"></a>FriendRequest change to Friendship</h2><p><code>FriendRequest</code> class refactored.</p><h3 id="Before-v0-14-or-below"><a href="#Before-v0-14-or-below" class="headerlink" title="Before (v0.14 or below)"></a>Before (v0.14 or below)</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">wechaty.on(<span class="string">'friend'</span>, <span class="function">(<span class="params">contact, request</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!request) &#123;</span><br><span class="line">    <span class="comment">// this is a friend request confirmation event</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// this is a friend request</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="After-v0-16-or-above"><a href="#After-v0-16-or-above" class="headerlink" title="After (v0.16 or above)"></a>After (v0.16 or above)</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">wechaty.on(<span class="string">'friendship'</span>, <span class="function"><span class="params">request</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (request.type()) &#123;</span><br><span class="line">    <span class="keyword">case</span> FriendRequest.Type.RECEIVE:</span><br><span class="line">      <span class="comment">// this is a friend request request</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> FriendRequest.Type.CONFIRM:</span><br><span class="line">      <span class="comment">// this is a friend request confirmation</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Related link:</p><ul><li><a href="https://github.com/Chatie/wechaty/blob/master/examples/friend-bot.ts" target="_blank" rel="noopener">friend-bot.ts</a></li><li><a href="https://github.com/Chatie/wechaty/issues/1196" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 on(‘friend`) arguments changed!</a></li><li><a href="https://github.com/Chatie/wechaty/issues/1312" target="_blank" rel="noopener">BREAKING CHANGES v0.16: FriendRequest class will be replaced with Friendship</a></li></ul><h2 id="Message-content-change-to-Message-text"><a href="#Message-content-change-to-Message-text" class="headerlink" title="Message.content() change to Message.text()"></a>Message.content() change to Message.text()</h2><p>From v0.16, Message.content() will be deprecated.<br>From v0.18, Message.content() will be removed.</p><p>Related Link:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1163" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 will replace <code>Message.content()</code> with <code>Message.text()</code></a></li></ul><h2 id="Remove-MediaMessage-class"><a href="#Remove-MediaMessage-class" class="headerlink" title="Remove MediaMessage class"></a>Remove <code>MediaMessage</code> class</h2><p>From v0.16, MediaMessage will be deprecated.<br>From v0.18, MediaMessage will be removed.</p><p>Use Message instead.</p><p>Migration Example<br><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- bot.say(new MediaMessage('/image.png')</span></span><br><span class="line"><span class="addition">+ bot.say(new Message('/image.png')</span></span><br></pre></td></tr></table></figure></p><p>Related issue</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1164" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 will remove <code>MediaMessage</code> class</a></li></ul><h3 id="A-useful-tip-to-send-the-image"><a href="#A-useful-tip-to-send-the-image" class="headerlink" title="A useful tip to send the image"></a>A useful tip to send the image</h3><p><a href="https://www.npmjs.com/package/file-box" target="_blank" rel="noopener">FileBox</a>, FileBox is a virtual container for packing a file data into it for future readers, and easily transport between servers with the least payload, no mater than where it is (local path, remote URL, or cloud storage).</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fileBox = FileBox.fromStream(</span><br><span class="line">fs.createReadStream(BOT_QR_CODE_IMAGE_FILE),</span><br><span class="line">BOT_QR_CODE_IMAGE_FILE,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Wechaty-self-change-to-Wechaty-userSelf"><a href="#Wechaty-self-change-to-Wechaty-userSelf" class="headerlink" title="Wechaty self() change to Wechaty.userSelf()"></a>Wechaty self() change to Wechaty.userSelf()</h2><p>Related issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1369" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Wechaty.self() eprecated, use Wechaty.userSelf() instead</a></li></ul><h2 id="Contact-personal-and-Contact-official-change-to-Contact-type"><a href="#Contact-personal-and-Contact-official-change-to-Contact-type" class="headerlink" title="Contact.personal() and Contact.official() change to Contact.type()"></a>Contact.personal() and Contact.official() change to Contact.type()</h2><h3 id="Before"><a href="#Before" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isPersonal = contact.personal()</span><br><span class="line"><span class="keyword">const</span> isOfficial = contact.official()</span><br></pre></td></tr></table></figure><h3 id="After"><a href="#After" class="headerlink" title="After"></a>After</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the type of the Contact</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returns ContactType - Contact.Type.PERSONAL for personal account, Contact.Type.OFFICIAL for official account</span></span><br><span class="line"><span class="comment"> * @example</span></span><br><span class="line"><span class="comment"> * const isOfficial = contact.type() === Contact.Type.OFFICIAL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">type</span> = Contact.type()</span><br></pre></td></tr></table></figure><p>Related issue</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1366" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Contact.personal() and Contact.official() deprecated, use Contact.type() instead</a></li></ul><h2 id="Room-add-return-from-Promise-to-Promise"><a href="#Room-add-return-from-Promise-to-Promise" class="headerlink" title="Room.add() return from Promise to Promise"></a>Room.add() return from Promise<boolean> to Promise<void></void></boolean></h2><p>Related issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1362" target="_blank" rel="noopener">BREAKING CHANGE v0.16 room.add return Promise<void> instead of return Promise<boolean></boolean></void></a></li></ul><h2 id="Room-topic-change-from-Sycn-to-Async"><a href="#Room-topic-change-from-Sycn-to-Async" class="headerlink" title="Room.topic() change from Sycn to Async"></a>Room.topic() change from Sycn to Async</h2><h3 id="Before-1"><a href="#Before-1" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> topic = room.topic()</span><br></pre></td></tr></table></figure><h3 id="After-1"><a href="#After-1" class="headerlink" title="After"></a>After</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> topic = <span class="keyword">await</span> room.topic()</span><br></pre></td></tr></table></figure><p>Related issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1295" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.topic()</code> change from Sycn to Async</a></li></ul><h2 id="Room-alias-contact-change-from-Sycn-to-Async"><a href="#Room-alias-contact-change-from-Sycn-to-Async" class="headerlink" title="Room.alias(contact) change from Sycn to Async"></a>Room.alias(contact) change from Sycn to Async</h2><h3 id="Before-2"><a href="#Before-2" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> alias = room.alias(contact)</span><br></pre></td></tr></table></figure><h3 id="After-2"><a href="#After-2" class="headerlink" title="After"></a>After</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> alias = <span class="keyword">await</span> room.alias(contact)</span><br></pre></td></tr></table></figure><p>Related issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1293" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.alias(contact)</code> change from Sycn to Async</a></li></ul><h2 id="Room-memberList-change-from-Sycn-to-Async"><a href="#Room-memberList-change-from-Sycn-to-Async" class="headerlink" title="Room.memberList() change from Sycn to Async"></a>Room.memberList() change from Sycn to Async</h2><h3 id="Before-3"><a href="#Before-3" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> memberList = room.memberList()</span><br></pre></td></tr></table></figure><h3 id="After-3"><a href="#After-3" class="headerlink" title="After"></a>After</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> memberList = <span class="keyword">await</span> room.memberList()</span><br></pre></td></tr></table></figure><p>Related Issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1290" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.memberList()</code> change from Sycn to Async</a></li></ul><h2 id="Room-member-from-sync-to-async"><a href="#Room-member-from-sync-to-async" class="headerlink" title="Room.member() from sync to async"></a>Room.member() from sync to async</h2><h3 id="Before-4"><a href="#Before-4" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> contact = room.member(<span class="string">'Huan'</span>)</span><br></pre></td></tr></table></figure><h3 id="After-4"><a href="#After-4" class="headerlink" title="After"></a>After</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const contact = room.member('Huan')</span></span><br><span class="line"><span class="addition">+ const contact = await room.member('Huan')</span></span><br></pre></td></tr></table></figure><p>Related Issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1258" target="_blank" rel="noopener">BREAKING CHANGES: v0.16 <code>Room.member()</code> from <code>sync</code> to <code>async</code></a></li></ul><h2 id="Room-has-contact-change-from-Sycn-to-Async"><a href="#Room-has-contact-change-from-Sycn-to-Async" class="headerlink" title="Room.has(contact) change from Sycn to Async"></a>Room.has(contact) change from Sycn to Async</h2><p>WARNING: This change will let us make more mistakes:</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (room.has(contact)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.error(<span class="string">'here will always be executed because Promise === true'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Before-5"><a href="#Before-5" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> exist = room.has(contact)</span><br></pre></td></tr></table></figure><h3 id="After-5"><a href="#After-5" class="headerlink" title="After"></a>After</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> exist = <span class="keyword">await</span> room.has(contact)</span><br></pre></td></tr></table></figure><p>Related Link:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1289" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Room.has(contact)</code> change from Sycn to Async</a></li><li><a href="https://www.meziantou.net/2017/11/20/detect-missing-await-in-typescript" target="_blank" rel="noopener">Detect missing await in TypeScript</a></li></ul><h2 id="Message-mention-change-from-Sync-to-Async"><a href="#Message-mention-change-from-Sync-to-Async" class="headerlink" title="Message.mention() change from Sync to Async"></a>Message.mention() change from Sync to Async</h2><p>BREAKING CHANGE: v0.16 <code>Message.mention()</code> change from <code>sync</code> to <code>async</code></p><h3 id="Before-6"><a href="#Before-6" class="headerlink" title="Before"></a>Before</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mentionList = message.mention()</span><br></pre></td></tr></table></figure><h3 id="After-6"><a href="#After-6" class="headerlink" title="After"></a>After</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const mentionList = message.mention()</span></span><br><span class="line"><span class="addition">+ const mentionList = await message.mention()</span></span><br></pre></td></tr></table></figure><p>Related issue:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1259" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>Message.mention()</code> change from <code>sync</code> to <code>async</code></a></li></ul><h2 id="scan-Event-args-will-become-different"><a href="#scan-Event-args-will-become-different" class="headerlink" title="scan Event args will become different"></a><code>scan</code> Event args will become different</h2><p>The good news is: the old code seems will run without problem, because it will just do nothing: </p><p><code>const loginUrl = url.replace(/\/qrcode\//, &#39;/l/&#39;)</code></p><h3 id="Before-7"><a href="#Before-7" class="headerlink" title="Before"></a>Before</h3><p><a href="https://github.com/Chatie/wechaty/blob/860e85ec776ac20e92751ec4b67e0d539ef40a16/examples/ding-dong-bot.ts#L74-L77" target="_blank" rel="noopener">https://github.com/Chatie/wechaty/blob/860e85ec776ac20e92751ec4b67e0d539ef40a16/examples/ding-dong-bot.ts#L74-L77</a></p><h3 id="After-7"><a href="#After-7" class="headerlink" title="After"></a>After</h3><p><a href="https://github.com/Chatie/wechaty/blob/07008dff17ccc46b347ba28b85af167984573ea0/examples/ding-dong-bot.ts#L74-L76" target="_blank" rel="noopener">https://github.com/Chatie/wechaty/blob/07008dff17ccc46b347ba28b85af167984573ea0/examples/ding-dong-bot.ts#L74-L76</a></p><p>Notice that we deleted the <del><code>const loginUrl = url.replace(/\/qrcode\//, &#39;/l/&#39;)</code></del></p><p>Related Issues:</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1262" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 <code>scan</code> event args will be different!</a></li></ul><h2 id="Class-cannot-be-instantiated-directly"><a href="#Class-cannot-be-instantiated-directly" class="headerlink" title="Class cannot be instantiated directly!"></a>Class cannot be instantiated directly!</h2><h3 id="Error-Message"><a href="#Error-Message" class="headerlink" title="Error Message"></a>Error Message</h3><ol><li>Error: the class cannot be instantiated directly!</li><li>Error: must not use the global Message/Contact/Room. use a cloned child via clone class instead</li></ol><p>Currently, the <code>Contact</code>, <code>FriendRequest</code>, <code>Message</code>, and <code>Room</code> classes will not be able to instantiate directly, because they must attach with a Puppet.</p><p>They need to be <code>cloneClass()</code>-ed first, then attach the puppet, and at last they will be ready for use by:</p><ol><li><code>wechaty.Contact</code>, or</li><li><code>puppet.Contact</code>, etc.</li></ol><h3 id="Do-Not"><a href="#Do-Not" class="headerlink" title="~Do Not~"></a><del>~Do Not</del>~</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Room &#125; <span class="keyword">from</span> <span class="string">'wechaty'</span></span><br><span class="line"><span class="keyword">const</span> room = <span class="keyword">await</span> Room.create(...)</span><br></pre></td></tr></table></figure><p>The above code will throw an error.</p><h3 id="Do"><a href="#Do" class="headerlink" title="Do"></a>Do</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- import &#123; Room &#125; from 'wechaty'</span></span><br><span class="line"><span class="addition">+ import &#123; Wechaty &#125; from 'wechaty'</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">- const room = await Room.create(...)</span></span><br><span class="line"><span class="addition">+ const wechaty = new Wechaty()</span></span><br><span class="line"><span class="addition">+ const room = await wechaty.Room.create(...)</span></span><br></pre></td></tr></table></figure><p>So does Contact, FriendRequest, and Message.</p><p>Related Link</p><ol><li>Wechaty Multi-Instance Support #518</li><li>NPM <a href="https://www.npmjs.com/package/clone-class" target="_blank" rel="noopener">clone-class</a></li><li><a href="https://github.com/zixia/node-clone-class/issues/5" target="_blank" rel="noopener">https://github.com/zixia/node-clone-class/issues/5</a></li></ol><p>Related issue</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1217" target="_blank" rel="noopener">Error: class can not be instanciated directly! </a></li><li><a href="https://github.com/Chatie/wechaty/issues/1364" target="_blank" rel="noopener">BREAKING CHANGE v0.16 Contact, FriendRequest, Message, and Room classes will not be able to instantiate directly</a></li><li><a href="https://github.com/Chatie/wechaty/issues/1161" target="_blank" rel="noopener">Error: static puppet not found</a></li><li><a href="https://github.com/Chatie/wechaty/issues/518" target="_blank" rel="noopener">Wechaty Multi-Instance Suport</a></li><li>NPM <a href="https://www.npmjs.com/package/clone-class" target="_blank" rel="noopener">clone-class</a></li><li><a href="https://github.com/zixia/node-clone-class/issues/5" target="_blank" rel="noopener">https://github.com/zixia/node-clone-class/issues/5</a></li></ul><h2 id="Message-ext-return-‘-ext’-instead-of-‘ext’-before"><a href="#Message-ext-return-‘-ext’-instead-of-‘ext’-before" class="headerlink" title="Message.ext() return ‘.ext’ instead of ‘ext’ before"></a>Message.ext() return ‘.ext’ instead of ‘ext’ before</h2><p>According to the <code>ext()</code> methods behavior in Node/Python/C# etc, the <code>ext()</code> always return the filename extension that including the dot(<code>.</code>).</p><p>So the following BREAKING CHANGE was made in v0.15:</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ext = message.ext()</span><br><span class="line"><span class="comment">// assume the filename is `test.txt`</span></span><br></pre></td></tr></table></figure><h3 id="Before-v0-14-or-earlieer"><a href="#Before-v0-14-or-earlieer" class="headerlink" title="Before (v0.14 or earlieer)"></a>Before (v0.14 or earlieer)</h3><p><code>assert(ext === &#39;txt&#39;)</code></p><h3 id="After-v0-16-or-later"><a href="#After-v0-16-or-later" class="headerlink" title="After (v0.16 or later)"></a>After (v0.16 or later)</h3><p><code>assert(ext === &#39;.txt&#39;)</code></p><p>Related Link</p><ul><li><a href="https://github.com/Chatie/wechaty/issues/1168" target="_blank" rel="noopener">BREAKING CHANGE: v0.16 Message.ext() return ‘.ext’ instead of ‘ext’ before</a></li></ul><p>Hmmm… That’s all and wish you can have a good coding experience, thanks!</p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> wechaty-puppet-padchat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦想，野心，与欲望</title>
      <link href="/thought/2018-06-06-dream.html"/>
      <url>/thought/2018-06-06-dream.html</url>
      
        <content type="html"><![CDATA[<p>“能没有那么大的梦想和野心，是你的幸运”<br>“能没有那么大的梦想和野心，是你的不幸”</p><p>我之前的价值观一直是第一个，我讨厌欲望极强太有野心的自己，却总是控制不住的去努力争取自己要的东西，拼了命的努力。甚至很多时候，我讨厌自己的执着努力。</p><p>而今天，我忽然发现，原来梦想和野心就是一个人的竞争力，而且是最核心的竞争力。我接受了自己。</p><p>一个被巨大野心驱动的人，会极其自律，昼夜深思，殚精竭虑，不知疲倦，因为他不是想赢，是必须赢。</p><p>大家都喜欢看成功的故事，包括我也一样，但是成功背后，或者任何光鲜的别后，有太多不为人知的痛苦。说不出来，就算说出来，没经历的人也不会懂。就像是婴儿丢了玩具会痛苦不止，作为成年人的我们，很难感同身受的理解那份崩溃和绝望，又像是被癌症缠身的病人，我们知道他很痛苦，但是我们永远不知道，具体是什么样的痛苦。</p><p>就在几天前，一个很好的朋友的合伙人和我电话说起我现在的情况。”你真的是太顺利了，你不知道我们现在创业多门难，产品方向要变，运营方向要变，市场还在找。而你总司满世界的跑，马上还要去硅谷，你做的真的很好了。“<br>那一刻，我哑然。</p><p>如果说一个客户这样说，一个不了解我的人这样说，甚至一个非创业者的好友这样说，我都不会哑然。而说这句话的人，是一个应该懂的人，他是小Z挚友兼合伙人小W，而小Z是每天和我聊天到凌晨一两点好友，知道我创业大部分的好友。</p><p>小Z知道我连续的崩溃，知道我的哭泣，也知道我连着通宵赶产品，他也知道我见完几十个投资人后坐在出租车上忽然的哭泣，他更知道我面对合伙人，面对团队经常有的纠结和无力感。我知道这些他说给过小W。但是我还是听到了一个让我哑然的评价。</p><p>是的，很多人会自动的忽略掉你熬过的艰难时光，直接夸大的说你的成果。实际上，大家也乐于这样去宣扬。因为这样的宣扬，才能说明，实际上却是存在，稍微努力一点，加上机遇就能取得不错成果的案例。大家也希望，只要努力一点点，就可以获得成功。</p><p>而实际上，成功，真的要付出不亚于任何人的努力，成功，真的需要煎熬，需要再无数个绝望的时刻，咬紧牙关，紧闭双眼，继续前行。尽管说这句话的时候，我还不成功。</p><p>但是在这个阶段，我忽然明白了，运气可以用捡钱，但是有所成就，处理努力和煎熬，没有任何方法可言。</p><p>然而我想说的，不是这个，而是信念。</p><p>帮助一个人度过挫折和坎坷的，一定是梦想和信念，有且只有这个东西，才能让你的内心无敌。”因为你渴望成功，你渴望做成这件事，它比什么都重要。“<br><img src="/img/2018/dream.jpg" alt></p><p>正是这一点点的不死心，我还会继续。</p><p>最近发生了很多琐碎的P事，从团队，到合作伙伴，再到我的感情。最终，我今年期待的，谈一场超过半年的恋爱还是失败了，因为今天，2018年已经过去了1/2 了。</p><p>然而生活还是要继续的，明天该面对的东西，也是要面对的。处理完了所有的事情，身体终于吃不消了，我提前回家，睡觉。</p><hr><p>”不管我怎么崩溃绝望，怎么丑态百出，感谢你一直没放弃我“<br>”就是不断气儿。。。“<br>” 你不放弃我，我就不断气。。“<br>” 你不断气儿，我就不放弃你。“<br>” 那这就是一个死循环了， 除外有个全局变量控制。“<br>” 或者耗尽资源 系统崩溃了“<br>” 我今天很早就回家了，睡了一下，释放了内存“<br>”不错，有进步“</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 梦想 </tag>
            
            <tag> 野心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全职创业450天</title>
      <link href="/thought/2018-05-22-500-days-startup.html"/>
      <url>/thought/2018-05-22-500-days-startup.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2018/500-days-for-my-startup.png" alt="logo"></p><p>想了想，这是一个负能量爆棚的日记，还是private了。</p><p>创业者都挺惨的，也挺孤独的，想不开千万别创业。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wechaty Puppet Padchat</title>
      <link href="/project/2018-5-1-wechaty-puppet-padchat.html"/>
      <url>/project/2018-5-1-wechaty-puppet-padchat.html</url>
      
        <content type="html"><![CDATA[<h1 id="WECHATY-PUPPET-PADCHAT"><a href="#WECHATY-PUPPET-PADCHAT" class="headerlink" title="WECHATY-PUPPET-PADCHAT"></a>WECHATY-PUPPET-PADCHAT</h1><p>项目地址：<a href="https://github.com/lijiarui/wechaty-puppet-padchat" target="_blank" rel="noopener">https://github.com/lijiarui/wechaty-puppet-padchat</a></p><p><a href="/README-en.md"><img src="https://img.shields.io/badge/-English%20Version-blue.svg" alt="English Version"></a></p><p><a href="https://github.com/chatie/wechaty" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Powered%20By-Wechaty-blue.svg" alt="Powered by Wechaty"></a><br><a href="https://www.npmjs.com/package/wechaty-puppet-padchat" target="_blank" rel="noopener"><img src="https://badge.fury.io/js/wechaty-puppet-padchat.svg" alt="NPM Version"></a><br><a href="https://www.npmjs.com/package/wechaty-puppet-padchat?activeTab=versions" target="_blank" rel="noopener"><img src="https://img.shields.io/npm/v/wechaty-puppet-padchat/next.svg" alt="npm (tag)"></a><br><a href="https://www.typescriptlang.org/" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/%3C%2F%3E-TypeScript-blue.svg" alt="TypeScript"></a><br><a href="https://travis-ci.com/lijiarui/wechaty-puppet-padchat" target="_blank" rel="noopener"><img src="https://travis-ci.com/lijiarui/wechaty-puppet-padchat.svg?branch=master" alt="Linux/Mac Build Status"></a> <a href="https://greenkeeper.io/" target="_blank" rel="noopener"><img src="https://badges.greenkeeper.io/lijiarui/wechaty-puppet-padchat.svg" alt="Greenkeeper badge"></a></p><p><img src="https://raw.githubusercontent.com/Chatie/wechaty/master/docs/images/wechaty-logo-en.png" alt="Wechaty Logo"></p><p>这个模块是是通过WebSocket 连接一个协议服务器来控制iPad 微信，实现个人号的微信接口。</p><p>这个模块是基于<a href="https://github.com/Chatie/wechaty/" target="_blank" rel="noopener">Wechaty</a> 的子模块，专门针对ipad 接入的。wechaty 是一个开源的的 <strong>个人号</strong> 微信机器人接口，是一个使用Typescript 构建的Node.js 应用。支持多种微信接入方案，包括网页，ipad，ios，windows， android 等。同时支持<a href="https://travis-ci.com/chatie/wechaty" target="_blank" rel="noopener">Linux</a>, <a href="https://ci.appveyor.com/project/chatie/wechaty" target="_blank" rel="noopener">Windows</a>, <a href="https://travis-ci.com/chatie/wechaty" target="_blank" rel="noopener">Darwin(OSX/Mac)</a> 和 <a href="https://app.shippable.com/github/Chatie/wechaty" target="_blank" rel="noopener">Docker</a> 多个平台。</p><p>只需要6行代码，你就可以 <strong>通过个人号</strong> 搭建一个 <strong>微信机器人功能</strong> ，用来自动管理微信消息。</p><p>更多功能包括：</p><ul><li>消息处理：关键词回复</li><li>群管理：自动入群，拉人，踢人</li><li>自动处理好友请求</li><li>智能对话：通过简单配置，即可加入智能对话系统，完成指定任务</li><li>… 请自行开脑洞</li></ul><p>详情请看<a href="https://github.com/chatie/wechaty" target="_blank" rel="noopener">Wechaty</a>项目 <a href="https://badge.fury.io/js/wechaty" target="_blank" rel="noopener"><img src="https://badge.fury.io/js/wechaty.svg" alt="NPM Version"></a> <a href="https://hub.docker.com/r/zixia/wechaty/" target="_blank" rel="noopener"><img src="https://img.shields.io/docker/pulls/zixia/wechaty.svg?maxAge=2592000" alt="Docker Pulls"></a> <a href="https://www.typescriptlang.org/" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/&lt;%2F&gt;-TypeScript-blue.svg" alt="TypeScript"></a> <a href="https://greenkeeper.io/" target="_blank" rel="noopener"><img src="https://badges.greenkeeper.io/Chatie/wechaty.svg" alt="Greenkeeper badge"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install wechaty</span><br><span class="line">npm install wechaty-puppet-padchat</span><br></pre></td></tr></table></figure><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Wechaty &#125; <span class="keyword">from</span> <span class="string">'wechaty'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> WECHATY_PUPPET_PADCHAT_TOKEN = <span class="string">'your-token-here'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> puppet = <span class="string">'wechaty-puppet-padchat'</span> <span class="comment">// 使用ipad 的方式接入。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> puppetOptions = &#123;</span><br><span class="line">  token: WECHATY_PUPPET_PADCHAT_TOKEN,</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">const</span> bot = <span class="keyword">new</span> Wechaty(&#123;</span><br><span class="line">  puppet,</span><br><span class="line">  puppetOptions,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置完成</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行 wechaty</span></span><br><span class="line">bot</span><br><span class="line">.on(<span class="string">'scan'</span>, <span class="function">(<span class="params">qrcode, status</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Scan QR Code to login: <span class="subst">$&#123;status&#125;</span>\nhttps://api.qrserver.com/v1/create-qr-code/?data=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(qrcode)&#125;</span>`</span>))</span><br><span class="line">.on(<span class="string">'login'</span>,            <span class="function"><span class="params">user</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`User <span class="subst">$&#123;user&#125;</span> logined`</span>))</span><br><span class="line">.on(<span class="string">'message'</span>,       <span class="function"><span class="params">message</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Message: <span class="subst">$&#123;message&#125;</span>`</span>))</span><br><span class="line">.start()</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/ts-node examples/wechaty-padchat-bot.ts</span><br></pre></td></tr></table></figure><h2 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h2><p><img src="/img/2018/contact.gif" alt="contact"></p><p><a href="https://github.com/lijiarui/wechaty-puppet-padchat/wiki/%E8%B4%AD%E4%B9%B0token" target="_blank" rel="noopener">了解更多Token 相关内容</a></p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://docs.chatie.io/" target="_blank" rel="noopener">https://docs.chatie.io/</a></p><h2 id="AUTHOR"><a href="#AUTHOR" class="headerlink" title="AUTHOR"></a>AUTHOR</h2><p>Jiarui LI <a href="mailto:&#114;&#117;&#x69;&#64;&#99;&#x68;&#x61;&#116;&#x69;&#x65;&#46;&#x69;&#x6f;" target="_blank" rel="noopener">&#114;&#117;&#x69;&#64;&#99;&#x68;&#x61;&#116;&#x69;&#x65;&#46;&#x69;&#x6f;</a></p><h2 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h2><p>Apache-2.0</p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> wechaty-puppet-padchat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建人脸识别聊天机器人--Wechaty Blinder</title>
      <link href="/presentation/2018-01-25-how-to-build-face-blinder-bot.html"/>
      <url>/presentation/2018-01-25-how-to-build-face-blinder-bot.html</url>
      
        <content type="html"><![CDATA[<p>这是我在<a href="http://www.itdks.com/eventlist/detail/1627" target="_blank" rel="noopener">2017-北京-谷歌开发者节</a> TensorFlow 分会场的分享，本次活动是由谷歌（中国）、谷歌北京开发者社区主办，北京邮电大学协办的2017谷歌开发者节北京站在北京邮电大学圆满举办。我主要介绍了如何使用开源项目Wechaty-Blinder快速搭建一个微信脸盲机器人，迅速帮助你识别照片里的人。</p><p><img src="/img/2018/wechaty-blinder-1.jpg" alt></p><h3 id="Who-am-I"><a href="#Who-am-I" class="headerlink" title="Who am I"></a>Who am I</h3><p><img src="/img/2018/wechaty-blinder-2.jpg" alt></p><p>在分享这个开源项目之前，我先介绍一个我的先天性缺陷：</p><ol><li>近视+散光，但是每年带眼镜的次数是个位数。</li><li>先天性记不住人样貌。</li><li>每天还要见好多人，微信有大几千好友。        </li></ol><p>通常情况下我会和一个人在微信上聊的火热，然后在一次活动见面又聊的很开心，然后过了几个月再次见面的时候，我们双方热情打招呼后心里默默嘀咕这个人是谁。。。。<br>为了不让大家觉得我是一个高冷の女子，在我经常活动的地方，只要有人往我这看,我就热情的打招呼，也许对方也在默默嘀咕这是哪个神经病。。。。<br>对，我有脸盲。<br>而今天介绍的脸盲机器人，用人工智能，专门帮助我认识各种人的。</p><h3 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h3><p><img src="/img/2018/wechaty-blinder-3.jpg" alt></p><p>我会从5个角度来做这场分享，首先简单的介绍下TensorFlow, 然后介绍下Google 的Facenet，再来介绍下我们的3个开源项目：Wechaty, Node-Facenet, Wechaty-Blinder, 最后会给大家做现场的代码演示。<br>之所以介绍wechaty-blinder 的项目要介绍wechaty 和node-facenet，是因为wechaty-blinder 是基于wechaty 和 node-facenet 这两个开源项目的。</p><h3 id="Google-TensorFlow"><a href="#Google-TensorFlow" class="headerlink" title="Google TensorFlow"></a>Google TensorFlow</h3><p><img src="/img/2018/wechaty-blinder-4.jpg" alt></p><p>脸盲机器人wechaty的底层用到了TensorFlow, 今天要介绍的wechaty-blinder 是一个基于TensorFlow 和google 的论文 Facenet 实现的node.js 开源项目，可以帮助解决人脸认证、识别和聚类等问题。</p><h3 id="Google-Facenet"><a href="#Google-Facenet" class="headerlink" title="Google Facenet"></a>Google Facenet</h3><p><img src="/img/2018/wechaty-blinder-5.jpg" alt></p><p>Facenet 来源于Google 的论文<a href="https://arxiv.org/abs/1503.03832" target="_blank" rel="noopener">FaceNet: A Unified Embedding for Face Recognition and Clustering</a>，是一个用来给人脸做分类的神经网络。<br>与其他的深度学习方法在人脸上的应用不同，FaceNet并没有用传统的softmax的方式去进行分类学习，然后抽取其中某一层作为特征，而是直接进行端对端学习一个从图像到欧式空间的编码方法，然后基于这个编码再做人脸识别、人脸验证和人脸聚类等，欧式集合距离可以直接来代表脸的相似度。<br>FaceNet算法有2个特点：</p><ol><li>去掉了最后的softmax，而是用元组计算距离的方式来进行模型的训练。使用这种方式学到的图像表示非常紧致，使用128位足矣。</li><li>元组的选择非常重要，选的好可以很快的收敛。</li></ol><h3 id="Open-Source-Chatie"><a href="#Open-Source-Chatie" class="headerlink" title="Open Source Chatie"></a>Open Source Chatie</h3><p><img src="/img/2018/wechaty-blinder-6.jpg" alt></p><p>Wechaty 是一个开源的针对个人号的微信机器人框架，仅仅使用6行JavaScript代码就可以实现一个简单的机器人，同时支持Linux，Windows，Darwin(OSX/Mac) 和 Docker。<br>博客地址是 <a href="https://blog.chatie.io" target="_blank" rel="noopener">https://blog.chatie.io</a></p><h3 id="Open-Source-Chatie-1"><a href="#Open-Source-Chatie-1" class="headerlink" title="Open Source Chatie"></a>Open Source Chatie</h3><p><img src="/img/2018/wechaty-blinder-7.jpg" alt></p><p>最简单的6行代码代码在这里，也可以去我的项目<a href="https://github.com/lijiarui/wechaty-getting-started.git" target="_blank" rel="noopener">wechaty-getting-started</a>下快速入门wechaty。wechaty 最终运行页面就是右手边的样子。</p><h3 id="Open-Source-Chatie-2"><a href="#Open-Source-Chatie-2" class="headerlink" title="Open Source Chatie"></a>Open Source Chatie</h3><p><img src="/img/2018/wechaty-blinder-8.jpg" alt></p><p>Github, Docker, npm 相关地址在这里，wechaty有非常完善的devOps，一旦代码提交，就会自动进行自动化测试，当测试通过后，会自动打包更新docker 和npm， 所以也欢迎各位开发者来pull request。</p><h3 id="Open-Source-Chatie-3"><a href="#Open-Source-Chatie-3" class="headerlink" title="Open Source Chatie"></a>Open Source Chatie</h3><p><img src="/img/2018/wechaty-blinder-9.jpg" alt></p><p>Wechaty 现在有非常完善的开发者社区，开发者覆盖了全球，包括中国、美国、澳洲、英国等。这是一部分的contributor的列表，同时chatie 下面也有几个分值项目来支持微信机器人。</p><h3 id="Open-Source-Node-FaceNet"><a href="#Open-Source-Node-FaceNet" class="headerlink" title="Open Source Node-FaceNet"></a>Open Source Node-FaceNet</h3><p><img src="/img/2018/wechaty-blinder-10.jpg" alt></p><p><a href="https://npmjs.com/package/facenet" target="_blank" rel="noopener">Node-FaceNet</a> 是一个基于TensorFlow和facenet ，解决人脸认证、识别和聚类问题的开源项目。它是一个用node封装的python的Facenet库，主要实现了下面三个主要功能：</p><ol><li>把不同的脸放在一个欧几里得空间中，不同脸之间的距离代表着脸的相似度。</li><li>很好的优化了识别脸的性能，一张脸只要128维向量即可表示。</li><li>在LFW 数据集上可以达到99.63% 的准确率，在YouTube 数据集上可以达到95.21% 的准确率。</li></ol><h3 id="Open-Source-Node-FaceNet-1"><a href="#Open-Source-Node-FaceNet-1" class="headerlink" title="Open Source Node-FaceNet"></a>Open Source Node-FaceNet</h3><p><img src="/img/2018/wechaty-blinder-11.jpg" alt></p><p>这个开源项目核心是2个类和3个方法，更多的细节可以参考我写的<a href="http://www.zixia.net/node-facenet" target="_blank" rel="noopener">文档</a>。<br>两个主要的类是：    </p><ol><li>Face, 毫无疑问代表一张脸</li><li>Facenet, 代表的是一坨脸。。。</li></ol><p>三个主要的方法是:</p><ol><li>aling()， 从一张图中找出包含的所有的脸，通过先找到脸的坐标，然后生成一个Face 实例数组。换句话中，传一张图片给align，他会突出一个脸的array.</li><li>embedding()， 将脸转换成一个128维向量</li><li>distance()，计算两个脸的距离     </li></ol><h3 id="Open-Source-Node-FaceNet-2"><a href="#Open-Source-Node-FaceNet-2" class="headerlink" title="Open Source Node-FaceNet"></a>Open Source Node-FaceNet</h3><p><img src="/img/2018/wechaty-blinder-12.jpg" alt></p><p>这是一个简单的例子，我们来读左边的代码。先新建一个Facenet 的实例，然后传入照片，看打印出来的face的结果。右边是打印的结果。通过这个我们可以看出来，align 函数在图片上找出这张脸的坐标以后，生成一个Face实例，把所有的实例放在一个数组里面。 这个坐标包括两种，一种是能够框出这个脸的框框，另外一个是脸上关键性的5个特征点。看log感受一下：</p><ul><li>bounding box: 用来框出脸的框框，用两个关键点表示：一个是左上角的点，一个是右上角的点。</li><li>landmarks:代表脸上关键性的5个特征点，左眼、有眼、鼻子、左边的嘴、右边的嘴</li><li>embedding: 代表脸的128维向量, Facenet 论文中的embedding 代表一个脸部特征矩阵，是一个128维向量。</li></ul><h3 id="Open-Source-Node-FaceNet-3"><a href="#Open-Source-Node-FaceNet-3" class="headerlink" title="Open Source Node-FaceNet"></a>Open Source Node-FaceNet</h3><p><img src="/img/2018/wechaty-blinder-13.jpg" alt></p><p>这是另外一个例子，把脸和脸之间的距离可视化。<br>我们可以看到这个绿色的框框就是上面我说的align出来的能够框出脸的框框，1.45，1.47, 0.66 三个数字分别代表了两个脸的相似程度，可以看出，数字约小，脸约像。如果两个脸是属于一个人的，他们的距离通常是0.75。当然这只是一个经验性数字，还要具体情况具体分析。</p><h3 id="Open-Source-Wechaty-Blinder"><a href="#Open-Source-Wechaty-Blinder" class="headerlink" title="Open Source Wechaty-Blinder"></a>Open Source Wechaty-Blinder</h3><p><img src="/img/2018/wechaty-blinder-14.jpg" alt></p><p>终于讲到了今天的主角，脸盲机器人的开源项目<a href="https://github.com/zixia/wechaty-blinder" target="_blank" rel="noopener">wechaty-blinder</a>, 其实当你了解了上面两个项目以后，wechaty-blinder 就非常好理解了。</p><p>这个项目是可以记住你所有的微信好友的脸。</p><p>一旦机器人帮你记住了这张脸，你随时随地都可以为这张脸命名。他有下面3个功能：</p><ol><li>记住群里所有好友的脸</li><li>记住通讯录里所有好友的脸</li><li>记住你发的每张照片中的脸    </li></ol><p>当然，他就可以帮助你认出你发的照片、群、和好友中哪些是同一个人啦。</p><h3 id="Open-Source-Wechaty-Blinder-1"><a href="#Open-Source-Wechaty-Blinder-1" class="headerlink" title="Open Source Wechaty-Blinder"></a>Open Source Wechaty-Blinder</h3><p><img src="/img/2018/wechaty-blinder-15.jpg" alt></p><p>这是使用wechaty-blinder 的效果图，看到当我发甄子丹和刘德华的脸的时候，他会自动吐出库里面和这个相似的所有的脸，并可以随时给他们改名字。简单的说就是两点：</p><ol><li>识别出脸</li><li>给脸起名字</li></ol><h3 id="Open-Source-Wechaty-Blinder-2"><a href="#Open-Source-Wechaty-Blinder-2" class="headerlink" title="Open Source Wechaty-Blinder"></a>Open Source Wechaty-Blinder</h3><p><img src="/img/2018/wechaty-blinder-16.jpg" alt><br>大家可以体验一下，这个是我预先为这个活动创建好的wechaty-dev-facenet 微信群，群里面有机器人，扫码进去就可以体验这个功能了。</p><p>这个机器人已经用Docker 封装好了，运行下面的命令，就可以启动这个机器人了，<code>WECHATY_TOKEN=TOKEN</code> 是可以你随便起名字的。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always --volume=/workdir:/workdir -e WECHATY_TOKEN=TOKEN zixia/wechaty-blinder</span><br></pre></td></tr></table></figure></p><p>如果你想随时在网页上控制这个机器人怎么办呢？很简单，跟着我做下面这五步：</p><ol><li>打开 <a href="https://chatie.io/angular/" target="_blank" rel="noopener">https://chatie.io/angular/</a> ，然后点击 Click to run</li><li>在输入框填入你的 WECHATY_TOKEN ，然后点击 Set Token </li><li>等待显示登录二维码，然后用手机摄像头（微信内长按不可以）扫描登录</li><li>建立一个新群，建群后不要做任何操作，先把群名修改为任意包含 facenet 的字符串</li><li>在群里面发图片，附体在你身上的机器人就会施法了。</li></ol><h3 id="最后，感谢Google-办了这么一场有趣的活动"><a href="#最后，感谢Google-办了这么一场有趣的活动" class="headerlink" title="最后，感谢Google 办了这么一场有趣的活动"></a>最后，感谢Google 办了这么一场有趣的活动</h3><p><img src="/img/2018/wechaty-blinder-17.jpeg" alt></p><p>本次活动邀请到了来自海内外数十位资深工程师，除了 Google的研发专家团队，还邀请到了JetBrains团队，这也是 JetBrains 团队在中国大陆首次针对Kotlin的官方分享。另外，该活动还邀请到了国内诸多一线研发团队，滴滴、Strikingly、百度、集智社区，桔子互动等公司，带来他们近期的一线研发经验。   </p><p>DevFest 是 Google 每年秋季在全球GDG（谷歌开发者社区）推行的，针对 Google 技术开发者、爱好者所举办的技术交流活动。其主要目的在于同步 Google 相关各种先进技术，并进行推广与应用，促进本地社区成员的交流。DevFest活动除设置有吸引力的主题分享，还有互动参与环节和来自 Google 的正版周边礼物，对于 Google 技术开发者、爱好者都是不可错过的体验机会。</p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> facenet </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>女性科技节-从0到1打造你的个人智能助理</title>
      <link href="/presentation/2018-01-14-techfestival.html"/>
      <url>/presentation/2018-01-14-techfestival.html</url>
      
        <content type="html"><![CDATA[<h2 id="活动信息："><a href="#活动信息：" class="headerlink" title="活动信息："></a>活动信息：</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4NDkwNDA2NA==&amp;mid=2247484233&amp;idx=1&amp;sn=e6e4d66c9e81ae909c8a523d70972d26&amp;chksm=ebf51ca6dc8295b02c5b320a17e2bb69918500ecdda69bdf565fa69377dac5a2a3ee3aef3387&amp;mpshare=1&amp;scene=1&amp;srcid=0129BCkHC0MAzDl6r6y10V1j&amp;pass_ticket=KEvH2mABSfNtoFSgclVOWz9M40KevjNRkSVjxyPhWuc%3D#rd" target="_blank" rel="noopener">《从0到1，搭建你的个人智能助理》</a>     </p><p><img src="/img/2018/techfestival-1.png" alt></p><h2 id="PPT内容分享"><a href="#PPT内容分享" class="headerlink" title="PPT内容分享"></a>PPT内容分享</h2><p><img src="/img/2018/techfestival-2.jpg" alt><br><img src="/img/2018/techfestival-3.jpg" alt><br><img src="/img/2018/techfestival-4.jpg" alt><br><img src="/img/2018/techfestival-5.jpg" alt><br><img src="/img/2018/techfestival-6.jpg" alt><br><img src="/img/2018/techfestival-7.jpg" alt><br><img src="/img/2018/techfestival-8.jpg" alt><br><img src="/img/2018/techfestival-9.jpg" alt><br><img src="/img/2018/techfestival-10.jpg" alt><br><img src="/img/2018/techfestival-11.jpg" alt><br><img src="/img/2018/techfestival-12.jpg" alt><br><img src="/img/2018/techfestival-13.jpg" alt><br><img src="/img/2018/techfestival-14.jpg" alt><br><img src="/img/2018/techfestival-15.jpg" alt><br><img src="/img/2018/techfestival-16.jpg" alt><br><img src="/img/2018/techfestival-17.jpg" alt><br><img src="/img/2018/techfestival-18.jpg" alt><br><img src="/img/2018/techfestival-19.jpg" alt><br><img src="/img/2018/techfestival-20.jpg" alt><br><img src="/img/2018/techfestival-21.jpg" alt><br><img src="/img/2018/techfestival-22.jpg" alt><br><img src="/img/2018/techfestival-23.jpg" alt><br><img src="/img/2018/techfestival-24.jpg" alt><br><img src="/img/2018/techfestival-25.jpg" alt><br><img src="/img/2018/techfestival-26.jpg" alt><br><img src="/img/2018/techfestival-27.jpg" alt>       </p><p>最后，放一张我在现场的图片吧。<br><img src="/img/2018/techfestival-28.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> chatbot </tag>
            
            <tag> 女性科技节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在2017年的最后一天</title>
      <link href="/thought/2017-12-31-the-last-day-of-2017.html"/>
      <url>/thought/2017-12-31-the-last-day-of-2017.html</url>
      
        <content type="html"><![CDATA[<p>今天在趁早手册上写年终总结，回看每一个月的计划，<br>我竟然没想到，当初竟然某个月有过一个愿望是买一条白金项链。    </p><p>而今年年中，我送人了一条Tiffany的白金项链都忘记了自己还需要。    </p><p>然后现在我的脖子上依然空空的。    </p><p>— 前言</p><p>我也不知道为什么，会把这句话作为前言。我看到了2017年第一天的日记    </p><p>我的2017呢？ 发什么了什么？好像每一天都是一件大事，又好像每一天都不能值得称赞。    </p><hr><p>我也不知道为什么，只是忽然想把这些都写下来而已。    </p><p>2016年，我给自己电影名称是—- 激荡。<br>2017年，我给自己定影名称是—–蛰伏。    </p><p>和2016年更多的PPT相比，2017年更多的是坐在电脑前无休止的代码。    </p><p>我做了自己的社群管理工具系统。<br>我做了自己的活码裂变系统。<br>我做了自己的差旅订票机器人。<br>我进入了百度AI加速器。<br>我做了2个影响力还算不错的微信聊天机器人社群。    </p><p>我研究了NLP，我研究了DST，还有知道了一堆乱七八糟的算法和逻辑。    </p><p>2016年我做了很多很多事，很多很多错事。<br>2017年，我好像没做太多事，却第一次在年底有了沉甸甸的积累感。    </p><h3 id="技术篇"><a href="#技术篇" class="headerlink" title="技术篇"></a>技术篇</h3><p>这一年，技术上得到了很大很大的提高，以前想都不敢想的事情，我做出来了，一个人沉在代码里面，写了很多很多。<br>github上一篇绿油油的commit，不分白天和黑夜，不分休息日和工作日。<br>从最开始阅读英文文档很大的障碍，到现在在github上写了一个纯英文的repo，由于涉及到越来越多的数据，被迫从public 变成了private。我听到每一个来这个项目人的衷心的赞赏。<br>我似乎也不那么害怕和外国人聊天了，和Jack 几个小时几个小时的开会一点点的提升了我所有的自信。<br>我曾经最怕自己成为一个彻头彻尾的项目经理，现在我终于可以跳出来了，我成为了一个合格的程序媛，我知道这条路很长很长，但是我愿意走下去，因为我再路的尽头，看到的是光明和希望。    </p><h3 id="管理篇"><a href="#管理篇" class="headerlink" title="管理篇"></a>管理篇</h3><p>这一年，我终于学会了做计划。回顾我一年的周报，从最开始的随意，到后来终于开始了有深度的总结。从三月计划，到月计划，到周计划。三月计划中包括了月计划，月计划中包括了周计划。虽然鲜有计划能够真正按照我定的标准完成，却依然看到了自己的脚印，在目标和计划中，一点点的在往正确的方向走着。<br>正在学习着更加包容一个人，不再逼迫一个人，可这似乎是一个需要修炼好多年的技能。这一块只能算一个小学生吧。<br>终于开始学着思考了。每一件事，都尝试着复盘，做一件事之前，也有了计划的目标。<br>终于开始自信了，终于开始敢于开口了，终于开始不那么害怕失去了，不那么患得患失了，也可能是因为真的失去了很多，也可能是因为真的得到了很多。    </p><h3 id="情感篇"><a href="#情感篇" class="headerlink" title="情感篇"></a>情感篇</h3><p>我在效率手册上写到，我希望2017年可以有个男朋友。<br>这一年年终谈了2场恋爱，很短又很随意，也不知道算不算完成了2017年的计划。看起来算，可实际上，他又不算，因为没有一场像曾经那样刻骨铭心，甚至离开后在内心都没有一丝波澜。想想可能是因为我的计划没有标准吧。才会出现似乎完成又好像没完成的冷清结局。<br>除了两场恋爱，还有很多桃花运，有怯怯的，也有浓烈的。。<br>可貌似所有的感情都是是旅游，我期待的是回家。<br>有的时候真正期待的人，也是得不到的。    </p><h3 id="梦想篇"><a href="#梦想篇" class="headerlink" title="梦想篇"></a>梦想篇</h3><blockquote><p>“感谢我一直坚持没放弃自己的理想，感恩节快乐”     </p><ul><li>—-11月23日       </li></ul></blockquote><p>这句话是一个好友送给我的，很多眼泪也都是因为这个人用非常犀利的话把我希望藏起来的问题都赤裸裸，一丝不挂的放在了桌上。。追梦的路上，很庆幸有这些人，这种人的存在。因为这种人的存在，在知道梦想是多么珍贵。我一直是一个鄙视情怀甚至一点没有情怀的人，可是这一年下来，情怀这种虚无的东西，竟然前无声息的增长起来。    </p><p>经历了执行中的艰难挫败，经历了对成本的让步和无奈，经历了对大众认知的失望，经历了每一天都对明天开销的焦虑，经历了自己员工憎恶，更加发觉情怀的可贵，情怀是支撑自己走下去的东西，而情怀此时不是坚持初衷，而是在不断的妥协中尽量保留一点点天生的骄傲。好似鸦片，上瘾飘飘欲仙，是回到现实中最大的力量。    </p><p>总结一下：<br><img src="/img/2017/the-last-day-of-2017.jpg" alt></p><ul><li>3月，正式辞职了。       </li><li>4月，遇见了第一个可能的合伙人，谈崩</li><li>5月，遇见了第二个可能的合伙人，谈崩</li><li>6月，放弃了找合伙人的想法，自己做</li><li>6月，实现了创业以来的第一次收支平衡</li><li>7月，莫名的拉了一笔不错的皮条，小赚了一笔</li><li>8月，激情四射的开始走一条半灰色的技术方向，希望用半灰色的手段帮助正常用户解决问题</li><li>9月，原有的业务被彻底扼杀，我找不到了方向，绝望</li><li>10月，确定了方向选择聊天机器人，做差旅助手</li><li>11月，一次又一次的换了底层架构，直到第三次确认并搭建了demo</li><li>12月，进入了百度AI加速器，得到了一些肯定，得到了越来越多人的认可。</li></ul><p>2018年呢？</p><p>我在效率手册上写了这些计划</p><ol><li>一定要去参加马甲线大赛，已经推迟了2年的计划。。。</li><li>开始写博客，每个月至少写一篇专栏文章。越发觉得文字是最好的思想沉淀方式。私密日志不算。</li><li>每个月至少采访一个人，做出行业视频</li><li>公司要相继完成天使轮和A轮。</li><li>搭建一个10个人的稳定团队</li><li>至少搞定5家航空公司，接入我的订票服务</li><li>至少拿出10万做一笔小的投资，而不是稳定的基金</li><li>去厦门</li><li>去泰国</li><li>谈一场超过6个月的恋爱</li></ol><hr><h4 id="最后，翻开了2017年的微博，摘抄出一个一个的心情句子，聊以慰藉。"><a href="#最后，翻开了2017年的微博，摘抄出一个一个的心情句子，聊以慰藉。" class="headerlink" title="最后，翻开了2017年的微博，摘抄出一个一个的心情句子，聊以慰藉。"></a>最后，翻开了2017年的微博，摘抄出一个一个的心情句子，聊以慰藉。</h4><ul><li><p>“今年打算再看看，特别努力的一年是什么样子”  — 1月6日     </p></li><li><p>“那年我21岁，在我一生的黄金时代，我有好多奢望，我想爱，想吃，还想在一瞬间变成天上班名办案的云，后来我才知道，生活就是一个缓慢受锤的过程，人一天* 天老下去，奢望也一天天小时，最后变得像挨了锤的牛一样。可是我过21岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。–《黄金时代》”   —-1月13日     </p></li><li><p>“爱一个人，爱的是他身上的自己”   —-1月19日     </p></li><li><p>“本来只是打算离职，打了电话之后，算了算钱，彻底决定离职了。最后，看一场《降临》算是收尾了吧” —-1月25日     </p></li><li><p>“怎么办，今天定了好多小目标@Natelie77”  —2月1日     </p></li><li><p>“第一次给公众号的文章评论获得这么多赞，盗用了我女神@王潇_潇洒姐 书里《按自己的意愿过一生》的文字。文章链接 《开公司的刘总》 ，评论： “这种接活做活，通宵达旦，上一单与下一单充满投机性， 产品以客户主观意志为标准，生产方式毫无规律，出卖单位时间劳动力在慢车道上发展，不存在米次法则的突* 破口，其实谈不上是真正的创业，充其量只能算作有雇佣关系的自由职业者或者手艺人或者包工头。。”，得到了103个赞 ”     —2月5日     </p></li></ul><ul><li>“绝大多数人都无法以自己喜欢的方式过一生，无论是能力，机遇或者各种说不清楚道不明的原因。生活讲示例而不看梦想，所谓的实力不光是有多少钱和美貌，还包括多少抵得住寂寞的耐心，坚持自我的孤独和缜密规划的现实。”     –2月13日     </li></ul><ul><li><p>“既然无法逃避，只能振作起来，给命运一个拥抱。是不是很热血动漫台词的感觉？”   —2月15日     </p></li><li><p>“难得一个宁静的下午，准备开启freelancer的新篇章”   —2月16日     </p></li><li><p>“搬到孵化器的第一天，有一种新生入学的喜悦感，坐在对面的是一个做滑板的创业者，晚上一起吃了麻辣烫，觉得似乎开启了一段美好的探险之旅。在这里，我终于不再感觉自己是个异类，入职好久都没法和同事打成一片，一度怀疑自己得了社交恐惧症的我，在这里的第一天竟然如此轻松[笑cry][笑cry][笑cry][笑cry]”   —2月24日     </p></li><li><p>“我一直担心机会来了抓不住就会错过机会，没想到只要准备好了，这个时代，遍地是机会” —-3月13日     </p></li></ul><p>“懒，是最彻底的人间失格”  —3月17日     </p><ul><li><p>“按自己的意愿过一生，这是一句誓言，我记得住” —- 3月18日     </p></li><li><p>“人生三道，上坡道，下坡道，没想到”  —-3月23日     </p></li></ul><ul><li><p>“愿我们相逢在更高处—-《爱乐之城》教会我的事”   —3月31日     </p></li><li><p>“我想让你瞧见，所以照亮了自己，我有能力去爱，有能力被爱，在若干年后我会牵着你的手，和你说，那晚璀璨灯火下，我就知道，你是我一生所爱”    —4月2日     </p></li><li><p>“穿着8cm的小细高跟走过河上的木质桥奔向火车站，战战兢兢又趾高气昂，鞋的小细根随时会陷入木质桥的窟窿洞中。  ”  —4月9日     </p></li><li><p>“不要有受害者心态，要自信”   —- 4月13日     </p></li><li><p>“人际关系拼的不是技巧，而是日久天长，今天趁早手册的一字真言”     —4月18日     </p></li><li><p>“做个商人，做个谦卑的人，做个有愿景的人，做个尊重别人的人，做个尊重自己的人”   —4月19日     </p></li><li><p>“每天想着下车的人做不了品牌，认清自己的战场，做品牌就要保持长跑心态，如果不行，退出。”  —-4月20日     </p></li><li><p>“你知道比悲伤更令人悲伤的事情是什么么？比悲伤更令人悲伤的是，空欢喜”   —-4月27日     </p></li><li><p>“真心说出的话不一定是真话啊，那是情话啊” —-4月29日     </p></li><li><p>“一个人走，走的快，一群人走，走的远。真正的高手都是悄无声息的摆渡人”   —-5月4日     </p></li><li><p>“随着年龄的增长，就是会信任好久以前的人，就是会喜欢旧的东西。”   —5月16日     </p></li><li><p>“第一次有这种感觉：都在等着你失败看你笑话，以证明对方不是弱者，以证明他认为你不行对的判断是正确的。<br>然而，我偏偏不想让这些人得逞”    —-5月23日     </p></li><li><p>“虽然一身毛病，却朝气澎湃，随时可以为自己喜欢的事去死”    —–5月24日     </p></li><li><p>“每一天都感觉目标越来越清晰，越来越近，这种感觉tmd爽了”    —5月31日     </p></li><li><p>“好喜欢徐静蕾，认真的偏执狂。看起来又温柔又美丽”   —- 6月7日     </p></li><li><p>“终于开始有收入了，几年创业日子的第一个月收支平衡”    —6月12日     </p></li><li><p>“”休息能力是一种职业能力，和沟通、表达、讲演、时间管理一样，是你实力的一部分。真正的休息，不是为了爽，而是为了更好工作。”    —-6月13日     </p></li><li><p>“以前喜欢死扛，没什么熬两夜做不了的事情，等遇见的事情越来越多，我才发现并不是这样。发现自己渺小的可怜  ”    —-6月17日     </p></li><li><p>“做人呐，随大流最舒服，标新立异最累”   —6月21日     </p></li><li><p>“我不怕你太受欢迎，我只怕你来者不拒。  孤独比将就有趣多了”  —-6月25日     </p></li><li><p>“她能给你再来一次的勇气、空间和机会”     —7月9日     </p></li><li><p>“后来，真硬朗开明的，更是梁凤仪的语录，以至于我在电脑里多年存有语录文档，不时看看。“哭是无助，伤心，绝望，放弃的表示。只余一分希望，一点精力，一线生机，一份援引我都不会哭，因而我会默默苦干。” 像这句，陪我很多夜晚。 ”  -* –7月20日     </p></li><li><p>“这一刻，我仿佛也拿到了我的鬼冢虎，也许未来，我也会制作我的nike，到底未来什么样，我不知道。—纪念和Mypolly 正式合作的第一天”  —7月22日     </p></li><li><p>“city of starsm are you just shining for me….”    —-8月17日     </p></li><li><p>“以前你觉得是因为a的事情，后来你会慢慢就发现是因为b，不过管他是因为什么，我要的是结果  ”   —8月19日     </p></li><li><p>“只有眼前路，没有身后身”     —–8月30日     </p></li><li><p>“如果换一种生活不能更好，为什么还要换呢？”      —-9月8日     </p></li><li><p>“一旦盲目乐观，就离死不远了”     —–9月9日     </p></li><li><p>“怀有一颗敬畏之心”     —-9月11日     </p></li><li><p>“做计划是最痛苦的事情之一”    —-9月17日     </p></li><li><p>“下班看到快手的logo，我希望五年以后，我的logo 也能这样挂出来。”     —–9月20日     </p></li><li><p>“你要么曲阜，要么反抗，就是这样。你只要开始，解决一个问题，解决下一个问题，解决下下个问题。等解决了足够的问题，你就能回家了。 《火星救援》”     ——10月14日     </p></li><li><p>“不能因为现实复杂而放弃梦想，也不能因为理想遥远而放弃挑战”     —-10月19日     </p></li><li><p>“回顾了一下做过的蠢事。发现都是必然的、无可避免的。不然后来更蠢”    —-10月30日     </p></li><li><p>“爱上了章子怡，爱她对待热爱事业认真严肃的态度，精力大风大浪后对待流言蜚语的豁达，对真实情感的司仪追求，以及作为母亲的温柔目光。”     —-10月30日     </p></li><li><p>“对待表演非常尊敬且认真的人，靠自己一步一步走到现在这个地位。”  —– 10月30日     </p></li><li><p>“今年辞职创业，最大的进步是勇敢了，不再怕犯错误，学会了总结、思考和做计划。计划必须可控，输出要有质量，同时计划要有一个明确的完成评价标准。从2月到现在的周报正逐渐变得有明确的计划和认真的思考，感谢潇洒姐女神人设和没完没了骂我的创业导师，许愿明年我能入选亚杰汇，这样就能见到女神了。”    —-11月8日         </p></li><li><p>“在幽默感，文字能力和逻辑能力上最欠缺的那部分人总是高估自己的能力。换句话说，越是无能的人，越是可能高估自己的水平，所谓【不知道自己不知道】知道真正接受相关训练，才可能【知道自己不知道】—–达克效应”    —-11月12日         </p></li><li><p>“找到一个点，聚焦努力做好，其他交给命运”    —-11月15日         </p></li><li><p>“会遇到谈不拢的人，会遇到给你施压的人，终究还是回遇到很多帮助你的人”   —-11月15日         </p></li><li><p>“有人说，常胜将军的秘诀是不打没有把握的仗。<br>可这一刻，忽然发觉自己没有任何准备，只想临阵脱逃，绝望”   —11月17日    </p></li><li><p>“感谢我一直坚持没放弃自己的理想，感恩节快乐”     —-11月23日    </p></li><li><p>“总之你记住一件事情，就是所欲的资源都是需要你经过努力去争取的。如果你最开始就放弃了，你就不会有任何机会。而更重要的是，你要自己去发现机会，如果机会你都不知道，那就谈不上争取了。”      —-12月1日</p></li><li><p>“爸爸说，他们* 以后都是平凡人，你是要成气候的，我7岁，我信了。<br>有的时候，我努力，我打卡，有的人说你干嘛那么努力啊，觉得你格格不入，<br>我干嘛要和你格格入啊，我就是格格不入，你平凡人啊。。。。<br>很多的胆怯，就是因为没有人和你说这句话。好的教育，就是给他一个最优版本的命运的预言”    —–12月13日       </p></li><li><p>“有些人活着的唯一姿态就是率性，内方外方昂首阔步，譬如在下。<br>人生就是体验，体验就要淋漓”       —-12月27日       </p></li><li><p>“我爱这个行业，就像我爱活着的人生”    —-12月30日       </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 计划 </tag>
            
            <tag> 趁早效率手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为研究生分享-CHATBOT行业分享</title>
      <link href="/presentation/2017-12-14-chatbot-sharing.html"/>
      <url>/presentation/2017-12-14-chatbot-sharing.html</url>
      
        <content type="html"><![CDATA[<h2 id="PPT-内容分享"><a href="#PPT-内容分享" class="headerlink" title="PPT 内容分享"></a>PPT 内容分享</h2><p><img src="/img/2017/chatbot-sharing/chatbot-sharing-2.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-3.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-4.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-5.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-6.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-7.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-8.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-9.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-10.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-11.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-12.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-13.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-14.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-15.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-16.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-17.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-18.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-19.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-20.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-21.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-22.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-23.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-24.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-25.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-26.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-27.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-28.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-29.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-30.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-31.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-32.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-33.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-34.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-35.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-36.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-37.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-38.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-39.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-40.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-41.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-42.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-43.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-44.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-45.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-46.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-47.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-48.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-49.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-50.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-51.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-52.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-53.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-54.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-55.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-56.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-57.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-58.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-59.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-60.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-61.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-62.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-63.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-64.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-65.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-66.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-67.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-68.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-69.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-70.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-71.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-72.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-73.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-74.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-75.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-76.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-77.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-78.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-79.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-80.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-81.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-82.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-83.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-84.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-85.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-86.jpg" alt><br><img src="/img/2017/chatbot-sharing/chatbot-sharing-87.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> 北邮 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度AI开发者大会分享UNIT和桔子互动的合作</title>
      <link href="/presentation/2017-12-4-baidu-ai.html"/>
      <url>/presentation/2017-12-4-baidu-ai.html</url>
      
        <content type="html"><![CDATA[<h2 id="活动信息"><a href="#活动信息" class="headerlink" title="活动信息"></a>活动信息</h2><p><img src="/img/2017/baidu-ai-0.jpeg" alt>    </p><h2 id="PPT内容分享"><a href="#PPT内容分享" class="headerlink" title="PPT内容分享"></a>PPT内容分享</h2><p><img src="/img/2017/baidu-ai-2.jpg" alt><br><img src="/img/2017/baidu-ai-3.jpg" alt><br><img src="/img/2017/baidu-ai-4.jpg" alt><br><img src="/img/2017/baidu-ai-5.jpg" alt><br><img src="/img/2017/baidu-ai-6.jpg" alt><br><img src="/img/2017/baidu-ai-7.jpg" alt><br><img src="/img/2017/baidu-ai-8.jpg" alt><br><img src="/img/2017/baidu-ai-9.jpg" alt><br><img src="/img/2017/baidu-ai-10.jpg" alt><br><img src="/img/2017/baidu-ai-11.jpg" alt><br><img src="/img/2017/baidu-ai-12.jpg" alt><br><img src="/img/2017/baidu-ai-13.jpg" alt><br><img src="/img/2017/baidu-ai-14.jpg" alt><br><img src="/img/2017/baidu-ai-15.jpg" alt><br><img src="/img/2017/baidu-ai-16.jpg" alt><br><img src="/img/2017/baidu-ai-17.jpg" alt><br><img src="/img/2017/baidu-ai-18.jpg" alt><br><img src="/img/2017/baidu-ai-19.jpg" alt><br><img src="/img/2017/baidu-ai-20.jpg" alt><br><img src="/img/2017/baidu-ai-21.jpg" alt><br><img src="/img/2017/baidu-ai-22.jpg" alt>         </p><p>最后，放一张我在现场的图片吧。<br><img src="/img/2017/baidu-ai-1.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chatbot </tag>
            
            <tag> unit </tag>
            
            <tag> 百度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 玩转微信机器人框架</title>
      <link href="/presentation/2017-11-17-docker.html"/>
      <url>/presentation/2017-11-17-docker.html</url>
      
        <content type="html"><![CDATA[<h2 id="PPT-内容分享"><a href="#PPT-内容分享" class="headerlink" title="PPT 内容分享"></a>PPT 内容分享</h2><p><img src="/img/2017/docker-2.jpg" alt><br><img src="/img/2017/docker-3.jpg" alt><br><img src="/img/2017/docker-4.jpg" alt><br><img src="/img/2017/docker-5.jpg" alt><br><img src="/img/2017/docker-6.jpg" alt><br><img src="/img/2017/docker-7.jpg" alt><br><img src="/img/2017/docker-8.jpg" alt><br><img src="/img/2017/docker-9.jpg" alt><br><img src="/img/2017/docker-10.jpg" alt><br><img src="/img/2017/docker-11.jpg" alt><br><img src="/img/2017/docker-12.jpg" alt><br><img src="/img/2017/docker-13.jpg" alt><br><img src="/img/2017/docker-14.jpg" alt><br><img src="/img/2017/docker-15.jpg" alt><br><img src="/img/2017/docker-16.jpg" alt><br><img src="/img/2017/docker-17.jpg" alt><br><img src="/img/2017/docker-18.jpg" alt>   </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Using Jsdoc to sync the doc with the latest code</title>
      <link href="/project/2017-09-20-add-wechaty-jsdoc.html"/>
      <url>/project/2017-09-20-add-wechaty-jsdoc.html</url>
      
        <content type="html"><![CDATA[<p>In order to sync the doc with the latest code, it’s best to use <a href="https://github.com/jsdoc3/jsdoc" target="_blank" rel="noopener">jsdoc</a> to describe the API and use <a href="https://github.com/jsdoc2md/jsdoc-to-markdown" target="_blank" rel="noopener">jsdoc-to-markdown</a> to generate markdown format documents to the docs directory.</p><p><img src="/img/2017/add-wechaty-jsdoc-automate-all-the-things.jpg" alt="automate all the things"></p><p>Yes, we planned to do this for nearly a year… </p><p>Thanks to <a href="https://github.com/zixia" target="_blank" rel="noopener">@Huan</a>, <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a>,<a href="https://github.com/hczhcz" target="_blank" rel="noopener">@hczhcz</a>, <a href="https://github.com/kis87988" target="_blank" rel="noopener">@William</a>, by the end of August, we finally convert all the doc to jsdoc. And I’d like to share some jsdoc experience here.</p><blockquote><p>We need to document them better, not only the public but also the internal modules and methods.<br>Finally we decided to use the classic <a href="http://usejsdoc.org/" title="jsdoc" target="_blank" rel="noopener">jsdoc</a> to embed document in TypeScript, then generate document to <a href="https://github.com/Chatie/wechaty/tree/master/docs" title="docs/" target="_blank" rel="noopener">docs/</a> by <a href="https://github.com/jsdoc2md/jsdoc-to-markdown" title="jsdoc2md" target="_blank" rel="noopener">jsdoc2md</a>.<br>– @Huan said in <a href="https://github.com/Chatie/wechaty/issues/73" title="issue 73" target="_blank" rel="noopener">issue 73</a> in Nov 2016.</p></blockquote><p>At first, we write the doc in <a href="https://github.com/Chatie/wechaty/wiki" title="wiki" target="_blank" rel="noopener">wiki</a>, and it lasts for nearly a year…..</p><p>A lot of developers use wiki to learn wechaty, but the wiki’s performance is not good, it cannot update automatically and doesn’t base on user’s most demand.</p><blockquote><ul><li>some minor fix (such as the different naming <a href="https://github.com/wechaty/wechaty/wiki/API#message-class" target="_blank" rel="noopener">Message Class</a> &amp; <a href="https://github.com/wechaty/wechaty/wiki/API#class-room" target="_blank" rel="noopener">Class Room</a>) </li><li>improvement on the formatting, e.g. the level setting of each title </li><li>maybe, add an index for better guiding<br>– In Feb 2017, <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a> creat an <a href="https://github.com/Chatie/wechaty/issues/252" title="issue" target="_blank" rel="noopener">issue</a> and expressed his willingness to contribute the document.</li></ul></blockquote><p>I like <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a>‘s idea about the document guide:   </p><ul><li><strong>First:</strong> Learn the awesome features of Wechaty</li><li><strong>Second:</strong> See more advanced functions</li><li><strong>Third:</strong> Reach the boundary? Help us develop Wechaty</li></ul><p>Thanks for <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a>‘s suggestion and we decide to do the doc as soon as possible.</p><h1 id="JsDoc-amp-amp-jsdoc2md"><a href="#JsDoc-amp-amp-jsdoc2md" class="headerlink" title="JsDoc &amp;&amp; jsdoc2md"></a>JsDoc &amp;&amp; jsdoc2md</h1><p><a href="http://usejsdoc.org/" target="_blank" rel="noopener">JsDoc</a> is an API documentation generator for Javascript<br><a href="https://github.com/jsdoc2md/jsdoc-to-markdown" target="_blank" rel="noopener">jsdoc-to-markdown</a> is a tool to help developers create markdown API document from jsdoc-commented </p><h2 id="JsDoc"><a href="#JsDoc" class="headerlink" title="JsDoc"></a>JsDoc</h2><p>JSDoc’s purpose is to document the API of your JavaScript application or library. It is assumed that you will want to document things like modules, namespaces, classes, methods, method parameters, and so on.</p><p>JSDoc comments should generally be placed immediately before the code being documented. Each comment must start with a <code>/**</code> sequence in order to be recognized by the JSDoc parser. Comments beginning with <code>/*</code>, <code>/***</code>, or more than 3 stars will be ignored. This is a feature to allow you to suppress parsing of comment blocks.</p><p>The simplest documentation is just a description</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** This is a description of the foo function. */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="http://www.2ality.com/2011/08/jsdoc-intro.html" target="_blank" rel="noopener">jsdoc Introduction</a></li><li><a href="http://usejsdoc.org/" target="_blank" rel="noopener">jsdoc English document</a></li><li><a href="http://www.css88.com/doc/jsdoc/" target="_blank" rel="noopener">jsdoc Chinese document</a></li><li><strong>Document This</strong><br> I use vscode as my editor, and use <a href="https://marketplace.visualstudio.com/items?itemName=joelday.docthis" target="_blank" rel="noopener">Document This</a><br>  “Document This” is a Visual Studio Code extension that automatically generates detailed JSDoc comments for both TypeScript and JavaScript files. You can use Ctrl+Alt+D and again Ctrl+Alt+D to generates documentation for whatever the caret is on or inside of. </li></ul><h2 id="jsdoc2md"><a href="#jsdoc2md" class="headerlink" title="jsdoc2md"></a>jsdoc2md</h2><p>Generates markdown API documentation from jsdoc annotated source code. Useful for injecting API docs into project README files.</p><p>When you document your code using valid jscode comments and run jsdoc command (e.g. <code>jsdoc2md example.js</code>), then you can get a markdown output easily.</p><p>At first, I just write all of jsdoc in the code and link <a href="https://github.com/Chatie/wechaty/blob/master/docs/index.md" target="_blank" rel="noopener">wechaty/docs/index.md</a> to the users, but I cannot sync <code>README.md</code> file with the code and make readme as simple as it can, so I have to do some else.</p><p>First, I should know how jsdoc2md works.</p><h3 id="How-jsdoc2md-works"><a href="#How-jsdoc2md-works" class="headerlink" title="How jsdoc2md works"></a>How jsdoc2md works</h3><p>This is the main use case (render documentation) sequence:</p><ol><li>User runs <code>jsdoc2md example.js</code>.</li><li><a href="https://github.com/jsdoc2md/jsdoc-api" target="_blank" rel="noopener">jsdoc-api</a> is used to obtain the raw jsdoc data for the input source code provided. (a kind of JSON output)</li><li>this data is transformed into something suitable for passing into a template by <a href="https://github.com/jsdoc2md/jsdoc-parse" target="_blank" rel="noopener">jsdoc-parse</a> (which also adds support for the jsdoc2md-specific tags like <code>@typicalname</code>, <code>@done</code>, <code>@category</code> etc).</li><li>the resulting template data is passed into <a href="https://github.com/jsdoc2md/dmd" target="_blank" rel="noopener">dmd</a>. This output is returned to the user.</li></ol><p>In order to pick function name from the full api doc, I learnt about <a href="https://github.com/jsdoc2md/dmd" target="_blank" rel="noopener">dmd</a>, it is the default output templates for <a href="https://github.com/jsdoc2md/jsdoc-to-markdown" target="_blank" rel="noopener">jsdoc-to-markdown</a>. It contains <a href="http://handlebarsjs.com/" target="_blank" rel="noopener">handlebars</a> partials and helpers intended to transform <a href="https://github.com/jsdoc2md/jsdoc-parse" target="_blank" rel="noopener">jsdoc-parse</a> output into markdown API document.</p><p>For the wechaty document, I change two following dmd partials:</p><ul><li>link.hbs</li><li>sig-link-parent.hbs</li></ul><h1 id="Wechaty-Progress-on-JsDoc-amp-amp-jsdoc2md"><a href="#Wechaty-Progress-on-JsDoc-amp-amp-jsdoc2md" class="headerlink" title="Wechaty Progress on JsDoc &amp;&amp; jsdoc2md"></a>Wechaty Progress on JsDoc &amp;&amp; jsdoc2md</h1><h2 id="Discussion-history"><a href="#Discussion-history" class="headerlink" title="Discussion history"></a>Discussion history</h2><h3 id="Related-Issue"><a href="#Related-Issue" class="headerlink" title="Related Issue"></a>Related Issue</h3><p><a href="https://github.com/zixia" target="_blank" rel="noopener">@Huan</a>, <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a>,<a href="https://github.com/hczhcz" target="_blank" rel="noopener">@hczhcz</a>, <a href="https://github.com/kis87988" target="_blank" rel="noopener">@William</a> and I talked a lot about wechaty document on the following issues: </p><ul><li><strong>issue73:</strong> <a href="https://github.com/chatie/wechaty/issues/73" target="_blank" rel="noopener">[doc] To Embed Document in Wechaty Code for Generating Automaticly</a>   </li><li><strong>issue252:</strong> <a href="https://github.com/chatie/wechaty/issues/252" target="_blank" rel="noopener">[doc] Contribute to the doc editing[ jsdoc / jsdoc2md / typedoc ]</a>    </li></ul><h3 id="Related-PR"><a href="#Related-PR" class="headerlink" title="Related PR"></a>Related PR</h3><p>Also, <a href="https://github.com/hczhcz" target="_blank" rel="noopener">@hczhcz</a> and <a href="https://github.com/ax4" target="_blank" rel="noopener">@ax4</a> and I contribute a lot on the document:  </p><ul><li><strong>PR378:</strong> <a href="https://github.com/Chatie/wechaty/issues/378" target="_blank" rel="noopener">jsdoc2md may flush some pieces of the embedded doc</a>   </li><li><strong>PR380:</strong> <a href="https://github.com/Chatie/wechaty/issues/380" target="_blank" rel="noopener">fix jsdoc flush issue #378 and minor fix on the doc examples</a>  </li><li><strong>PR640:</strong> <a href="https://github.com/Chatie/wechaty/pull/640" target="_blank" rel="noopener">add documentation TODO entries</a>    </li><li><strong>PR725:</strong> <a href="https://github.com/Chatie/wechaty/pull/725" target="_blank" rel="noopener">add wechaty document</a>   </li><li><strong>PR321:</strong> <a href="https://github.com/Chatie/wechaty/pull/321" target="_blank" rel="noopener">Add JsDoc for Class Contact</a></li></ul><h2 id="Doc-basic-line"><a href="#Doc-basic-line" class="headerlink" title="Doc basic line"></a>Doc basic line</h2><p>For the convenience of developers, our doc guideline as follows:</p><ol><li>Simple and clear</li><li>Generate markdown for better readable version control and GitHub page hosting.</li></ol><h2 id="Auto-doc-working-flow"><a href="#Auto-doc-working-flow" class="headerlink" title="Auto-doc working flow"></a>Auto-doc working flow</h2><ol><li>Develop in TypeScript</li><li>Embedded doc insert in TypeScript</li><li>Compile TypeScript into JavaScript, using <code>npm run dist</code></li><li>Run jsdoc / jsdoc2md, using <code>npm run doc</code></li><li>Get the final doc, in <a href="https://github.com/Chatie/wechaty/blob/master/docs/index.md" target="_blank" rel="noopener">index.md</a>, config it to <a href="http://chatie.io/wechaty" target="_blank" rel="noopener">chatie.io/wechaty</a></li></ol><h2 id="Wechaty-Jsdoc-file"><a href="#Wechaty-Jsdoc-file" class="headerlink" title="Wechaty Jsdoc file"></a>Wechaty Jsdoc file</h2><p>We embed doc into the following file:</p><ul><li><a href="https://github.com/Chatie/wechaty/blob/master/src/wechaty.ts" target="_blank" rel="noopener">src/wechaty.ts</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/src/message.ts" target="_blank" rel="noopener">src/message.ts</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/src/room.ts" target="_blank" rel="noopener">src/room.ts</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/src/contact.ts" target="_blank" rel="noopener">src/contact.ts</a></li><li><a href="https://github.com/Chatie/wechaty/blob/master/src/friend-request.ts" target="_blank" rel="noopener">src/friend-request.ts</a></li></ul><h2 id="Wechaty-jsdoc2md-progress"><a href="#Wechaty-jsdoc2md-progress" class="headerlink" title="Wechaty jsdoc2md progress"></a>Wechaty jsdoc2md progress</h2><h3 id="1-Generate-jsdoc2md-file"><a href="#1-Generate-jsdoc2md-file" class="headerlink" title="1. Generate jsdoc2md file"></a>1. Generate jsdoc2md file</h3><p>Using the following command can generate document easily.<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jsdoc2md dist/src/&#123;wechaty,room,contact,friend-request,message&#125;.js dist/src/puppet-web/friend-request.js&gt;&gt; docs/index.md</span><br></pre></td></tr></table></figure></p><h3 id="2-Use-template-to-Sync-Readme-with-api-doc"><a href="#2-Use-template-to-Sync-Readme-with-api-doc" class="headerlink" title="2. Use template to Sync Readme with api doc"></a>2. Use template to Sync Readme with api doc</h3><p>Actually, the first step is enough, but I think we need insert and sync all of the API docs into README, so I use a template by the following command:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jsdoc2md --template docs/partials/README.hbs dist/src/&#123;wechaty,room,contact,friend-request,message&#125;.js dist/src/puppet-web/friend-request.js&gt;&gt; README.md</span><br></pre></td></tr></table></figure></p><p>Then add the partials<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&gt;member-<span class="built_in">index</span>-<span class="keyword">list</span>~&#125;&#125;</span><br><span class="line">``` </span><br><span class="line"><span class="keyword">to</span> show the API directory, because the full doc <span class="keyword">is</span> too big <span class="keyword">to</span> <span class="keyword">put</span> in README, <span class="built_in">and</span> it <span class="keyword">is</span> not necessary.</span><br><span class="line"></span><br><span class="line">### <span class="number">3</span>. Linkable Code References</span><br><span class="line"></span><br><span class="line">After the second step, I found the link jsdoc2md generate <span class="keyword">is</span> <span class="keyword">an</span> anchor link(`#`), it means I cannot link it <span class="keyword">to</span> other pages(http://chatie.io/wechaty), this <span class="keyword">is</span> very inconvenient <span class="keyword">for</span> readers.   </span><br><span class="line">Inspired by [[jsdoc2md-issue-<span class="number">123</span>](http<span class="variable">s:</span>//github.<span class="keyword">com</span>/jsdoc2md/jsdoc-<span class="keyword">to</span>-markdown/issues/<span class="number">123</span>)], [@KevinAst](http<span class="variable">s:</span>//github.<span class="keyword">com</span>/KevinAst) using jsdoc-<span class="keyword">to</span>-markdown wrote <span class="keyword">a</span> beatutiful doc: [astx-redux-util](http<span class="variable">s:</span>//astx-redux-util.js.org/<span class="number">1.0</span>.<span class="number">0</span>/).    </span><br><span class="line">I found maybe I can created <span class="keyword">a</span> custom partial too.   </span><br><span class="line">Then I override the following templates in `docs/partials/overrides`, adding http://chatie.io/wechaty in the link:</span><br><span class="line">* link.hbs</span><br><span class="line">* <span class="keyword">sig</span>-link-parent.hbs</span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> the reason why I <span class="built_in">add</span> the following script in `package.json` :</span><br></pre></td></tr></table></figure></p><p>jsdoc2md –partial docs/partials/overrides/*.hbs –template docs/partials/README.hbs dist/src/{wechaty,room,contact,friend-request,message}.js dist/src/puppet-web/friend-request.js&gt;&gt; README.md<br><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">`<span class="comment">--partial` command override `link.hbs` and `sig-link-parent.hbs`</span></span><br><span class="line"></span><br><span class="line">Then, all done!</span><br><span class="line"></span><br><span class="line"><span class="comment"># To Contributor: How to add jsdoc when contributing</span></span><br><span class="line"></span><br><span class="line">For other developers, I tried my best <span class="built_in">to</span> make <span class="keyword">it</span> easier <span class="built_in">to</span> <span class="built_in">add</span> doc, just <span class="keyword">the</span> following <span class="number">2</span> steps:</span><br><span class="line"><span class="comment">### 1. Add jsdoc in your code like the following shows.</span></span><br></pre></td></tr></table></figure></p><p>/*<em> This is a description of the foo function. </em>/<br>function foo() {<br>}<br><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">### <span class="number">2.</span> Run the following command</span><br></pre></td></tr></table></figure></p><p>npm run doc<br><code>`</code></p><p>Then you can find the generated jsdoc here: <a href="https://github.com/Chatie/wechaty/blob/master/docs/index.md" target="_blank" rel="noopener">wechaty/docs/index.md</a></p><p>Cheers!</p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> 技术探索 </tag>
            
            <tag> jsdoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn Rivescript</title>
      <link href="/chatbot/2017-10-04-learn-rivescript.html"/>
      <url>/chatbot/2017-10-04-learn-rivescript.html</url>
      
        <content type="html"><![CDATA[<p>Study from <a href="https://www.rivescript.com" target="_blank" rel="noopener">rivescript</a> and <a href="https://github.com/aichaos/rivescript-js" target="_blank" rel="noopener">rivescript-js</a> Write part of the doc as I prefered.    </p><p>Compare with Superscript, I prefer rivescript more for the following reason:</p><ol><li>Doc is far more complete than superscript and has all kinds of examples.</li><li>Rivescript is more controllable than superscript. Superscript will do some random thing for more Intelligent.</li><li>Rivescript using Unicode to support Chinese wildcards and almost support all basic Chinese rules, which superscript cannot do.</li><li>Really simple, without MongoDB, while superscript has MongoDB built-in.</li></ol><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><p><code>+</code> Triggers</p><p><code>-</code> Replies</p><p><code>!</code> Definitions</p><p><code>//</code> Comments</p><p><code>%</code> Previous</p><p><code>*</code> Conditionals</p><p><code>^</code> Line Breaking</p><h2 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h2><h3 id="Tags-has-lt-angled-gt-brackets"><a href="#Tags-has-lt-angled-gt-brackets" class="headerlink" title="Tags has &lt;angled&gt; brackets"></a>Tags has <code>&lt;angled&gt;</code> brackets</h3><p><strong>Insert text in their place, or set a variable silently.</strong></p><h4 id="lt-gt"><a href="#lt-gt" class="headerlink" title="&lt;@&gt;"></a><code>&lt;@&gt;</code></h4><h4 id="lt-star-gt-lt-star1-gt-lt-starN-gt"><a href="#lt-star-gt-lt-star1-gt-lt-starN-gt" class="headerlink" title="&lt;star&gt;,&lt;star1&gt; - &lt;starN&gt;"></a><code>&lt;star&gt;</code>,<code>&lt;star1&gt;</code> - <code>&lt;starN&gt;</code></h4><p>These tags can not be used with <code>+ Trigger</code></p><h4 id="lt-botstar-gt-lt-botstar1-gt-lt-botstarN-gt"><a href="#lt-botstar-gt-lt-botstar1-gt-lt-botstarN-gt" class="headerlink" title="&lt;botstar&gt;, &lt;botstar1&gt; - &lt;botstarN&gt;"></a><code>&lt;botstar&gt;</code>, <code>&lt;botstar1&gt;</code> - <code>&lt;botstarN&gt;</code></h4><p>This tag is similar to <code>&lt;star&gt;</code>, but it captures wildcards present in a <code>% Previous</code> line. Here is an example:</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">+ i bought <span class="keyword">a</span> <span class="keyword">new</span> *</span><br><span class="line">- Oh? What color <span class="keyword">is</span> your <span class="keyword">new</span> <span class="symbol">&lt;star&gt;</span>?</span><br><span class="line"></span><br><span class="line">+ (@colors)</span><br><span class="line">% oh what color <span class="keyword">is</span> your <span class="keyword">new</span> *</span><br><span class="line">- <span class="symbol">&lt;star&gt;</span> <span class="keyword">is</span> <span class="keyword">a</span> pretty color <span class="keyword">for</span> <span class="keyword">a</span> <span class="symbol">&lt;botstar&gt;</span>.</span><br></pre></td></tr></table></figure><p>These tags can not be used with <code>+ Trigger</code>.</p><h4 id="lt-input-gt-lt-reply-gt"><a href="#lt-input-gt-lt-reply-gt" class="headerlink" title="&lt;input&gt;, &lt;reply&gt;"></a><code>&lt;input&gt;</code>, <code>&lt;reply&gt;</code></h4><p>The input and reply tags are used for showing previous messages sent by the user and the bot, respectively. The previous 9 messages and responses are stored, so you can use the tags <code>&lt;input1&gt;</code> through <code>&lt;input9&gt;</code>, or <code>&lt;reply1&gt;</code> through <code>&lt;reply9&gt;</code>to get a particular message or reply. <code>&lt;input&gt;</code> is an alias for <code>&lt;input1&gt;</code>, and <code>&lt;reply&gt;</code> is an alias for <code>&lt;reply1&gt;</code>.</p><figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">// If the user repeats the bot's previous message</span></span><br><span class="line">+ &lt;reply&gt;</span><br><span class="line">- Don<span class="symbol">'t</span> repeat what I say.</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the user keeps repeating themselves over and over.</span></span><br><span class="line">+ &lt;input1&gt;</span><br><span class="line">* &lt;input1&gt; == &lt;input2&gt; =&gt; That<span class="symbol">'s</span> the second time you<span class="symbol">'ve</span> repeated yourself.</span><br><span class="line">* &lt;input1&gt; == &lt;input3&gt; =&gt; If you repeat yourself again I<span class="symbol">'ll</span> stop talking.</span><br><span class="line">* &lt;input1&gt; == &lt;input4&gt; =&gt; That<span class="symbol">'s</span> it. I<span class="symbol">'m</span> not talking.&#123;topic=sorry&#125;</span><br><span class="line">- Please don<span class="symbol">'t</span> repeat yourself.</span><br><span class="line"></span><br><span class="line"><span class="comment">// An example that uses both tags</span></span><br><span class="line">+ why did you say that</span><br><span class="line">- I said, <span class="string">"&lt;reply&gt;"</span>, because you said, <span class="string">"&lt;input&gt;"</span>.</span><br></pre></td></tr></table></figure><h4 id="lt-id-gt"><a href="#lt-id-gt" class="headerlink" title="&lt;id&gt;"></a><code>&lt;id&gt;</code></h4><p>This tag inserts the user’s ID, which was passed in to the RiveScript interpreter when fetching a reply. With the interpreter shipped with the Perl RiveScript library, the <code>&lt;id&gt;</code> is, by default, <code>localuser</code>.</p><h4 id="lt-bot-gt"><a href="#lt-bot-gt" class="headerlink" title="&lt;bot&gt;"></a><code>&lt;bot&gt;</code></h4><p>The <code>&lt;bot&gt;</code> tag is used for retrieving a bot variable. It can also be used to set a bot variable.</p><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">+ what <span class="keyword">is</span> your <span class="keyword">name</span></span><br><span class="line">- You can call me &lt;bot <span class="keyword">name</span>&gt;.</span><br><span class="line"></span><br><span class="line">+ tell me about yourself</span><br><span class="line">- I am &lt;bot <span class="keyword">name</span>&gt;, a chatterbot written <span class="keyword">by</span> &lt;bot master&gt;.</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setting a bot variable dynamically</span></span><br><span class="line">+ i hate you</span><br><span class="line">- Aww! You<span class="string">'ve just ruined my day.&lt;bot mood=depressed&gt;</span></span><br></pre></td></tr></table></figure><h4 id="lt-env-gt"><a href="#lt-env-gt" class="headerlink" title="&lt;env&gt;"></a><code>&lt;env&gt;</code></h4><p>The <code>&lt;env&gt;</code> tag is used for retrieving global variables. It can also be used to set a global variable.</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">+ <span class="builtin-name">set</span> <span class="builtin-name">debug</span> mode (<span class="literal">true</span>|<span class="literal">false</span>)</span><br><span class="line">* &lt;id&gt; == &lt;bot master&gt; =&gt; &lt;env <span class="attribute">debug</span>=&lt;star&gt;&gt;Debug mode <span class="builtin-name">set</span> <span class="keyword">to</span> &lt;star&gt;.</span><br><span class="line">- You<span class="string">'re not my master.</span></span><br></pre></td></tr></table></figure><h4 id="lt-get-gt-lt-set-gt"><a href="#lt-get-gt-lt-set-gt" class="headerlink" title="&lt;get&gt;,&lt;set&gt;"></a><code>&lt;get&gt;</code>,<code>&lt;set&gt;</code></h4><h4 id="lt-add-gt-lt-sub-gt-lt-mult-gt-lt-div-gt"><a href="#lt-add-gt-lt-sub-gt-lt-mult-gt-lt-div-gt" class="headerlink" title="&lt;add&gt;, &lt;sub&gt;, &lt;mult&gt;, &lt;div&gt;"></a><code>&lt;add&gt;</code>, <code>&lt;sub&gt;</code>, <code>&lt;mult&gt;</code>, <code>&lt;div&gt;</code></h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">+ give me <span class="number">5</span> <span class="built_in">points</span></span><br><span class="line">- &lt;add <span class="built_in">points</span>=<span class="number">5</span>&gt;You have been given <span class="number">5</span> <span class="built_in">points</span>. Your balance <span class="built_in">is</span>: &lt;<span class="built_in">get</span> <span class="built_in">points</span>&gt;.</span><br></pre></td></tr></table></figure><p>These tags can not be used with <code>+ Trigger</code></p><h4 id="lt-gt-1"><a href="#lt-gt-1" class="headerlink" title="&lt;@&gt;"></a><code>&lt;@&gt;</code></h4><p>equal to <code>{@ &lt;star&gt;}</code></p><h4 id="lt-formal-gt-lt-sentence-gt-lt-uppercase-gt-lt-lowercase-gt"><a href="#lt-formal-gt-lt-sentence-gt-lt-uppercase-gt-lt-lowercase-gt" class="headerlink" title="&lt;formal&gt;, &lt;sentence&gt;, &lt;uppercase&gt;, &lt;lowercase&gt;"></a><code>&lt;formal&gt;</code>, <code>&lt;sentence&gt;</code>, <code>&lt;uppercase&gt;</code>, <code>&lt;lowercase&gt;</code></h4><h4 id="lt-call-gt"><a href="#lt-call-gt" class="headerlink" title="&lt;call&gt;"></a><code>&lt;call&gt;</code></h4><h3 id="Tags-have-curly-brackets"><a href="#Tags-have-curly-brackets" class="headerlink" title="Tags have {curly}brackets"></a>Tags have <code>{curly}</code>brackets</h3><p><strong>Modify the text around them.</strong></p><h4 id="random"><a href="#random" class="headerlink" title="{random}"></a>{random}</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">+ say something <span class="built_in">random</span></span><br><span class="line">- This &#123;<span class="built_in">random</span>&#125;message|sentence&#123;/<span class="built_in">random</span>&#125; has a <span class="built_in">random</span> <span class="keyword">word</span>.</span><br></pre></td></tr></table></figure><h4 id="weight"><a href="#weight" class="headerlink" title="{weight}"></a>{weight}</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>greetings</span><br><span class="line"><span class="bullet">- </span>Hi there!&#123;weight=20&#125;</span><br><span class="line"><span class="bullet">- </span>Hello!&#123;weight=25&#125;</span><br><span class="line"><span class="bullet">- </span>Yos kyoco duckeb!</span><br></pre></td></tr></table></figure><h4 id="lt-gt-2"><a href="#lt-gt-2" class="headerlink" title="{@ } / &lt;@&gt;"></a>{@ <star>} / &lt;@&gt;</star></h4><h4 id="topic"><a href="#topic" class="headerlink" title="{topic}"></a>{topic}</h4><h4 id="person"><a href="#person" class="headerlink" title="{person}, "></a>{person}, <person></person></h4><h4 id="ok"><a href="#ok" class="headerlink" title="{ok}"></a>{ok}</h4><h4 id="s-n"><a href="#s-n" class="headerlink" title="\s \n"></a><code>\s</code> <code>\n</code></h4><h2 id="Line-Breaking"><a href="#Line-Breaking" class="headerlink" title="Line Breaking"></a>Line Breaking</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">+ tell me <span class="keyword">a</span> poem</span><br><span class="line">- Little Miss Muffit sat <span class="keyword">on</span> <span class="title">her</span> <span class="title">tuffet</span>,\<span class="title">n</span></span><br><span class="line">^ In <span class="keyword">a</span> nonchalant <span class="built_in">sort</span> <span class="keyword">of</span> way.\n</span><br><span class="line">^ With her forcefield around her,\n</span><br><span class="line">^ The Spider, <span class="keyword">the</span> bounder,\n</span><br><span class="line">^ Is <span class="keyword">not</span> <span class="keyword">in</span> <span class="keyword">the</span> picture today.</span><br></pre></td></tr></table></figure><p><code>\s</code>  space</p><p><code>\n</code> line break</p><h2 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions"></a>Definitions</h2><ul><li>! local concat = newline | space | none （”file scoped”）</li><li>! version = 2.0</li><li>! var name = Tutorial</li><li>! global debug = true</li><li>! global depth = 50</li><li>! person i am = you are</li></ul><h2 id="rivescript-brain"><a href="#rivescript-brain" class="headerlink" title="rivescript brain"></a>rivescript brain</h2><p>start from <code>begin.rive</code>— contains some configuration settings for your bot’s brain.</p><ul><li>const</li><li>variables— bot variables</li><li>Substitutions: <em>always lowercased</em></li><li>array</li><li>global</li><li>person</li></ul><h2 id="Trigger"><a href="#Trigger" class="headerlink" title="Trigger"></a>Trigger</h2><h3 id="catch-all-wildcards"><a href="#catch-all-wildcards" class="headerlink" title="catch-all wildcards"></a>catch-all wildcards</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">+ <span class="keyword">my</span> <span class="built_in">name</span> <span class="keyword">is</span> *</span><br><span class="line">- Nice <span class="keyword">to</span> meet you, &lt;star1&gt;!</span><br><span class="line"></span><br><span class="line">+ * told <span class="keyword">me</span> <span class="keyword">to</span> <span class="built_in">say</span> *</span><br><span class="line">- Why would &lt;star1&gt; <span class="keyword">tell</span> you <span class="keyword">to</span> <span class="built_in">say</span> <span class="string">"&lt;star2&gt;"</span>?</span><br><span class="line">- Did you <span class="built_in">say</span> <span class="string">"&lt;star2&gt;"</span> <span class="keyword">after</span> &lt;star1&gt; told you <span class="keyword">to</span>?</span><br><span class="line"></span><br><span class="line">+ i am * years old</span><br><span class="line">- A lot <span class="keyword">of</span> people are &lt;star1&gt; years old.</span><br></pre></td></tr></table></figure><h3 id="special-wildcards"><a href="#special-wildcards" class="headerlink" title="special wildcards"></a>special wildcards</h3><ul><li><code>#</code> only match a number</li><li><code>_</code> only match a word with no numbers or spaces</li></ul><h3 id="Alternatives-and-Optionals"><a href="#Alternatives-and-Optionals" class="headerlink" title="Alternatives and Optionals"></a>Alternatives and Optionals</h3><h4 id="alternatives"><a href="#alternatives" class="headerlink" title="alternatives"></a>alternatives</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>what is your (home|office|cell) number</span><br><span class="line"><span class="bullet">- </span>You can reach me at: 1 (800) 555-1234.</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>i am (really|very|super) tired</span><br><span class="line"><span class="bullet">- </span>I'm sorry to hear that you are <span class="xml"><span class="tag">&lt;<span class="name">star</span>&gt;</span></span> tired.</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>i (like|love) the color *</span><br><span class="line"><span class="bullet">- </span>What a coincidence! I <span class="xml"><span class="tag">&lt;<span class="name">star1</span>&gt;</span></span> that color too!</span><br><span class="line"><span class="bullet">- </span>I also have a soft spot for the color <span class="xml"><span class="tag">&lt;<span class="name">star2</span>&gt;</span></span>!</span><br><span class="line"><span class="bullet">- </span>Really? I <span class="xml"><span class="tag">&lt;<span class="name">star1</span>&gt;</span></span> the color <span class="xml"><span class="tag">&lt;<span class="name">star2</span>&gt;</span></span> too!</span><br><span class="line"><span class="bullet">- </span>Oh I <span class="xml"><span class="tag">&lt;<span class="name">star1</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">star2</span>&gt;</span></span> too!</span><br></pre></td></tr></table></figure><h4 id="optionals"><a href="#optionals" class="headerlink" title="optionals"></a>optionals</h4><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">+ how [are] you</span><br><span class="line">- I'm great, you?</span><br><span class="line"></span><br><span class="line">+ what is your (home|<span class="type">office</span>|<span class="type">cell</span>) [phone] number</span><br><span class="line">- You can reach me <span class="built_in">at</span>: <span class="number">1</span> (<span class="number">800</span>) <span class="number">555</span><span class="number">-1234.</span></span><br><span class="line"></span><br><span class="line">+ i have a [<span class="built_in">red</span>|<span class="type">green</span>|<span class="type">blue</span>] car</span><br><span class="line">- I bet you like your car a lot.</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>[<span class="emphasis">*] the machine [*</span>]</span><br><span class="line"><span class="bullet">- </span>How do you know about the machine!?</span><br></pre></td></tr></table></figure><p>use <code>[*]</code> optionals to ignore parts of a message by putting it before or after your trigger instead of on both sides.</p><h3 id="Arrays-in-triggers"><a href="#Arrays-in-triggers" class="headerlink" title="Arrays in triggers"></a>Arrays in triggers</h3><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">// Single word<span class="built_in"> array </span>items</span><br><span class="line">!<span class="built_in"> array </span>colors = red blue green yellow</span><br><span class="line"></span><br><span class="line">// Multiple word items</span><br><span class="line">!<span class="built_in"> array </span>blues = light blue|dark blue|medium blue</span><br><span class="line"></span><br><span class="line">// A lot of colors!</span><br><span class="line">!<span class="built_in"> array </span>colors = red blue green yellow orange cyan fuchsia magenta</span><br><span class="line">^ light red|dark red|light blue|dark blue|light yellow|dark yellow</span><br><span class="line">^ light orange|dark orange|light cyan|dark cyan|light fuchsia</span><br><span class="line">^ dark fuchsia|light magenta|dark magenta</span><br><span class="line">^ black gray white silver</span><br><span class="line">^ light gray|dark gray</span><br></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">+ what color <span class="keyword">is</span> my (@colors) *</span><br><span class="line">- Your &lt;star2&gt; <span class="keyword">is</span> &lt;star1&gt;, silly!</span><br><span class="line">- <span class="keyword">Do</span> I look dumb <span class="keyword">to</span> you? It<span class="comment">'s <span class="doctag">&lt;star1&gt;</span>!</span></span><br><span class="line"></span><br><span class="line">+ i am wearing a (@colors) shirt</span><br><span class="line">- <span class="keyword">Do</span> you really <span class="keyword">like</span> &lt;star&gt;?</span><br></pre></td></tr></table></figure><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">// Without parenthesis, the<span class="built_in"> array </span>doesn't go into a &lt;star&gt; tag.</span><br><span class="line">+ what color is my @colors *</span><br><span class="line">- I don't know what color your &lt;star&gt; is.</span><br></pre></td></tr></table></figure><figure class="highlight tp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Arrays in an optional</span></span><br><span class="line"><span class="comment">- i just bought a [@colors] *</span></span><br><span class="line"><span class="comment">- Is that your first &lt;star&gt;?</span></span><br></pre></td></tr></table></figure><h3 id="priority-triggers"><a href="#priority-triggers" class="headerlink" title="priority triggers"></a>priority triggers</h3><p>Default: triggers with more words are tested first</p><p>This is useful to “hand tune” how well a trigger matches the user’s message.</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">+ google *</span><br><span class="line">- Google search: &lt;a href=<span class="string">"http://google.com/search?q=&lt;star&gt;"</span>&gt;Click Here&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">+ * perl <span class="keyword">script</span></span><br><span class="line">- You need Perl <span class="keyword">to</span> <span class="built_in">run</span> a Perl <span class="keyword">script</span>.</span><br></pre></td></tr></table></figure><p>What if somebody asked the bot, “google write perl script”? They might expect the bot to provide them with a Google search link, but instead the bot replies talking about needing Perl. This is because “<em> perl script” has more words than “google </em>“, and therefore would usually be a better match.</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">+ google *&#123;weight=<span class="number">10</span>&#125;</span><br><span class="line">- Google search: &lt;a href=<span class="string">"http://google.com/search?q=&lt;star&gt;"</span>&gt;Click Here&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">+ * perl <span class="keyword">script</span></span><br><span class="line">- You need Perl <span class="keyword">to</span> <span class="built_in">run</span> a Perl <span class="keyword">script</span>.</span><br></pre></td></tr></table></figure><h2 id="Redirections"><a href="#Redirections" class="headerlink" title="Redirections"></a>Redirections</h2><h3 id="use-outside-the-reply"><a href="#use-outside-the-reply" class="headerlink" title="use outside the reply"></a>use outside the reply</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>hello</span><br><span class="line"><span class="bullet">- </span>Hi there!</span><br><span class="line"><span class="bullet">- </span>Hey!</span><br><span class="line"><span class="bullet">- </span>Howdy!</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>hey</span><br><span class="line">@ hello</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>hi</span><br><span class="line">@ hello</span><br></pre></td></tr></table></figure><h3 id="use-inside-the-reply"><a href="#use-inside-the-reply" class="headerlink" title="use inside the reply"></a>use inside the reply</h3><p><code>{@ &lt;star&gt;}</code> will redirect to <code>*</code> reply</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>* or something&#123;weight=100&#125;</span><br><span class="line"><span class="bullet">- </span>Or something. &#123;@ <span class="xml"><span class="tag">&lt;<span class="name">star</span>&gt;</span></span>&#125;</span><br></pre></td></tr></table></figure><p>shortcut of <code>{@ &lt;star&gt;}</code>  is <code>&lt;@&gt;</code></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>hello *</span><br><span class="line"><span class="bullet">- </span>&#123;@ hello&#125; <span class="xml"><span class="tag">&lt;<span class="name">@</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>hello</span><br><span class="line"><span class="bullet">- </span>Hi there!</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>are you a bot</span><br><span class="line"><span class="bullet">- </span>How did you know I'm a machine?</span><br></pre></td></tr></table></figure><h2 id="Previous"><a href="#Previous" class="headerlink" title="% Previous"></a>% Previous</h2><p>use <code>%</code> to make a short discussion</p><p><code>% Previous</code> lines need to be lowercased just like triggers do.</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+ </span>knock knock</span><br><span class="line"><span class="bullet">- </span>Who's there?</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>*</span><br><span class="line">% who is there</span><br><span class="line"><span class="bullet">- </span><span class="xml"><span class="tag">&lt;<span class="name">star</span>&gt;</span></span> who?</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>*</span><br><span class="line">% * who</span><br><span class="line"><span class="bullet">- </span>LOL! <span class="xml"><span class="tag">&lt;<span class="name">star</span>&gt;</span></span>! That's funny!</span><br></pre></td></tr></table></figure><h2 id="Learning-Things"><a href="#Learning-Things" class="headerlink" title="Learning Things"></a>Learning Things</h2><p><code>&lt;set&gt;</code> &amp; <code>&lt;get&gt;</code></p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">+ <span class="keyword">my</span> <span class="built_in">name</span> <span class="keyword">is</span> *</span><br><span class="line">- &lt;<span class="keyword">set</span> <span class="built_in">name</span>=&lt;star&gt;&gt;It's nice <span class="keyword">to</span> meet you, &lt;<span class="keyword">get</span> <span class="built_in">name</span>&gt;.</span><br><span class="line"></span><br><span class="line">+ what <span class="keyword">is</span> <span class="keyword">my</span> <span class="built_in">name</span></span><br><span class="line">- Your <span class="built_in">name</span> <span class="keyword">is</span> &lt;<span class="keyword">get</span> <span class="built_in">name</span>&gt;, silly!</span><br><span class="line"></span><br><span class="line">+ i am <span class="comment"># years old</span></span><br><span class="line">- &lt;<span class="keyword">set</span> age=&lt;star&gt;&gt;I will remember <span class="keyword">that</span> you are &lt;<span class="keyword">get</span> age&gt; years old.</span><br><span class="line"></span><br><span class="line">+ how old am i</span><br><span class="line">- You are &lt;<span class="keyword">get</span> age&gt; years old.</span><br></pre></td></tr></table></figure><p>retrieve variables from <code>begin.rive</code></p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// The user can ask the bot its name too!</span></span><br><span class="line">+ what <span class="keyword">is</span> your <span class="keyword">name</span></span><br><span class="line">- You can call me &lt;bot <span class="keyword">name</span>&gt;.</span><br><span class="line">- My <span class="keyword">name</span> <span class="keyword">is</span> &lt;bot <span class="keyword">name</span>&gt;.</span><br><span class="line"></span><br><span class="line">+ how old are you</span><br><span class="line">- I am &lt;bot age&gt; years old.</span><br></pre></td></tr></table></figure><p>The <code>&lt;formal&gt;</code> tag is a shortcut for <code>{formal}&lt;star&gt;{/formal}</code></p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Store the name with the correct casing</span></span><br><span class="line">+ my <span class="keyword">name</span> <span class="keyword">is</span> *</span><br><span class="line">- &lt;<span class="keyword">set</span> <span class="keyword">name</span>=&lt;formal&gt;&gt;Nice <span class="keyword">to</span> meet you, &lt;get <span class="keyword">name</span>&gt;!</span><br></pre></td></tr></table></figure><h2 id="Writing-Conditionals"><a href="#Writing-Conditionals" class="headerlink" title="Writing Conditionals"></a>Writing Conditionals</h2><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">+ what <span class="keyword">is</span> my name</span><br><span class="line">* &lt;<span class="keyword">get</span> name&gt; == undefined =&gt; You never told <span class="keyword">me</span> your name.</span><br><span class="line">- Your name <span class="keyword">is</span> &lt;<span class="keyword">get</span> name&gt;, silly!</span><br><span class="line">- Aren<span class="comment">'t you <span class="doctag">&lt;get name&gt;</span>?</span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">+ my name is *</span><br><span class="line">* &lt;formal&gt;   == &lt;bot name&gt; =&gt; Wow, we have the same name!&lt;<span class="builtin-name">set</span> <span class="attribute">name</span>=&lt;formal&gt;&gt;</span><br><span class="line">* &lt;<span class="builtin-name">get</span> name&gt; == undefined  =&gt; &lt;<span class="builtin-name">set</span> <span class="attribute">name</span>=&lt;formal&gt;&gt;Nice <span class="keyword">to</span> meet you!</span><br><span class="line">- &lt;<span class="builtin-name">set</span> <span class="attribute">oldname</span>=&lt;get name&gt;&gt;&lt;<span class="builtin-name">set</span> <span class="attribute">name</span>=&lt;formal&gt;&gt;</span><br><span class="line">^ I thought your name was &lt;<span class="builtin-name">get</span> oldname&gt;?</span><br></pre></td></tr></table></figure><p>Constions:</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">==  <span class="keyword">equal</span> <span class="keyword">to</span></span><br><span class="line">eq  <span class="keyword">equal</span> <span class="keyword">to</span> (<span class="built_in">alias</span>)</span><br><span class="line">!=  <span class="keyword">not</span> <span class="keyword">equal</span> <span class="keyword">to</span></span><br><span class="line">ne  <span class="keyword">not</span> <span class="keyword">equal</span> <span class="keyword">to</span> (<span class="built_in">alias</span>)</span><br><span class="line">&lt;&gt;  <span class="keyword">not</span> <span class="keyword">equal</span> <span class="keyword">to</span> (<span class="built_in">alias</span>)</span><br></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;   <span class="keyword">less than</span></span><br><span class="line">&lt;=  <span class="keyword">less than or equal</span> <span class="keyword">to</span></span><br><span class="line">&gt;   <span class="keyword">greater than</span></span><br><span class="line">&gt;=  <span class="keyword">greater than</span> <span class="keyword">or</span> <span class="keyword">equal</span> <span class="keyword">to</span></span><br></pre></td></tr></table></figure><h2 id="Labeled-sections"><a href="#Labeled-sections" class="headerlink" title="Labeled sections"></a>Labeled sections</h2><p>begin with <code>&gt;</code> and end with <code>&lt;</code></p><h3 id="Topic"><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">+ i hate you</span><br><span class="line">- Yo<span class="string">u're really mean! I'</span>m not talking again until you apologize.&#123;topic=sorry&#125;</span><br><span class="line"></span><br><span class="line">&gt; topic sorry</span><br><span class="line"></span><br><span class="line">  <span class="regexp">//</span> This will match <span class="keyword">if</span> the word <span class="string">"sorry"</span> exists ANYWHERE <span class="keyword">in</span> their message</span><br><span class="line">  + [*] sorry [*]</span><br><span class="line">  - It<span class="string">'s OK, I'</span>ll forgive you!&#123;topic=random&#125;</span><br><span class="line"></span><br><span class="line">  + *</span><br><span class="line">  - Nope, not until you apologize.</span><br><span class="line">  - Say yo<span class="string">u're sorry!</span></span><br><span class="line"><span class="string">  - Apologize!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt; topic</span></span><br></pre></td></tr></table></figure><p>Also, you can use <code>&lt;set topic=random&gt;</code> instead, but there is a small difference in how the two tags will behave:</p><p>The <code>&lt;set&gt;</code> tag can appear multiple times in a reply and each one is processed in order. The <code>{topic}</code> tag can only appear once (if there are multiple ones, the first one wins). So, they’ll both do the same job, but <code>{topic}</code> is a little shorter to type.</p><h3 id="没看懂-The-begin-block"><a href="#没看懂-The-begin-block" class="headerlink" title="??? 没看懂 The begin block"></a>??? 没看懂 The begin block</h3><h3 id="Object-Macros"><a href="#Object-Macros" class="headerlink" title="Object Macros"></a>Object Macros</h3>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聊天机器人 </tag>
            
            <tag> rivescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何编写聊天机器人</title>
      <link href="/presentation/2017-07-13-how-to-build-a-chatbot-on-itdakashuo.html"/>
      <url>/presentation/2017-07-13-how-to-build-a-chatbot-on-itdakashuo.html</url>
      
        <content type="html"><![CDATA[<p>这是我在<a href="http://www.itdks.com/dakashuo/new/eventlist/detail/167" target="_blank" rel="noopener">AI专题沙龙（无人车&amp;Chatbot)</a>的分享，本次活动是由中生代技术主办。我主要介绍了Chatbot中用到的AI技术.</p><blockquote><p>摘要:<br>Chatbot，聊天机器人，用于和人类用户聊天的电脑程序。它是场交互革命，也是一个多技术融合的平台。桔子互动创始人根据自己的经验告诉大家，该如何来编写微信聊天机器人。</p></blockquote><h2 id="What-are-chatbots-and-why-the-hype"><a href="#What-are-chatbots-and-why-the-hype" class="headerlink" title="What are chatbots and why the hype"></a>What are chatbots and why the hype</h2><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-1.jpg" alt></p><a id="more"></a><p>早在80年代，大家普遍使用PC上网，所有网上交互都是通过PC客户端去实现的。随着网速变得越来越快，浏览器开始普及。</p><p>智能手机出现以后，人们使用电脑的时间越来越少，手机里安装的APP则越来越多。</p><p>而现在就到了聊天机器人的时代。所有bots都搭载在message的平台上，去实现所有APP上的服务。</p><p>我觉得公众号、直达号和H5这些在最开始的时候都是很像chatbot的雏形。APP实在是让用户太焦虑了，大家都希望有一个可以简单迅速找到服务的程序。</p><p>因为数据、计算能力和网速都在迅速发展，在message这种消息的APP上会出现很多有意思的应用和服务，就像PC到Web，APP到chatbot这个过程的转换一样。</p><p>我认为chatbot是未来，接下来的所有服务可能都是通过chatbot去实现的。</p><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-2.jpg" alt></p><p>Chatbot Magazine创始人Matt Schlicht对chatbot的定义是：“A chatbot is a service,powered by rules and sometimes artificial intelligence,that you interact with via a chat interface.”</p><p>聊天机器人是一种由规则和一部分人工智能驱动的服务，通过聊天接口进行交互。</p><p>现在的交互方式已经发生了新的改变，我们可以通过说话去实现所有的功能。在Web和APP的时代，人要像计算机一样思考，而chatbot则是让计算机像人一样思考，做到“no UI”。</p><p>当今用户不喜欢使用APP，因为不仅用户下载的成本高，APP的开发和升级成本也非常高，而且只有极少数的APP还处于活跃状态。</p><p>而bots搭建在message平台上，无需安装，甚至在网速不佳的情况下也能进入它的服务。Chatbot处于“no UI”状态。如果只是关注逻辑层面去解决一些场景上的问题，开发的成本不会很高。</p><h2 id="Overview-of-the-bot-ecosystem"><a href="#Overview-of-the-bot-ecosystem" class="headerlink" title="Overview of the bot ecosystem"></a>Overview of the bot ecosystem</h2><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-3.jpg" alt><br>Facebook Message已经向开发者开放了，Apple ios Message APPS也在开放，Slack、Kik、Telegram和Skype都支持相关的接口。</p><p>Facebook收购了Wit.ai，google收购了Api.ai，微软推出了luis.ai。我认为这三个都是实现一样的功能，就是实行意图识别。</p><p>微软还有一个Bot Framework去做整个chat中控的系统，以及IBM推出了Watson Conversation API。</p><p>Facebook Message上面有超过10万个bots，大概有10万个开发者在Facebook Message上进行这些bots的开发。</p><p>有超过200万的用户每天在和chatbot进行交互。</p><p>在其它平台如Skype、Telegram上也有上千的bot。</p><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-4.jpg" alt></p><p>消费者能够真正接触到的chatbots大概分为三类：</p><p>第一类是个人助理，帮助用户实现各种服务。</p><p>第二类是虚拟客服，根据用户的问题给相应回答。</p><p>第三类是提高生产力的工具，可以做一些信息的收集、分发消息等工作。</p><p>Chatbot是一个很大的产业，它不是只有AI和deep learning，不一定要high tech去做，也不只有算法。而是要真正去解决一些实际问题。未来它就会像APP一样在我们身边，为我们提供非常一些简洁的服务。</p><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-5.jpg" alt></p><p>Requirement和正常软件开发相似，然后写一些需求的文档和需求说明。</p><p>做软件开发或APP的时候会做一些线框图或流程图。Chatbot是一个“no UI”的体验，所以要写script，了解如何收集用户的信息、怎样理解用户，并把这些用户的话术整理出来。它就是一个和用户交流的线框图的概念。</p><p>接下来要做架构开发，它同样分为前端和后端。前端就是script，更完整地收集用户信息。收集好了做成一个action给到后端，和其它的Web service做整合。</p><p>在做chatbot开发的时候，往往会陷入编码和测试反复的循环之中，因为交互还不是结构化的数据，所以会有点复杂。</p><p>Chatbot里做的测试和一般的APP测试不一样。在APP里可以简单暴力地做测试，但在chatbot里，不同的message有不同的需求或限制。做测试的时候要摸清不同message平台的区别。</p><p>要部署到一个可托管的环境并时刻去监控它，然后做推广。</p><p>最后还要做chatbot的分析，需要知道每一个会话时长是怎样的、用户对什么最感兴趣。拿到这些数据后再去调研用户的需求，形成一个循环。<br><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-6.jpg" alt><br>Chatbot主要是从场景入手，更关注的是解决一些问题和创新的点，而不是底层的开发。我认为接下来各种开发者也会从APP开发者转换成chatbot开发者，只是时间问题。</p><h2 id="itdakashuo-how-to-build-a-chatbot"><a href="#itdakashuo-how-to-build-a-chatbot" class="headerlink" title="itdakashuo-how-to-build-a-chatbot"></a>itdakashuo-how-to-build-a-chatbot</h2><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-7.jpg" alt></p><p>Wechaty是一个可以让微信变成机器人的接口，利用这个框架可以把个人微信号变成机器人，能自动回复和提供一些服务。</p><p>Wechaty的实现原理主要是监听网页上的信息，把信息封装然后给开发者调用，开发者发送信息的时候让浏览器去实现这些功能。</p><p>Side project通过代码追踪的方式应对微信网页变化。</p><p>Wechaty的七个基本事件分别是error、scan、login、logout、message、friend和join。</p><p><img src="/img/2017/itdakashuo-how-to-build-a-chatbot-8.jpg" alt></p><h2 id="Related-Scene"><a href="#Related-Scene" class="headerlink" title="Related Scene"></a>Related Scene</h2><p>我们已经实现了微信群的CRM管理、通过各种方式邀请好友进群以及做一些多群的直播。</p><p>还有一些有意思的东西想和大家分享。</p><p>挑选一个最吸引人的头像到微信上。通过用户点赞数分析出哪些头像在男性和女性中分别最受欢迎，帮助用户挑选微信头像。</p><p>存储文件。把微信和云盘打通，可以直接把微信上收到的文件转给机器人，让机器人存进云盘里。</p><p>把歌词生成一张好看的图片。订机票、车票、酒店等。Github的通知。把用户关注的动态实时发送到微信群里，让微信群和各种平台的信息做对接，也可以收集群里的消息做分析和训练。</p><p>Chatbot确实是一个可以帮我们解决生活中很多问题的工具，只要是开发者都能去实现它。</p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
            <tag> 聊天机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>母亲节技术女性专场沙龙-女程序员与程序共舞之路</title>
      <link href="/presentation/2017-05-14-motherday-tech.html"/>
      <url>/presentation/2017-05-14-motherday-tech.html</url>
      
        <content type="html"><![CDATA[<h2 id="活动信息"><a href="#活动信息" class="headerlink" title="活动信息"></a>活动信息</h2><p><img src="/img/2017/motherday-tech-1.jpg" alt>    </p><h2 id="PPT内容分享"><a href="#PPT内容分享" class="headerlink" title="PPT内容分享"></a>PPT内容分享</h2><p><img src="/img/2017/motherday-tech-2.jpg" alt><br><img src="/img/2017/motherday-tech-3.jpg" alt><br><img src="/img/2017/motherday-tech-4.jpg" alt><br><img src="/img/2017/motherday-tech-5.jpg" alt><br><img src="/img/2017/motherday-tech-6.jpg" alt><br><img src="/img/2017/motherday-tech-7.jpg" alt><br><img src="/img/2017/motherday-tech-8.jpg" alt><br><img src="/img/2017/motherday-tech-9.jpg" alt><br><img src="/img/2017/motherday-tech-10.jpg" alt><br><img src="/img/2017/motherday-tech-11.jpg" alt><br><img src="/img/2017/motherday-tech-12.jpg" alt><br><img src="/img/2017/motherday-tech-13.jpg" alt><br><img src="/img/2017/motherday-tech-14.jpg" alt> </p><h2 id="我和妈妈现场插画合影"><a href="#我和妈妈现场插画合影" class="headerlink" title="我和妈妈现场插画合影"></a>我和妈妈现场插画合影</h2><p><img src="/img/2017/motherday-tech-15.jpeg" alt> </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> startup </tag>
            
            <tag> 程序媛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>产品分享|如何做一个用户喜欢的chatbot</title>
      <link href="/chatbot/2017-03-30-how-to-build-a-chatbot-people-like.html"/>
      <url>/chatbot/2017-03-30-how-to-build-a-chatbot-people-like.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2017/how-to-build-a-chatbot-cover.jpg" alt="如何做一个用户喜欢的chatbot-1"></p><p>chatbot行业的依然存在着大量的泡沫，但有一点我们不得不承认，未来新的会话式交互正在颠覆整个科技行业。chatbot和会话式交互已经不是一个新名词了，可以预见的是，随着技术的发展，聊天机器人即将会推动一场颠覆性的行业创新。所有的主流巨头公司都在为丰富多样的对话形式搭建底层框架。</p><p>去年发生了这些里程碑事件：<br>– Facebook Messenger 全面开放给开发者<br>– Apple iOS message apps 出现了<br>– Slack, Kik, Telegram, 和 Skype 开始支持机器人接入</p><p>同时，巨头还在积极为开发者搭建各类ai相关的工具<br>– Facebook 推出了 Wit.ai7<br>– Google 推出了 Cloud Natural Language API<br>– Microsoft 推出了 Bot Framework– IBM 推出了 Watson Conversation API</p><p>这些公司的入场预示着聊天机器人行业的一轮新的洗牌，这不禁让我想起，10年前，Apple 推出了app store，大量的app迅速涌入。然而只有很少的一部分有较高的用户留存。如今，bot的市场和当初的app是非常相似的。</p><p>产品希望从场景切入为C端用户提供服务，这样的bot应该是什么样子的呢？<br>首先，我们分析下bot面临的两个重大挑战</p><p><strong>1. 获取用户</strong></p><p>在和身边非技术同学的聊天中发现，90%的人都不知道chatbot是什么，这不禁让我想起了移动应用（app）刚刚出现的情景——当应用市场的雏形出现的时候，很多人经过很长时间才明白了什么是app。然而现在，如果你连Pokémon Go 是什么都不知道的话，大家可能会觉得你是个外星人了。</p><p>但是即使你‘了解’chatbot，也很难找到bot应用进行体验。Product Hunt(<a href="https://www.producthunt.com/" target="_blank" rel="noopener">https://www.producthunt.com/</a>) 和 Botlist(<a href="https://botlist.co/" target="_blank" rel="noopener">https://botlist.co/</a>) 可以帮开发者导一些流量，他们是类似于豌豆荚或者应用宝这样的应用商店，我们也可以称他们为bot store，虽然这些store 可以帮助开发者带来一些用户，而bot真正的流量来源还是主流的社交平台。Slack, Kik, Telegram 和 Skype 都拥有各自的bot store。Facebook Messenger  甚至会在搜索联系人的时候推荐一些bot。虽然我们并不清楚Messenger 是按照什么规则推荐bot的，但是可以确认的一点是，那些足够幸运的，可以在Facebook中搜索到的bot 通过messenger的巨大流量迅速获取到了大量的用户。</p><p>下图是一些当前主流的bot store截图：<br><img src="/img/2017/how-to-build-a-chatbot-botlist.png" alt="如何做一个用户喜欢的chatbot-2"></p><p><img src="/img/2017/how-to-build-a-chatbot-product-hunt.png" alt="如何做一个用户喜欢的chatbot-3"></p><p>我有一种的直觉，在未来的bot 应用中，群消息机器人将会改变行业的规则（虽然Messenger现在还不支持，但是从国内社群运营的概念已经火了几年了，而且，社群运营中真正和chatbot相关的非营销类的场景还没有被挖掘出来）。</p><p>毕竟，老用户的推荐是获取新用户最好的方式，如果在一个群聊中开启了一个机器人，之前不了解这个bot的人会立刻和他产生互动，迅速实现飞速的用户增长。</p><p>恩，所以我在此给我自己打个广告。。我是专门做微信群自动化运营的服务提供商。<br>åç<br><strong>2. 用户留存</strong></p><p>和获取用户同样具有挑战的是如何在产品中留住用户。用户回来继续使用bot并积极参与是有原因的。开发者可以通过定期发推送来召回用户，而最好的方式还是应该还是bot的产品本身，究竟有哪些核心功能能吸引他们回来，常见的方式有签到，月/周的订阅等。</p><p>按理说，与app相比，bot用户的获取成本相对较低。只需要发送一条消息就体验bot产品了，这远比让用户从app store上下载一个app要容易的多。当然，这同样存在另外一个问题，很多用户可能只是好奇的来体验一下，他们用过一次之后就不会再回来了。</p><p>那么，什么样的bot可以克服这些问题呢？</p><p><strong>1. 游戏类bot</strong></p><p>“再来一次我就可以完成了。。。” ‘使人上瘾的bot’ 会持续吸引用户的注意力并让用户想要的更多。这些bot自称有极高的用户活跃度，当然，也应该是这样的。</p><p>Trivia Blast</p><p><img src="/img/2017/how-to-build-a-chatbot-trivia-blast.png" alt="如何做一个用户喜欢的chatbot-4"></p><p>Trivia Blast(<a href="https://www.facebook.com/triviablast1/" target="_blank" rel="noopener">https://www.facebook.com/triviablast1/</a>) 是一个非常有意思，快速提问问题的机器人，他提供各种各样的问题，答对以后会得分升级，问题类别包括音乐、科学、体育、历史、电影等等。这个bot有用一个全球积分榜，你可以看到你的好友、以及你同一个城市、同一个国家甚至全世界的人的排名，并和他们进行分数比拼。由于Trivia Blast 是一个智力游戏，所以即使你长时间沉溺在这个游戏中也不会有很深的负罪感。</p><p>Swelly</p><p><img src="/img/2017/how-to-build-a-chatbot-swelly.png" alt="如何做一个用户喜欢的chatbot-5"></p><p>Swelly(<a href="https://www.facebook.com/swell.bot" target="_blank" rel="noopener">https://www.facebook.com/swell.bot</a>) 是另外一个一旦你玩起来就会上瘾的bot，Swelly 通过直接向用户提问来帮助用户做一些日常的决定。你可以为别人的选择投票，比如’我应该用什么头像呢？’ 或者’我今天应该穿什么鞋？’ 你可以发表你自己的问题或者只是帮助其他人做决定。我不得不说，随机帮助一些人做决定是一件很酷的事情。</p><p><strong>2. 习惯养成类bot</strong></p><p>习惯养成类bot 的核心功能就是召回用户。</p><p>Joy</p><p><img src="/img/2017/how-to-build-a-chatbot-joy.png" alt="如何做一个用户喜欢的chatbot-6"></p><p>Joy(<a href="http://www.hellojoy.ai/" target="_blank" rel="noopener">http://www.hellojoy.ai/</a>) 追踪你的心情并让你的心智更加健康。他会每天或者每周对你进行检查并告诉你现在的感受。Joy会记录你所有的想法并会生成情绪报告，如果检测到你的情绪低落，它甚至会提供一些减压的互动。我很喜欢这个bot，未来也许他会在日常生活中让你随时心情愉悦。</p><p><strong>3. 效率类bot</strong></p><p>现阶段，这类bot一般都在在slack team 中提高团队的协作能力，也有一小部分是面向普通用户的，比如下面这个应用。</p><p>Sourcing Bot</p><p><img src="/img/2017/how-to-build-a-chatbot-trivia-blast-sourcing-bot.png" alt="如何做一个用户喜欢的chatbot-7"></p><p><a href="https://www.facebook.com/itoutsourcingbot/" target="_blank" rel="noopener">Source Bot</a> 帮助用户迅速找到需要的开发者和团队，使用bot向用户收集信息，他们现在有合作的276家外包公司提供服务。</p><p>写在最后：</p><p>在botlist上我们可以看到bot的分类有很多，包括分析工具、交流、设计、开发工具、教育、娱乐、文件管理、视频、游戏、健康、新闻、市场、旅游、运动、购物。。。。。等等，而每个bot的访问量并不是很多，平均在100-300之间，几个很有名的bot也不过是10k左右，面向用户场景的bot设计仍然有很大挑战，但是我相信，这是一个正在增长的市场，当你找到很好的场景并不断打磨你的bot产品，你就会做出一个用户喜欢的chatbot。</p><p>最后，祝所有做chatbot的产品经理们找到场景，切入痛点，实现产品从0到1 ^-^。</p><p>本文内容纯属原创，转载请注明，图片都是我用sketch一点点拼的，内容也是一点点码的，所以不要直接盗取我的内容啦。</p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何做一个更有价值的人呢</title>
      <link href="/thought/2017-03-16-how-to-be-valuable.html"/>
      <url>/thought/2017-03-16-how-to-be-valuable.html</url>
      
        <content type="html"><![CDATA[<p>我女神说，世上一切都是交换，拿你有的，换你没有的。       </p><p>我觉得她说的，特别对。       </p><p>别人为什么愿意你和合作，别人为什么愿意和你交流，因为你有价值，你能给他一些他所没有的东西，或者，他所需要的东西。       </p><p>所以问题来了，如何做一个有价值的人呢？       </p><ol><li>首先要洞察‘他’所需要</li><li>给‘他’所需要的</li><li>不要多多push，‘他’不要的，你硬塞，就是垃圾。</li></ol><p>另外：</p><ol><li>一切不要太太较真，随缘</li><li>一定要一起磨合，要观察，要彻底了解以后才能下结论</li></ol>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> startup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纪念离职，庆祝我成为自由职业者</title>
      <link href="/thought/2017-02-25-be-a-freelancer.html"/>
      <url>/thought/2017-02-25-be-a-freelancer.html</url>
      
        <content type="html"><![CDATA[<p>我一直觉得自己是一个无趣的人，虽然变得有趣是我重要追求之一。      </p><p>我一直觉得自己最无趣的表现，就是很少会给生活仪式感。比如去年我的生日，没有吃蛋糕，接到几条生日祝福就这样过去了，比如入职那一天，波澜不惊，没有任何宏图大志，再比如我也忘了，总之会经常性的缺乏情调，虽然并非我本意。      </p><p>然后没想到，离职这一天，我竟然这么有仪式感。      </p><p>决定提离职的那天，我去了北医三院，从头到尾的检查了身体，包括肿瘤因子。      </p><p>最后依然只是贫血，带了一堆吃不完的药回家。      </p><p>于是我像一个战士一样，提了离职。      </p><p>老板不同意，就一周后再提。      </p><p>离职流程走完以后，迅速搬到了五道口。      </p><p>好多同事觉得猝不及防，知道我发了朋友圈以后才知道我离职。只觉突然，毫无征兆。      </p><p>昨天晚上是我第一天搬进五道口，本无意加班，只是想把工作做完。            </p><p>可是当我点击邮件发送按钮的那一刻，看了眼表，还是敲过了12点。      </p><p>叫车，回家。      </p><p>这一次，在下车到进入小区的200米路程中，竟如此新潮澎湃。      </p><p>是的，我自由了。      </p><p>而且，是和我喜欢的一切—–工作内容，工作时间，工作地点以及工作梦想。      </p><p>恩，我搬进了孵化器中的一个工位。      </p><p>我的位置对面坐着两个滑板少年，之所以叫他们滑板少年，因为他们的创业项目是滑板。一个文艺范十足且呆萌可爱，一看就是纯种的滑板少年，北科毕业的。相比之下，创始人则长的比较木讷，说话慢吞吞的，来自清华美院。      </p><p>在我坐在我的新位置的时候，仿佛时光退回到了大学入学，一切都是那么新鲜，迫不及待的认识新同学，想看别人的人生。      </p><p>— 这种滋味，已阔别8年。      </p><p>我一度以为，自己性情大变。研究生入群，新员工入职，对于任何人，我都没有了那种新鲜感，甚至高冷的等对方约着一起吃饭。      </p><p>而这次破天荒的，8点一刻，PNP一层只剩下我们3个，我摘下耳机，问他们要不要一起吃饭。      </p><p>他们很开心，说，好。      </p><p>我也很开心。因为我知道，对面的两个滑板少年，有我想听的故事，有我喜欢的故事。      </p><p>这就是我喜欢创业的原因，总会遇见有趣的人，总会遇见好故事。      </p><p>一度，也能让我变得丰满一点。      </p><p>晚上一起和滑板少年们吃了麻辣烫，发现其实还是一个很容易和大家打成一片，开始惊讶于为什么在职期间，自己一直无法融入这个群体。      </p><p>没什么原因，只是大家的价值观不同。      </p><p>有人喜欢午饭后集体打一波王者荣耀，然后睡个午觉，准时下班，完成工作，仅此而已。      </p><p>而有的人，就是因为自己喜欢的事情，奋勇前行。      </p><p>吃麻辣烫的时候，我和那个长的比较正经的滑板少年聊起我之前做的舞蹈项目，我说自动做了舞蹈项目以后，就再也不跳舞了。      </p><p>他说，他很庆幸，他还好，还很喜欢滑板。      </p><p>顿了一顿，他忽然说，只是没有以前那么喜欢了。      </p><p>“这种感觉就像你很爱很爱一个人，付出了很多，可是她却没有给你太多回报，你会有些伤心和失望，但我会还会爱下去。”      </p><p>我看到了他眼镜中的坚定。      </p><p>更恍惚见看到了他开创了自己的滑板运动品牌和社群。      </p><p>他比我要厉害，我很爱很爱一个人，如果没有回报，我就会停止付出了。      </p><p>所以我停止了舞蹈的项目。      </p><p>和他聊天，终于不会被问到‘何苦呢’，‘何必呢’，道理我们都懂。      </p><p>他只拿了几十万的投资，花钱也很小心。      </p><p>“滑板是一个很小的市场，我不知道钱花光以后，是否还能拿到下一轮”      </p><p>他说的这话，我听到了无奈，但是更多的看到了坚持，他坚持滑板行业2年多了，期间一直在改变方向，但一直在滑板行业。      </p><p>值得敬佩。      </p><p>听到这话，我有点心疼，因为我懂，进入社会以后，不再有固定收入的感觉。      </p><p>为了不耽误接下来拿北京居住证，我每个月用自己的公司给自己交社保，公司的钱和自己的钱都要我出，一个月什么都不做，就会支出3500块。      </p><p>我甚至不知道，我的产品上线之后，到底能不能有客户用。      </p><p>但是我依然乐观。      </p><p>因为，自由价更高。      </p><p>我昨天做事情的效率，超过2016年的任何一天。      </p><p>我最近的坚定，超过2016年的任何一天。      </p><p>我依然迷茫，但是我不不再焦虑。      </p><p>有人说，连续做一件事，3年必有小成，5年必有所成，10年必成专家。            </p><p>这句话没错，而且一定要在一个行业。      </p><p>我才在这里3个月，不到穷困潦倒，我不会放弃了。      </p><p>这是我认真开始的第3个项目，从婚庆，到舞蹈，到chatbot。      </p><p>恩，不到穷困潦倒，一定不会放弃了。      </p><p>我也听到了自己的坚定，仿佛自己已成为了一个侠，背着上方宝剑，腰杆笔直，目光鉴定的，前行。      </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> startup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The secret lives of wechat chatbots</title>
      <link href="/chatbot/2017-02-22-the-secret-lives-of-wechat-chatbots.html"/>
      <url>/chatbot/2017-02-22-the-secret-lives-of-wechat-chatbots.html</url>
      
        <content type="html"><![CDATA[<p>Chatbots rocketed into the limelight last year, bolstered by the enthusiasm of Facebook and Microsoft, though the technology wasn’t mature yet.</p><p>In China, however, the response was more muted. While Facebook was busy pushing its new Messenger app – boasting when it hit 11,000 bots – Tencent, the maker of WeChat, quietly let millions of accounts develop AI-powered bots of their own, keeping a wary eye out for abuse. Accounts like Cara, for example, are shut down, as Tencent wants to confine bots to customer service-related functions within brand accounts.</p><a id="more"></a><p>But unsanctioned bots run amok on the social network, often tactlessly spamming groups or artificially inflating a brand’s likes and follows. The Chinese tech firm clamped down last year on thousands of accounts, denouncing the use of external software to alter WeChat. Tencent did not reply to queries about its policies on bots.</p><p>Unlike WeChat’s “official” accounts, designed for commerce and media, these rogue bots hijack personal accounts. They can be purchased on Taobao, the country’s most popular online marketplace, for a couple of dollars or less. Some accounts are even “farmed” before they’re sold, which means they already have friends and have logged a certain amount of human-like activity, such as posting on Moments, WeChat’s newsfeed-like feature.</p><p>“If I grow a WeChat account to 3,000 to 5,000 friends, one ad on my Moments could be worth between [US$14 to US$140],” explains Li Jiarui, a Javascript and WeChat bot developer based in Beijing. “It depends on the quality of your account.”</p><p><img src="/img/2017/the-secret-lives-of-wechat-chatbots.png" alt></p><p>More bots mean more WeChat accounts. This is another example of WeChat hacking: multiple apps installed on one device. Photo credit: Tencent.</p><p>Jiarui doesn’t farm WeChat accounts, but she’s familiar with the industry. Account farming is driven by the needs of marketing and advertising agencies, as well as weishang, or “micro shops” run through personal WeChat accounts. Unlike brand accounts, personal accounts are easier to register and can participate in group chats. These shopkeepers often use their Moments to advertise all kinds of products, from imported baby powder to fake luxury handbags.</p><p>“Because they often get shut down, we can learn a lot from their experience,” says Jiarui.</p><p>Jiarui began developing WeChat bots about half a year ago to automate group management for her dance community on the messaging app. Her bot can automatically pull friends into groups and welcome new members, as well as hold basic conversations thanks to a Chinese natural language processing framework called Turing Robot.</p><p>In fact, her chatbot is so popular that Tencent once chose it as a beta tester for WeChat.</p><p>“They thought I was a serious WeChat addict,” she laughs. “They probably thought that I was on WeChat almost 24 hours a day, not doing much else. Because of my activity, they assumed I was a high-quality user.”</p><p>Jiarui says her bot, which has about 3,000 friends, receives more than 10,000 messages a day.</p><p>Other chatbots, like “Micro Friend Assistant”, are also designed to tackle WeChat’s clunky group management system. Micro Friend Assistant lets group administrators set responses to keywords, automatically upload shared files to cloud storage, or even track and analyze group activity. But, like Cara, it too was shut down.</p><p>“This Chinese New Year, I tested out a hongbao bot and then I was banned for like a week or so,” says an employee at a chatbot company, who requested anonymity. He forgot to program the bot to not be the first one to grab the red envelopes – a total bot giveaway. Adding too many friends in a short amount of time can also raise a red flag.</p><p>Tencent is understandably opaque about its rules for catching bots to keep developers on their toes. But Jiarui has learned a few tricks from the app’s shopkeepers, such as using mobile data instead of wifi to send messages, and tying a bank card to the bot’s account.</p><p>“Do your best to mimic a real account,” she advises. Chatbots should follow brand accounts, have a profile picture, post on Moments, and both proactively and passively make friends on the app. “Ideally have your friends add you first. And try to have these friends comment on the content in your Moments,” she says.</p><p>At the moment, many WeChat bot developers rely on hacking the app’s web version. A quick search for “wechat bots” on Github pulls up multiple projects that can turn personal accounts into bots, such as WeChaty, the framework that Jiarui uses. However, that too has its limitations. Scraping the app’s web interface limits you to basic functions, such as sending messages and adding friends.</p><p>“Web WeChat is this crippled, semi-supported project by Tencent,” emphasizes Alex, a freelance web developer who would only disclose his first name. You can only do about a quarter of what you can do with the mobile app, excluding all the “interesting features,” he says.</p><p>“No hongbao […] and to re-login, you need to scan a QR code with phone,” Alex adds.</p><p>Nevertheless, the commercial potential of chatbots has startups like Urbem, a WeChat-based restaurant recommendation and deals startup, interested in the technology. The startup’s account is already staffed with a bot that navigates Urbem’s database to recommend restaurants to its users.</p><p>Urbem sees friendly chatbots as a way to generate leads from the various food groups it manages on WeChat.</p><p>“We want to link this bot to the bot from our [brand] account’s knowledge base,” explains Steven Chen, founder and CEO of Urbem. “Then this bot [will be] interesting and knowledgeable, and people follow the bot.”</p><p>“Eventually, we would convert them to our WeChat account, so they can pay to be a member. That’s how we generate revenue,” he says.</p><p>Given Tencent’s unforgiving stance towards rogue bots leaping into your messages, it’s uncertain how these bots, even those that have a positive impact or fulfill legitimate needs, will develop on the social network. Allowing unofficial bots to thrive on WeChat opens a Pandora’s box of possibilities, including AI of the Cara ilk. For now, bot developers will have to work hard to build increasingly human-like and believable messaging bots to slip under Tencent’s radar.</p><p>From ：<a href="http://www.techinasia.com/wechat-unofficial-bots" target="_blank" rel="noopener">www.techinasia.com/wechat-unofficial-bots</a> by <a href="https://www.techinasia.com/profile/evaxiao" target="_blank" rel="noopener">Eva Xiao</a></p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 访谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>激情与梦想</title>
      <link href="/thought/2017-02-03-dream.html"/>
      <url>/thought/2017-02-03-dream.html</url>
      
        <content type="html"><![CDATA[<p>第一次有人说我缺少梦想。        </p><p>我大部分的执着，不甘心与执拗，激情与拼搏都放在了【证明自己】上。        </p><p>然而，【证明自己】是最没有意义的事情。        </p><p>解决问题，才是重点。        </p><p>这几年，我总是抱着学习的态度，去做很多事情，以学习为目的，但是最终，做事情，还是要从解决问题的角度出发，要以解决问题为目的。        </p><p>只不过，学习，能为解决问题提供更多的思路，让解决问题变得容易很多。        </p><p>如果做一件事情，可以不通过学习，就解决了问题，显然是最优解。        </p><p>而我这几年，貌似本末倒置，如果解决问题，可以让我学习，那我就来做。不过坦白讲，说这句话我有点大言不惭，因为我似乎，也没有真正漂亮的解决过什么问题。。。        </p><p>会过来，我的梦想是什么呢？        </p><p>似乎谈到梦想，就不能说赚钱，而我竟然这么赤裸裸，我希望以卖掉公司作为梦想，以赚钱作为梦想，这种庸俗而又赤露的想法，似乎印证了——-        </p><p>我只是一个披着【文艺且有梦想的有志青年】外衣的【庸俗商人】。        </p><p>我对很多东西感到迷茫，我特别容易和别人进行较劲，我想赢。        </p><p>可是，赢了谁呢？        </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货铺</title>
      <link href="/reading/2017-01-22-grocery-store.html"/>
      <url>/reading/2017-01-22-grocery-store.html</url>
      
        <content type="html"><![CDATA[<p>站在人生的岔路口，人究竟应该怎么做？我希望读者能在掩卷时喃喃自语：我从未读过这样的小说。——东野圭吾       </p><p>“很多时候，咨询的人心里已经有了答案，来咨询只是想确认自己的决定是对的。”这就像抛硬币一样，把硬币抛到空中的时候，也是有了选择的时候。他们只是迷途的羔羊，手中都有地图，却没有去看，或是不知道自己的位置，所以回信的人只要点出他们的羁绊所在，他们就知道该如何走下去。       </p><p>每一条你所走过的路，其实都是你人生的必经之路       </p><p>“下一次当你忘记你是谁以及你在这世界上存在的意义之时，记得写一封信，投进自己内心的牛奶箱吧。”       </p><p>是一部很温馨的书       </p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>西部世界</title>
      <link href="/reading/2017-01-15-western-world.html"/>
      <url>/reading/2017-01-15-western-world.html</url>
      
        <content type="html"><![CDATA[<p>“游客之所以会重返（这座乐园），不是因为那些一眼就能看到的、花哨的东西。他们回到（乐园）是为了那些细微的东西、那些细节。他们会再来，是因为他们以为自己发现了没有其他人注意到的东西、某些会让他们爱上的东西。他们寻找并不是一个告诉他们自己是谁的故事，他们已经知道自己是谁了。他们来这里，是希望一窥自己有可能成为什么样的人。”</p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Chat实录｜李佳芮：向前一步的程序媛</title>
      <link href="/chatbot/2016-12-04-gitchat-interview.html"/>
      <url>/chatbot/2016-12-04-gitchat-interview.html</url>
      
        <content type="html"><![CDATA[<p><img src="/img/2016/gitchat-interview.jpg" alt="Chat实录｜李佳芮：向前一步的程序媛"></p><blockquote><p>11月24日周四晚8点，GitChat团队开启了来自一位前端女技术工程师李佳芮的问答交流，以下是主持人小冰将交流过程重新整理，记录下了分享者和用户之间对微信机器人的交流精彩片段。</p></blockquote><p><strong>问：你能说说目前微信机器人能做什么，不能做什么？</strong></p><p>答：Wechaty的实现原理，是监听Web微信的所有内容，封装成接口给开发者使用。所以原则上，只要能在Web微信上能实现的事情，微信机器人都可以做。注意我说的是Web微信，不是微信客户端。微信在Web上阉割了很多功能，相比较，PC客户端的功能丰富的多。所以抢红包功能做不了。因为在Web微信里面，是无法识别到有红包的事件的。还有，转账功能机器人也做不了。</p><p><strong>问：机器人是PC端监听浏览器然后调用微信Api，应用号是基于“微信OS”的“本地”app，这么解释对么？</strong></p><p>答：机器人是在监听浏览器，但是和微信Api没有任何关系，完全是Hack进去的。机器人更像是在解决运营中的机械化重复操作，希望在Chat的过程中，提供服务。</p><a id="more"></a><p><strong>问：既然是Hack到Web微信的，会不会有一天被封杀了呢？</strong></p><p>答：如果他强制封杀，肯定是有办法的，但是我个人觉得可能性比较低。第一，封杀的话，技术是有成本的，微信也是要考虑投入产出比的；第二，Git上最少有20多个这样的开源项目，而且好多都是几年前就做好了，微信不可能不知道，而且从技术研究和Chatbot的应用研究层面的角度看，这个是有意义的；第三是，这件事如果没有威胁到微信的生态，就不会封杀，不过之前可以批量删除好友的功能就被封了。</p><p>PS：我倒是觉得，这个被封杀最大的可能性，是把你的个人微信号封了，之前我看过一个技术社区上有人说，他做了一个防撤回机器人，就是在有人撤回消息的时候用聊天机器人把撤回的消息原封不动发出来。然后就扔到群里让大家玩了。但是因为没有写字数限制，群里发多长的消息，他都会原封不动的发出来，就构成了炸群。</p><p>微信就把这个号封了7天，不能给好友发信息，不能发朋友圈，但是可以给好友发红包，然后红包里面带回复内容，我觉得也挺逗的。我有一次也因为没有判断消息是不是自己发的，然后测试修改群名称，结果系统消息和自己发的消息混了，忽然群也不能用了。所以使用的时候，注意一下，比如限制字数啊，屏蔽bot自己发的消息之类的，用message.self()就可以了。</p><p><strong>问：微信机器人跟微信官方近期推出的应用号是怎样一个关系，如何结合？</strong></p><p>答：微信机器人和官方近期推出的应用号是不一样的应用场景。应用号，或者说小程序，是在微信的应用上提供一个入口为用户提供服务，这样可以免去下载app的苦恼，很多低频场景的app很适合做小程序。而微信机器人，本质就是一个微信号，现阶段主要是为了释放人力，免去人在微信上做的很多机械性的工作，比如批量通过好友请求啊，比如拉人进群啊，或者批量删好友。这个可能更类似于Chatbot，希望再chat的过程中提供服务。机器人除了做些机械操作，还可以在聊天页面推送一些链接给好友，这个链接可以是小程序的链接，也可以是app的链接，也可以是公众号。</p><p><strong>问：机器人断线概率高么？</strong></p><p>答：从我自己使用的情况来看，Wechaty这个框架很稳定，但是网页微信定期会把你踢下去，所以需要重新登录。Wechaty有一个功能，就是通过wechaty.instance({ profile: ‘test’ }) 会把你的session信息存到一个test.wechaty.json的文件中，如果掉线了，会自动重新登录，test可以随便换名字哈。我现在长期在我的服务器上跑两个机器人，基本上一周会掉一次，我在文章里介绍了server酱，是一个从服务器推报警信息到微信的工具，结合server酱，在logout和scan事件的时候加入一个推送，掉线以后会有提醒，如果session没了也会把二维码推给你，还是挺爽的，也不用怕掉线再去服务器上登录了。</p><p><strong>问：GitChat现在想用一个微信号实现自动拉人进群的功能（突破扫二维码100人的限制），不知道Wechaty是不是最好的选择？</strong></p><p>答：我认为是很好的选择，实际上我最开始使用Wechaty也单纯是为了突破群二维码100人限制。使用三个关键函数：在聊天页面通过m.from() 获取联系人contact，通过room.find() 找到群，然后room.add(contact) 就可以实现自动拉人了。</p><p><strong>问：微信机器人可以检测自己是否还是某个联系人的好友吗？</strong></p><p>答：可以的，Contact有一个Contact.findAll()的函数，返回一个Contact数组，会找到你所有的联系人，然后遍历这个数组，使用contact.say()给所有好友群发消息，判断回复的类型和内容，回复消息的类型可以通过Message.type()获取，如果返回的是10000就是系统消息，一旦判断出返回的是一个“对方不是你好友”的系统消息，那们就判断出这个联系人不是好友了。</p><p><strong>问：微信机器人不是走的微信接口去获取数据么，在想一个找回群的需求，不知道是否可以实现？</strong></p><p>答：机器人不是走的微信接口，不过你的要求可以实现，不过需要你常年登着，然后把你所有消息都存进去，这样从登录开始算起的所有内容都可以搜索。我之前做的自动拉人进群的功能，有个小点和你这个需求比较类似。这个人回复机器人暗号，机器人会拉他进去，如果这个人已经在群里了，机器人就会在群里@他一下，这样这个群就在你的聊天界面最前面了。这样有些人群多就可以通过这种方式找到某个沉寂已久的微信群了。</p><p><strong>问：现在微信机器人可以处理个人微信号的很多事情，有考虑接下来如何设计机器人让它更加智能化？</strong></p><p>答：恩，有考虑。但是更多的希望，第一步先让这个微信机器人更好的完成自动化的工作，就是说本来需要人做的重复性工作，比如拉群、自动回复、加人、一键群发等等，机器人都帮你先完成了，这个也是很多企业在微信社群运营中面临的很大的困惑。有一句话说的特别好：“Machine should work, People should think” 。</p><p>我希望我的微信机器人，在第一步能把很多运营人员面临的问题先解决了，让他们更多的时间放在思考如何进行活动策划、如何留存用户，甚至如何进行商业变现。一方面希望帮助企业节约成本，实现让一个运营人员管理上千个群和微信号，另外一方面，希望帮助企业释放人力，让运营人员从复杂机械化的操作中解放出来，做有创造性的东西。 </p><p>人工智能方面，现在有一些机器人的平台做的已经很好了，他们是专门研究这个的，做的比我们专业好多，每天就是有好多聪明绝顶的算法工程师在研究，智能化可以使用他们的接口，比如我之前用我的微信机器人接过图灵机器人，效果还不错。我更希望和做智能机器人的企业有合作，共同解决聊天或者社群运营过程中的繁琐问题，或者说，我做的更多是一个应用层面的chatbot尝试，以更少的成本探索更多需求并小成本迭代解决问题。</p><p><strong>问：文中提到了好几个实现微信机器人的类库，你是怎样比较最终选择了Wehaty？</strong></p><p>答：我当时确实对比了几个不同的类库，我选择的原因很简单，就是看是用什么语言实现的，因为我对JS比较熟悉，所以使用了Wechaty。其实选类库的时候，我发现Python的库是最早的，且相对比较最完善的。但是有两点原因我没有选择，一是我对Python没有JS熟悉， 二是Python的库虽然早，但是接口封装的不是很干净。</p><p>JS的有这几个，你们可以参考下哈：<br>Wechat4U：微信 Wechat web 网页版接口的JavaScript实现，兼容Node和浏览器；<br>Weixinbot Nodejs：封装网页版微信的接口，可编程控制微信消息；<br>WechatBot：面向个人的微信Wechat机器人平台 - 使用微信网页版接口Wechat4u；<br>Wechat-user-bot：正在组装中的微信机器人；<br>Hubot-WeChat Hubot：是一个具有真实微信号的机器人，可以自动回复信息到微信群和某联系人，并能给维护者的微信自动发送Hubot在线状态。</p><p><strong>问：文章里提到教舞蹈做视频，你觉得舞蹈给你带来了哪些好处呢？</strong></p><p>答：首先，舞蹈给我带来了很多朋友，认识了工作之外的各种人，而且都是很有趣的人，我在生活中有的时候比较无趣，多和这些人在一起能让我变得有趣一点。另外，当你有一个兴趣爱好的时候，每周的生活过起来就会丰富多彩一点，因为我们拍摄的是系列视频，你会有一个期待，就像追剧一样，而你是剧中的主角或者编导，这种感觉是很美妙的。</p><p>最主要的一点，跳舞对我来说是一种运动方式，每周出一点汗是身体和心理的双重放松，也能让我更好的投入工作中，这种运动还有一个副产品，就是可以保持身材，对于姑娘来说，这个还是非常重要的。</p><p><strong>问：桔子互动是提供微信运营服务的，是怎样契机开始运营微信服务，以后想要如何发展呢？</strong></p><p>我在研一的时候，公众号刚刚火起来，一个机缘巧合，一个毕业的学长知道我在实验室写php，他的朋友正好有外包需求，所以他牵头，找了几个技术的同学开始接项目。后来索性在学校附近租了个工作室，每周大家都会到工作室里碰一下，一起做项目。随着项目的同质化越来越严重，我们就尝试着做了一个小平台，将一些通用需求，比如签到、填写表单、微信墙、微信婚礼请柬等做成一个一个的模块，然后内部使用，后来接开发接的多了，也开始尝试着打包成服务，可能这就是一个契机吧。</p><p>后来我拿着我们做的婚礼请柬参加了创业比赛，还拿了风投，就去深圳做了婚庆O2O，结果因为线下资源和产品方向等原因失败了，回北京之后就又重操旧业，做一些微信运营的项目。我们现在也会接一些H5的项目、网站的项目和内容运营相关的需求，但是现在这一块已经成为一片红海，利润并不是很高。</p><p>最近我发现，微信个人号上有很多重复的工作，需要自动化，所以正在尝试往这个方向转，接下来我会把产品模块化，希望可以帮助帮助更多企业在微信社群运营商提供自动化服务，帮助他们节约成本，释放人力。</p><p><strong>问：对于创业，你有什么想法可以和大家分享的，又有什么建议是想告诉想要创业的朋友的呢？</strong></p><p>答：对于创业，从我这几年走过的各种弯路来看，专注可能是最重要的。之前一直觉得自己精力充沛，有的时候觉得自己可以做很多东西，然后就会去做各种尝试，但是所有的尝试最好能在一个有限域里面，做的项目也一定要切分一块比较垂直的领域，将这一块做好再去迅速的规模化。 </p><p>另外，创业就是一场生意，所以整个产品是一定要有商业逻辑在里面的，我最开始做婚庆O2O的时候，可能也是因为拿到了几百万的风投，团队规模又不是很大，以为公司又不缺钱，所以就单纯的想产品做好了，其他东西自然就来了，然后就会陷入闷头做产品的窘况。甚至连如何产生现金流，如何盈利都没有想的非常明白，就去做了。</p><p>所以现在我做的内容，也会尽量更加聚焦一点，希望在Chatbot的领域里面，从微信运营自动化入手，帮助企业和某些个人解决实际的运营自动化需求，然后尽量把产品打磨好做精。我希望对Chatbot有兴趣的，可以一起聊聊，希望碰出一些好想法。</p><p><strong>问：作为一名优秀的程序媛，有想要给其他程序媛或者想要成为程序媛的妹子一些建议么？</strong></p><p>答：首先，就是不要害怕。桑德伯格有一本书叫《向前一步》，鼓励女性追求自己的目标，其实我觉得这几个字在程序世界中也很对。对很多姑娘来说，无论是不是技术出身，都会对程序有一种恐惧，比如总怕把服务器弄坏了，或者什么程序搞崩了。其实不然，去做就好了，大不了重新装个系统，重新写个代码，不要因为害怕出错而不敢做。包括现在，我有的时候也会有这种恐惧，其实应该自己克服的，程序里面很多东西，也像一层窗户纸，向前一步，一捅破，你会发现程序的世界也没有那么扑朔迷离。</p><p>另外，是当一大段代码调不通，你也不知道什么问题的时候，好多女生会忽然觉得很绝望，其实有一个小窍门，可以把整个代码分成几个小片段，一个一个去调，就会捉到问题，很多大牛也是这样去调程序的，但是有的时候，我们不敢去拆分，就会陷入很困惑的情况跳不出来。</p><p>最后，也是我最想说的，不是只有男生才可以驾驭程序，很多工作，不分男女，只分强弱，其实创业也是一样。</p><p>原文地址：<a href="http://mp.weixin.qq.com/s/dWHAj8XtiKG-1fIS5Og79g" target="_blank" rel="noopener">GitChat - Chat实录｜李佳芮：向前一步的程序媛</a></p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> wechaty </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 访谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个舞娘如何用6行代码写出微信聊天机器人</title>
      <link href="/chatbot/2016-11-20-wechaty-wuli-usecase.html"/>
      <url>/chatbot/2016-11-20-wechaty-wuli-usecase.html</url>
      
        <content type="html"><![CDATA[<p>作者：@<a href="https://github.com/lijiarui" target="_blank" rel="noopener">lijiarui</a>, Entrepreneur, <a href="https://github.com/orgs/Chatie/teams/contributor" target="_blank" rel="noopener">Wechaty Author</a></p><p>我一直和我的小伙伴在业余时间拍摄舞蹈教学视频，叫“舞哩”，原创了几百个视频，近千万的播放，所以就建了微信群来和粉丝交流。</p><p><img src="/img/2016/wechaty-wuli-usecase-ruirui-dance.jpg" alt="RuiRui"></p><h2 id="1-与微信机器人的结缘"><a href="#1-与微信机器人的结缘" class="headerlink" title="1. 与微信机器人的结缘"></a>1. 与微信机器人的结缘</h2><p>当微信群超过100人以后，就必须要靠群主来手工拉人了，所以我在pad上注册了一个微信小号，让大家通过加小号进微信群，每天晚上9点，我登上这个小号，通过所有的好友请求，然后拉他们进来。有的时候会有几十个好友请求，我就先按一遍通过，然后用手机把这些新好友拍成照片，对照照片去通讯录里一个一个的找到这些好友，拉到微信群里。</p><p>直到有一次我出国玩，觉得Pad太沉了就没有带，这意味着有10天无法处理微信小号，等我回来以后，我发现了一个非常悲剧的事情……大概100多个好友请求，仅仅只是拍下这些好友请求，我就得拍好几十张照片！</p><p>这明明就是一些机械化的流水作业啊！这怎么能让一个程序员去完成呢？于是我开始梳理了我的需求，其实只有三个：</p><ol><li>自动通过好友请求。</li><li>当我的粉丝和我微信聊天的时候，能通过关键词进行自动回复。毕竟问题80%都是一样的。</li><li>自动的把他们拉进群里。</li></ol><p>所以我在GitHub上找到了Wechaty，发现只要几十行代码，就可以满足我的需求。最主要的是，机械化的流水操作，机器人做的比人工要好很多。</p><h2 id="2-一款简单的微信机器人框架介绍"><a href="#2-一款简单的微信机器人框架介绍" class="headerlink" title="2. 一款简单的微信机器人框架介绍"></a>2. 一款简单的微信机器人框架介绍</h2><p>GitHub上与微信机器人相关的开源项目有很多，通过JavaScript、Electron、Go、Perl、Python等等都可以实现。</p><p>因为我只对JavaScript比较熟悉，所以选择了Wechaty，他是使用Typescript进行编写的Node项目，是一个专门为个人微信号搭建的bot框架，使用Wechaty的API，只需要6行Javascript代码就可以搭建一个最简单的微信机器人，支持 Linux, Windows, Darwin(OSX/Mac) 和Docker。<br><img src="/img/2016/wechaty-wuli-usecase-wechaty-pic.jpeg" alt="wechaty-pic"></p><p>我特别喜欢Wechaty的一点是，我不用关心任何实现逻辑，仅仅用JS写业务逻辑层面的事情，就可以了。当我把我需要做什么想清楚以后，JS实现起来，是非常简单便捷的。</p><p>Wechaty基本的实现原理，是通过Chrome实时监听微信网页版的各类信息，然后将抓取的信息封装成接口，供开发者使用。 她有9个基本的事件，基本上涵盖了我们Web微信上的所有事件，分别是：</p><ol><li>scan事件会在需要扫码登陆微信的被触发</li><li>login事件会在机器人成功登陆后被触发</li><li>logout事件会在机器人掉线以后被触发</li><li>message事件会在有新消息的时候被触发</li><li>error事件会在程序出现error的时候被触发</li><li>friend事件会在有好友请求的时候被触发</li><li>room-join事件会在有人加入群时被触发</li><li>room-leave事件会在群主移好友出群时被触发</li><li>room-topic事件会在群名称被修改时被触发</li></ol><p>另外，Wechaty将机器人、联系人、微信群、好友请求封装成类，分别是Wechaty、Contact、Message、和FriendRequest，这样我只要import这些包，就可以直接使用这些类里面的函数模拟微信的各种操作了。比如给指定的人发送消息，我只要用contact.say(‘hello’) 就可以了。Wechaty里面的函数名称起的非常人性化，使用JS进行业务逻辑编写的时候，读代码像和读英文文档一样流畅舒服。</p><h2 id="3-如何安装Wechaty"><a href="#3-如何安装Wechaty" class="headerlink" title="3. 如何安装Wechaty"></a>3. 如何安装Wechaty</h2><p>安装Wechaty有两种方式：</p><ol><li>Docker</li><li>NPM</li></ol><p>非常推荐使用Docker安装Wechaty，虽然我最开始是使用第二种方式，也正是因为我两种方式都试过，才会深深感慨出“Docker大法好” 。</p><p>两种方式的安装—Docker和NPM 我在这里进行简单的介绍：</p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>安装Docker以后（可以点击这里查看如何安装docker），运行下面的命令，Wechaty就已经成功安装在电脑上了。</p><p><code>docker run -ti --rm --volume=&quot;$(pwd)&quot;:/bot zixia/wechaty run demo</code></p><p>首次运行以后会有如下的截图：<br><img src="/img/2016/wechaty-wuli-usecase-docker-pull.jpeg" alt="docker-pull"></p><p>Docker会自动的将相关的包部署到电脑里面，安装成功后，以后再运行就会是如下的截图了：<br><img src="/img/2016/wechaty-wuli-usecase-run-ding.jpeg" alt="run-ding"></p><p>Wechaty的编写者对这种特殊字体的热爱到疯狂的地步了，为了让大家了解的更清楚，我就把所有截图内容也就都放上来了。</p><p>通常情况下，我会将这串命令alias给wechaty：</p><p><code>alias wechaty=&#39;docker run -t -i --rm -e WECHATY_LOG=&quot;silly&quot; --volume=&quot;$(pwd)&quot;:/bot zixia/wechaty:0.5.9’</code></p><p>并加入-e WECHATY_LOG=”silly” 和后面的版本号：zixia/wechaty:0.5.9，然后这样运行：</p><p><code>wechaty run demo</code></p><p>-e WECHATY_LOG=”silly” 是为了把wechaty的系统日志都打印出来，方便发现问题和代码调试，zixia/wechaty:0.5.9 在后面加了版本号，因为作者经常更新代码，最近的代码偶尔会出问题，0.5.9是我认为相对比较稳定的版本。</p><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save wechaty</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> node mybot.js</span></span><br></pre></td></tr></table></figure><p>有以下几点值得注意的是：</p><ol><li>Wechaty需要的Node版本最少在6以上，我现在在使用7。</li><li>有一些环境是需要安装Chromedriver的，根据版本不同，大家可能需要注意一下。</li><li>如果是在服务器上，需要到Script的脚本中，运行下xvfb.sh的脚本，为Chrome提供一个虚拟的运行环境，并根据运行后的提示，设置程序运行的环境变量。</li><li>同样可以设置WECHATY_LOG的值来打印系统日志：WECHATY_LOG=SILLY node mybot.js</li></ol><p>关于服务器的说明</p><p>Wechaty依赖的很多包都在墙外，建议使用国外的VPS，我使用的是digitalocean 如果只是跑一个机器人服务的话，建议使2GB/2 CPUs 以上的配置，一个机器人服务会占用1G内存左右，如果配上swap的话，短期使用也可以。</p><h2 id="4-如何使用wechaty"><a href="#4-如何使用wechaty" class="headerlink" title="4. 如何使用wechaty"></a>4. 如何使用wechaty</h2><p>环境部署好以后下面6行代码，就可以成功的实现基础的bot功能：将微信机器人收到的所有消息打印出来：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">const &#123; Wechaty &#125; = require('wechaty')</span><br><span class="line"></span><br><span class="line">Wechaty.instance()</span><br><span class="line">.on('scan', (url, code) =&gt; console.log(`Scan QR Code to login: $&#123;code&#125;\n$&#123;url&#125;`))</span><br><span class="line">.on('login',  user =&gt; console.log(`User $&#123;user.name()&#125; logined`))</span><br><span class="line">.on('message',  message =&gt; console.log(`Message: $&#123;message.content()&#125;`))</span><br><span class="line">.init()</span><br></pre></td></tr></table></figure></p><p>下面对这段代码进行简单的介绍：</p><ul><li><p>scan事件：两个返回值</p><ul><li>code：返回了扫描的状态<ul><li>0：初始状态</li><li>200：已经成功登陆</li><li>201：微信已经扫码，等待确认</li><li>408：等待微信扫码中</li></ul></li><li>url：登陆需要扫描的二维码图片的地址，你需要将这个url粘贴到浏览器中打开，进行扫码登陆</li></ul></li></ul><ul><li><p>login事件：返回的user，代表登陆的用户，返回的是一个Contact的类型，打印出来，是可以看到你当前登陆的用户昵称的。通过user.id()可以获取用户唯一id，user.name()可以获取用户的微信昵称，user.weixin()可以获取用户的微信号。</p></li><li><p>message事件：返回的是message，代表收到的消息，是一个Message类型。通过message.content()可以获取到消息的内容，message.from()可以获取到消息的发送者，返回的是一个Contact类型。<br>以上只是一些简单的接口介绍，更多详细的接口文档可以点击查看：Wechaty的接口文档 接口文档还在更新中，如果希望更多接口，直接clone源码查看代码，你会发现很多惊喜好玩的小东西。</p></li></ul><p>除此之外，我还希望分享两个实用的Wechaty的工具：</p><h3 id="qrcode-terminal"><a href="#qrcode-terminal" class="headerlink" title="qrcode-terminal"></a>qrcode-terminal</h3><p>仅仅把需要扫描的二维码图片作为链接打印在屏幕上，复制链接到浏览器中再去扫描，依然很麻烦，我更希望在terminal上直接扫描二维码登陆进来，这样才能到达demo中的炫酷效果，只需要两步：</p><p>1.安装依赖包：</p><p><code>npm install qrcode-terminal</code></p><p>2.稍微修改下scan事件后的代码就可以了：</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">wechaty.on(<span class="string">'scan'</span>, <span class="function">(<span class="params">url, code</span>) =&gt;</span> &#123;  </span><br><span class="line"><span class="keyword">if</span> (!<span class="regexp">/201|200/</span>.test(<span class="built_in">String</span>(code)))&#123;</span><br><span class="line">   <span class="keyword">let</span> loginUrl = url.replace(<span class="regexp">/\/qrcode\//</span>, <span class="string">'/l/'</span>)</span><br><span class="line">   <span class="built_in">require</span>(<span class="string">'qrcode-terminal'</span>).generate(loginUrl)  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;url&#125;</span>\n[<span class="subst">$&#123;code&#125;</span>] Scan QR Code in above url to login: `</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Server酱"><a href="#Server酱" class="headerlink" title="Server酱"></a>Server酱</h3><p>虽然机器人可以稳定的跑在VPS中，但是网页版微信会经常把用户踢下线，所以我需要知道Wechaty的各种异常情况，有一个简单的第三方工具：Server酱，他是一个能从服务器推报警和日志到手机的工具，非常简单易操作：</p><p>1.用GitHub账号登入后，获得一个SCKEY（在「发送消息」页面） 按照引导，点击“微信推送”，扫码关注“方糖”后即可完成绑定<br>2.在login、logout、scan、和error事件触发后，将一些关键信息往 <a href="http://sc.ftqq.com/SCKEY.send" target="_blank" rel="noopener">http://sc.ftqq.com/SCKEY.send</a> 发Get请求，我自己的微信里就收到消息了。</p><p>这样，当我的机器人出现各种异常情况，我随时随地都可以知道，需要再扫码进入的时候，方糖这公众号就会把二维码推到我的手机上，我只要用机器人的微信扫码就可以了。</p><p>恩，就是这样，我实现了闭着眼镜就可以拉人的美梦中。</p><h2 id="5-后续"><a href="#5-后续" class="headerlink" title="5. 后续"></a>5. 后续</h2><p>当我开始使用机器人做所有的重复操作的时候，对于加群的工作，我有了进一步的思考，比如我把很多微商拉入黑名单，他们再也无法进入我的微信群；另外我写了个功能，在微信群中加入了管理员功能，这样管理员即使不是群主，也可以把用户踢出微信群；有的时候脑洞大开，还会做个恶作剧，专门收集群友撤回信息，娱乐大众……</p><p>忽然想起了一句话： “People should think, Bot should work”。 当机器能够帮助我们把机械化的工作完成之后，我们才会有更多的时间，思考真正有价值的事情。</p><p>Wechaty解放了我的一些重复性工作，我也希望能为Wechaty做点什么，所以我现在在业余时间更新Wechaty的文档，有的时候也会分享一些我在使用Wechaty时候遇到的问题，希望帮助更多的人能够快速上手使用Wechaty。</p><p>如果你对Wechaty感兴趣，希望一起交流，一起分享，共同学习，可以扫码添加”桔小秘”为好友，回复wechaty加入WECHATY DEVELOPERS’ HOME。也可以顺便体验下wechaty实现的小功能。</p><p><img src="/img/2016/wechaty-wuli-usecase-qr-code.jpeg" alt="qr-code"></p>]]></content>
      
      
      <categories>
          
          <category> chatbot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 舞蹈 </tag>
            
            <tag> 舞哩 </tag>
            
            <tag> wechaty </tag>
            
            <tag> 聊天机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatBot Framework-Wechaty</title>
      <link href="/project/2016-10-01-project-wechaty.html"/>
      <url>/project/2016-10-01-project-wechaty.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Chatie/wechaty/master/docs/images/wechaty-logo-en.png" alt="Wechaty Logo"></p><p>Hello, ChatBot Developers!</p><p>Wechaty is a easy to use <strong>ChatBot Framework</strong> which can help you write <strong>the worlds smallest chatbot</strong>. Maybe you are very interesting in ChatBot industory, or you just want to get your own wechat personal account robot, Wechaty will always be your friend.</p><p>Visit Wechaty Github: <a href="https://github.com/chatie/wechaty" target="_blank" rel="noopener">https://github.com/chatie/wechaty</a><br>Visit Wechaty Blog: <a href="http://blog.chatie.io/" target="_blank" rel="noopener">http://blog.chatie.io/</a></p><p>In this video, I will show you how to getting started with Wechaty through a 10 minutes live coding tutorial, with Wechaty Docker Runtime. (Event Node.js Party #18, Beijing)</p><p>For visiters come from China who can not visit YouTube.com, this video is also hosted on YouKu.com &amp; Tencent Video</p><div class="video-container" style="    position: relative;    padding-bottom:56.25%;    padding-top:30px;    height:0;    overflow:hidden;"><br><iframe width="560" height="315" src="https://www.youtube.com/embed/IUDuxHaV9bQ?start=85" frameborder="0" allowfullscreen style="    position: absolute;    top:0;    left:0;    width:100%;    height:100%;"></iframe></div><ul><li><a href="http://v.youku.com/v_show/id_XMTkyNDgzMjY5Ng==.html" target="_blank" rel="noopener">Getting Started with Wechaty @ YouKu</a></li><li><a href="https://v.qq.com/x/page/b0363p9kg3q.html" target="_blank" rel="noopener">Getting Started with Wechaty @ Tencent</a></li></ul><p>Learn more about how to use Wechaty: <a href="https://github.com/wechaty/wechaty/wiki/GettingStarted" target="_blank" rel="noopener">https://github.com/wechaty/wechaty/wiki/GettingStarted</a></p><p>Code in the video:</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;Wechaty, Room&#125; <span class="keyword">from</span> <span class="string">'wechaty'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bot = Wechaty.instance()</span><br><span class="line"></span><br><span class="line">bot</span><br><span class="line">.on(<span class="string">'scan'</span>, <span class="function">(<span class="params">url, code</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> loginUrl = url.replace(<span class="string">'qrcode'</span>, <span class="string">'l'</span>)</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'qrcode-terminal'</span>).generate(loginUrl)</span><br><span class="line">    <span class="built_in">console</span>.log(url)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">.on(<span class="string">'login'</span>, <span class="function"><span class="params">user</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;user&#125;</span> login`</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">.on(<span class="string">'friend'</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">contact, request</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(request)&#123;</span><br><span class="line">        <span class="keyword">await</span> request.accept()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Contact: <span class="subst">$&#123;contact.name()&#125;</span> send request <span class="subst">$&#123;request.hello&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">.on(<span class="string">'message'</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> contact = m.from()</span><br><span class="line">    <span class="keyword">const</span> content = m.content()</span><br><span class="line">    <span class="keyword">const</span> room = m.room()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(room)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Room: <span class="subst">$&#123;room.topic()&#125;</span> Contact: <span class="subst">$&#123;contact.name()&#125;</span> Content: <span class="subst">$&#123;content&#125;</span>`</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Contact: <span class="subst">$&#123;contact.name()&#125;</span> Content: <span class="subst">$&#123;content&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m.self())&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/hello/</span>.test(content))&#123;</span><br><span class="line">        m.say(<span class="string">"hello how are you"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/room/</span>.test(content))&#123;</span><br><span class="line">        <span class="keyword">let</span> keyroom = <span class="keyword">await</span> Room.find(&#123;topic: <span class="string">"test"</span>&#125;)</span><br><span class="line">        <span class="keyword">if</span>(keyroom)&#123;</span><br><span class="line">            <span class="keyword">await</span> keyroom.add(contact)</span><br><span class="line">            <span class="keyword">await</span> keyroom.say(<span class="string">"welcome!"</span>, contact)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/out/</span>.test(content))&#123;</span><br><span class="line">        <span class="keyword">let</span> keyroom = <span class="keyword">await</span> Room.find(&#123;topic: <span class="string">"test"</span>&#125;)</span><br><span class="line">        <span class="keyword">if</span>(keyroom)&#123;</span><br><span class="line">            <span class="keyword">await</span> keyroom.say(<span class="string">"Remove from the room"</span>, contact)</span><br><span class="line">            <span class="keyword">await</span> keyroom.del(contact)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">.init()</span><br></pre></td></tr></table></figure><p>docker command:    </p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">docker <span class="builtin-name">run</span> -ti <span class="attribute">--volume</span>=<span class="string">"<span class="variable">$(pwd)</span>"</span>:/bot --rm zixia/wechaty mybot.ts</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lijiarui/Getting-Started-with-Wechaty---Live-Coding-Tutorial" title="Click here to get the repo" target="_blank" rel="noopener">Click here to get the repo</a></p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechaty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>舞哩，专注舞蹈教学</title>
      <link href="/project/2016-05-10-wuli.html"/>
      <url>/project/2016-05-10-wuli.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>做了好久给其他人开发系统，做社交媒体运营，于是我想做一个自己的系媒体品牌，和几个小伙伴一起做了舞蹈自媒体，舞哩，原名悦舞。录制了200+期视频，全网播放2000万，粉丝累计下来也小几百万了。</p></blockquote><p>在各个平台的链接都po在这里了，也可随意百度‘舞哩’，我们在舞蹈自媒体小有名气吧。后来放弃了，因为这件事，我都不跳舞了。。。</p><p>我蛮喜欢李诞说的一句话：</p><blockquote><p>如果我写这本小说赚了钱，那是运气，我要用别的事来谋生，写小说一定要让自己开心,还是那句老话，不要让爱好变为谋生职业，用奋斗挣下的钱去供养爱好这个“小娇妻”，才是智者。 — 李诞 ​​​</p></blockquote><p><img src="/img/2016/wuli-2.jpg" alt></p><ul><li><a href="http://i.youku.com/yuewuu" target="_blank" rel="noopener">优酷视频</a> 舞蹈视频教学-舞哩</li><li><a href="http://v.qq.com/vplus/yuewu" target="_blank" rel="noopener">腾讯视频</a> 舞哩</li><li><a href="https://www.youtube.com/channel/UC9NRUJ2lZJ3YwqKxR6WAahw" target="_blank" rel="noopener">youtube</a> Joy Dancing 舞哩</li><li><a href="http://www.meipai.com/user/1067338769" target="_blank" rel="noopener">美拍</a>  舞哩–舞蹈视频教学</li><li><a href="https://space.bilibili.com/25009001#/" target="_blank" rel="noopener">B站</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 舞蹈 </tag>
            
            <tag> 舞哩 </tag>
            
            <tag> 自媒体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你是否曾因自己的梦想受伤 | 我为什么要做舞哩</title>
      <link href="/thought/2016-04-10-wuli-dream.html"/>
      <url>/thought/2016-04-10-wuli-dream.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一篇90后妹子创业失败后，经历内心挣扎、自我否定、茫然和纠结后，重拾勇气再上征程的倔强故事。</p></blockquote><p><img src="/img/2016/wuli-dream.png" alt></p><p><strong> “我到底是不是一个有资格实现自己梦想的人？” </strong></p><p>自创业以来，这是我一直在思考的问题。</p><p>我一直不是一个很有想法的人，我经常恐惧，迷茫，拿不定主意，与创业者的应有的性格有很大的反差。14年拿到五百万投资后，我没想到自己会休学创业，离开那么熟悉的北京，跑去从没去过的深圳，当上CEO。这并不是设计好的人生轨迹。甚至在去见投资人之前，我都没有想好，我要做一个创业者。</p><p>14年拿到投资的起因是13年跟着学长做微信相关的开发和运营，做久了，小团队内做了一个自己的婚庆产品，后来小团队的人毕业后去了BAT，团队也就解散了，我拿着产品参加了一个创业比赛并拿到了奖。机缘巧合的拿着修改后的参赛方案讲给了朋友介绍的投资人，然后开始了真正的“创业路”。</p><p>我从来不是一个追赶潮流的人，却一不小心赶上了“创业热”，赶上了“大众创新，全民创业”，成为一个新潮的创业者。</p><p>第一次创业的那几个月中，用13年做小作坊项目的方式做创业，立项、排期、跟进、上线。。。好多事情没想清楚，加上社会经验及阅历的不足，对人情世故的了解和线下资源的获取极为薄弱，第一次创业失败。</p><p>回北京办了复学说许，做起了老本行，做微信运营和技术开发，给亚马逊、腾讯这些大公司提供过服务，也给10多个小公司做过各种技术服务，作为一个学生，我的公司可以让我生活的很好。</p><p>我以为这就是我的“二次创业”，我以为，我是一个“连续创业者”。</p><p>期间接触过一些上市公司，一些事业单位，一些政府，想过一些很大的“互联网+”，“智慧城市”项目，甚至和那些大我十岁、二十岁、三十岁的人一起做事，着手准备新公司。</p><p>每天写各种ppt，然后提案，然后接项目，然后做项目，然后结项，然后继续找项目，生活越来越焦躁。</p><p>一个朋友评价我，“你没有生活”。</p><p>我回答他，“这也是生活”。</p><p>但是内心有一个声音却开始质疑，这真的是我追求的生活方式么？这难道是传说中的二次创业么？这真的是我的梦想么？</p><p>这不是。</p><p>“这种接活做活，通宵达旦，上一单与下一单充满投机性，产品以客户主观意志为标准，生产方式毫无规律，出卖单位时间劳动力在慢车道上发展，不存在幂次法则的突破口，其实谈不上是真正的创业，充其量只能算作是有雇佣关系的自由职业者或者手艺人或者包工头。”</p><p>简单的说，我只是一个包工头。我一直以为我不是在砌一块砖，也不是在搭一面墙，而是在修建一座教堂，可是我根本不知道这个教堂有没有，是什么样，只想着，客户满意了，就给我尾款了，于是就又多了一个成功案例，生意就会越来越大。</p><p>但是事实并非如此。</p><p>2015年是我的本命年，第一家创业公司投资方撤资止损，回北京后谈好价值1亿的“互联网”公司最终因为各种原因止步于核名阶段，错过了秋招找工作的黄金时间，论文抽中盲审被延期，在一起3年的男朋友终于因为父母反对离开了我，并在半个月后接受了父母的安排和新女友订婚。2016年应该拿下的项目被别人暗算，每一件事情都可以展开出很多狗血的剧情。</p><p>绝望到了极点，工作没有了，毕不了业了，连曾经最支持我的男朋友都没有了，甚至唯一属于自己的公司资金流也断了。</p><p>与其说是开始寻找自己的梦想，不如说是一定要找到一根救命稻草。2013年开始接触创业以来，我唯一学会了“坚持”，只要一直做下去，时间看得见，时间对得起自己。</p><p>只是这家皮包公司没有任何坚持下去的理由，于是我进入了一家互联网公司，做起了产品经理。</p><p>但我依然有我的梦想，我的爱好—“舞蹈”。 回忆起来，断断续续，也跳了5年舞蹈，从最初的仅仅为了减肥塑身，到后来觉得好看，到后来参加学校的毕业晚会，再后来有些机会参加商演，到后来认识了很多朋友。</p><p>这是一件我热爱的事情。</p><p>感谢跳舞，我找到了很多志同道合的朋友，我在他们身上学到了很多东西，也收获了很多欢乐。因此，我希望聚集起更多跳舞的朋友。所以，我用工作之外的闲暇时间，和共同梦想的小伙伴为大家提供视频教学。</p><p>因为热爱，所以坚持。</p><p>因为梦想，所以执着。</p><p>不管是否还会被梦想所伤，这些和我拥有共同信念的小伙伴们都会陪着悦舞，勇往直前。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 舞蹈 </tag>
            
            <tag> 舞哩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重庆大学生网络创新创业大赛训练营，“寻找我的合伙人”分享</title>
      <link href="/presentation/2015-08-13-startup-teacher.html"/>
      <url>/presentation/2015-08-13-startup-teacher.html</url>
      
        <content type="html"><![CDATA[<h2 id="活动信息"><a href="#活动信息" class="headerlink" title="活动信息"></a>活动信息</h2><p><img src="/img/2015/startup-teacher-1.jpeg" alt>    </p><h2 id="PPT内容分享"><a href="#PPT内容分享" class="headerlink" title="PPT内容分享"></a>PPT内容分享</h2><p><img src="/img/2015/startup-teacher-2.jpg" alt><br><img src="/img/2015/startup-teacher-3.jpg" alt><br><img src="/img/2015/startup-teacher-4.jpg" alt><br><img src="/img/2015/startup-teacher-5.jpg" alt><br><img src="/img/2015/startup-teacher-6.jpg" alt><br><img src="/img/2015/startup-teacher-7.jpg" alt><br><img src="/img/2015/startup-teacher-8.jpg" alt><br><img src="/img/2015/startup-teacher-9.jpg" alt><br><img src="/img/2015/startup-teacher-10.jpg" alt><br><img src="/img/2015/startup-teacher-11.jpg" alt><br><img src="/img/2015/startup-teacher-12.jpg" alt><br><img src="/img/2015/startup-teacher-13.jpg" alt><br><img src="/img/2015/startup-teacher-14.jpg" alt><br><img src="/img/2015/startup-teacher-15.jpg" alt><br><img src="/img/2015/startup-teacher-16.jpg" alt><br><img src="/img/2015/startup-teacher-17.jpg" alt><br><img src="/img/2015/startup-teacher-18.jpg" alt><br><img src="/img/2015/startup-teacher-19.jpg" alt><br><img src="/img/2015/startup-teacher-20.jpg" alt><br><img src="/img/2015/startup-teacher-21.jpg" alt><br><img src="/img/2015/startup-teacher-22.jpg" alt><br><img src="/img/2015/startup-teacher-23.jpg" alt><br><img src="/img/2015/startup-teacher-24.jpg" alt><br><img src="/img/2015/startup-teacher-25.jpg" alt><br><img src="/img/2015/startup-teacher-26.jpg" alt><br><img src="/img/2015/startup-teacher-27.jpg" alt><br><img src="/img/2015/startup-teacher-28.jpg" alt><br><img src="/img/2015/startup-teacher-29.jpg" alt><br><img src="/img/2015/startup-teacher-30.jpg" alt><br><img src="/img/2015/startup-teacher-31.jpg" alt><br><img src="/img/2015/startup-teacher-32.jpg" alt><br><img src="/img/2015/startup-teacher-33.jpg" alt><br><img src="/img/2015/startup-teacher-34.jpg" alt><br><img src="/img/2015/startup-teacher-35.jpg" alt><br><img src="/img/2015/startup-teacher-36.jpg" alt><br><img src="/img/2015/startup-teacher-37.jpg" alt><br><img src="/img/2015/startup-teacher-38.jpg" alt><br><img src="/img/2015/startup-teacher-39.jpg" alt><br><img src="/img/2015/startup-teacher-40.jpg" alt><br><img src="/img/2015/startup-teacher-41.jpg" alt><br><img src="/img/2015/startup-teacher-42.jpg" alt><br><img src="/img/2015/startup-teacher-43.jpg" alt><br><img src="/img/2015/startup-teacher-44.jpg" alt><br><img src="/img/2015/startup-teacher-45.jpg" alt><br><img src="/img/2015/startup-teacher-46.jpg" alt><br><img src="/img/2015/startup-teacher-47.jpg" alt><br><img src="/img/2015/startup-teacher-48.jpg" alt><br><img src="/img/2015/startup-teacher-49.jpg" alt><br><img src="/img/2015/startup-teacher-50.jpg" alt><br><img src="/img/2015/startup-teacher-51.jpg" alt><br><img src="/img/2015/startup-teacher-52.jpg" alt><br><img src="/img/2015/startup-teacher-53.jpg" alt><br><img src="/img/2015/startup-teacher-54.jpg" alt><br><img src="/img/2015/startup-teacher-55.jpg" alt><br><img src="/img/2015/startup-teacher-56.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> presentation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 创业失败 </tag>
            
            <tag> startup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那年历史课教会我们的</title>
      <link href="/thought/2015-05-12-history-story.html"/>
      <url>/thought/2015-05-12-history-story.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>“弱国无外交”<br>“没有永恒的敌人，没有永恒的朋友，只有永恒的利益”</p></blockquote><p>早上醒来，忽然脑海里浮现出10多年前，初中历史课上，大眼睛的历史老师讲国与国之间的关系的时候，满脸愤慨的说着这些话。       </p><p>那个时候我似懂非懂，具体讲的貌似是冷战前后，美国中国俄国外交经常变动，最终老师讲到这么多变动，总会以这样的话收尾。       </p><p>那个时候，以为国家，都是没有人情味道的独立个体，觉得挺恐怖。       </p><p>可是现在看起来，人呢？不也应该这个样子？       </p><p>对于商业的任何事情，似乎都是一个道理，当你把个人情感放到商业的时候，你会发现自己是愚蠢的，最终每天耗费所有经历在虚无缥缈的事情上，万事蹉跎。       </p><p>昨天见了之前创业的合伙人a，最终因为各种问题，三个合伙人不欢而散，昨天和其中一个面对面的坐在星巴克，忽然觉得原来我们是可以这么平静的聊下去的，之前我一直过不了心中的砍，我害怕更多的交流，但是却忽略了，和他的交流才是最重要的。       </p><p>聊了好久，他忽然说，你知道那天我们三个和投资人在一起的时候，如果我真的是你的商业敌人，你犯下最可怕的错误是什么么？当你和敌人在一起的时候，最可怕的就是你喋喋不休在那里说我哪些东西没有做到，我犯了什么错误，纯粹成为个人攻击后，投资人是听不下去的，所以让我去倒了一杯水给他。       </p><p>他说，那个时候，我最担心的就是你拿出来未来规划的整套方案，然后说你有团队有项目，但是你没有。所以最终投资人撤资止损了。       </p><p>是的，商业中踢掉一个人最好的方式，并不是攻击对方，收集对方的把柄，这是下下策，而真正的上策是，自己变的足够强大，对方追不上你的步伐，自然淘汰。       </p><p>投资人也是利益方，最终他不会掺杂个人情感的，选择利益。       </p><p>个人情感其实是最不着边际的东西，所谓精神食粮，不过就是一些yy的东西，不能填满肚子，也不能变成钞票，只能一个人想，几个人闲谈八卦，对于推进事业毫无任何作用。更可怕的是在商业谈判的时候带有负面情绪的个人情感，那么谈判必输无疑。       </p><p>后来末了，他说其实我们还是可以合作的，有一些东西，交给我做也放心，我笑笑说，好。       </p><p>在利益面前，人性是最不值得考验的，也不能去考验。这个在我和另外一个合伙人b之前有着明显的展示。曾经三个人，我们站在一起，一起走过很多路，最终，却因为很小的利益，牵出之前长长的彼此的怨恨。那个时候，整个感情就像多米诺骨牌，之前很细心搭建的东西，坍塌了一个，接下来，一个接一个，顺势倒下。       </p><p>我们最终也没有按照之前的约定，继续创业。       </p><p>后来有一天，b忽然说，其实我以为我当初和你站在一起，是觉得a太强，我想保护你，但是后来我发现不是，是因为我觉得和你做事才能成功。       </p><p>“弱国无外交”忽然眼前浮现历史老师的大眼睛，说的似乎不仅仅是国家， 也指人。       </p><p>b没有说下文，我猜想下文是，但是后来发现，其实我们一起，依然很难，所以还是分开吧。       </p><p>当人不够强的时候，也是没有合作伙伴的。因为大家最终还是彼此利用，如果你身上毫无利用的地方，那么合作对于强者，只是施舍和浪费时间而已。       </p><p>整个世界就是一个交换的世界，拿你有的，换你没有的，如果你什么都没有，谁去跟你交换呢？       </p><p>“没有永恒的朋友，也没有永恒的敌人，只有永恒的利益”忽然在此浮现历史老师那双因为近视突起的大眼睛。</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 创业失败 </tag>
            
            <tag> 蛮蛮互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香奈儿传奇的人生</title>
      <link href="/reading/2015-05-02-chanel.html"/>
      <url>/reading/2015-05-02-chanel.html</url>
      
        <content type="html"><![CDATA[<p>首先，例行管理，书籍：《香奈儿和她的浪漫传奇》浙江人民出版社<br>ok，进入正体：       </p><p>第一个感觉，是coco小姐真的很果断，从未有过纠结和犹豫，大胆的往前走，确实是这个样子，其实，路只要走下去总是有的。每天都闲下来，才是最令人恐慌的事情。       </p><p>看到下面的这个片段，我的第一个想法就是离开深圳，回到北京以后，立刻分手。既然没有以后，这样耗下去是完全没有意义的事情。既然不可能，就选择离开－－－－失败固然痛苦，保持现状却更悲哀。       </p><p>“尽管可可~香奈儿此时的顾客只有艾蒂安 巴尔桑的几个朋友而已，她的工作室也没有任何商业店铺的标志，但周围的人还是不难看出，可可 香奈儿在努力地通过这个方式来争取独立。卑微的出身使她不得不小心翼翼地维护着自己的自尊，她希望通过自身的努力来缩小与那些富家小姐们的茶菌。但是在外人看来，可可 香奈儿太天真了，身为纺织世家的后代，艾蒂安 巴尔桑怎么会娶一个贫苦的孤儿呢？每个女人都憧憬能有一个爱自己的人给予自己一个爱的堡垒，一个爱的承诺。可可 香奈儿也不例外”</p><p>“从小孤苦无依的生活使可可 香奈儿极想有个归宿和寄托，她以为自己找到了所谓的‘爱情’，然而艾蒂安 巴尔桑 却从来不给她任何承诺。6年的感情最终敌不过艾蒂安 巴尔桑母亲的一句话：‘你不能喝这样的女人结婚’。”       </p><p>“这种妄想与奢侈的爱情并不是可可 香奈儿希望的归宿。在这样一段给不了她任何承诺的爱情里，可可香奈儿找不到自己，她害怕再次被遗弃。”       </p><p>“女人渴望永恒，但在这个世界上，最永恒的东西恐怕只有一样，那就是变动。从某种程度上来讲，变动是命运送给我们的一匹桀骜不驯的狮子骢，很多女人向往那种驰骋的快乐，但又害怕驾驭不住，所以，几番思量之后，人们最终还是选择不懂。但可可 香奈儿不会。失败固然痛苦，保持现状却更悲哀。当艾蒂安 巴尔桑问她：‘可可，我爱你！告诉我，你想要什么？我都会给你。’可可 香奈儿坚定地回答：‘我要离开你。总有一天我会忘记你，就像你会忘记我一样。’ ”       </p><p>第二个感觉，原来，她也会孤独。就像我一个人在深圳的好多个夜晚，我想的是hb能在我的床边，不在和hb住在一起以后，最深的感受，一个人睡在一张床上，真的很孤单。在70多岁的香奈儿自述中，我明显感到了那种孤单。那种孤单是与生具来的，是不可能改变的，是一定会有的。我想起王潇曾经说过一句话：‘小的时候，你以为自己那么独一无二，后来长大以后你发现，其实你不过是芸芸众生中最普通的那一个。’是这个样子的，孤独，也是所有人都有的。顾影自怜没有意义，失眠就更没有意义，睡下去，然后第二天，工作就会忘记一切。       </p><p>“骄傲的人只知道一种至高无上的利益，那就是自由。但是想要自由，就必须很富有。我从未渴望过什么，除了自由。”       </p><p>“但是，选择做一个人而不是一件受人摆布的东西是件很幸福的事”       </p><p>“用尽力气去爱一个人，生生叫人嫉妒”       </p><p>“可可 香奈儿深知，只有经济上独立，女人才能在事业、爱情等方面与男人平等。”       </p><p>“从流传至今的照片中我们可以看出：可可 香奈儿的唇角永远是上扬的。那是一种乐观的表情，是对生活从未丧失的信心。”       </p><p>“可可 香奈儿有句名言： 没有风险的人生还有什么价值？”       </p><p>香奈儿的传奇有几个必备因素－－过人的天资、旺盛的经历、高傲的偏执、迷人的魅力、以及一架男人搭救的云梯。</p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《向前一步》谢丽尔 桑德伯格</title>
      <link href="/reading/2015-04-27-sheryl-sandber.html"/>
      <url>/reading/2015-04-27-sheryl-sandber.html</url>
      
        <content type="html"><![CDATA[<p>每当已婚女人问我怎样和丈夫一起带孩子时，我都会回答：“你就放开手，让他去给孩子换尿布，只要他亲自动手，怎么换都行。如果没等你吩咐他就给孩子换尿布，那么就算他把尿布戴在孩子头上你也应该面带微笑。让他自己尝试去做，久而久之他就会了解正确的方法。单如果被迫按照你的方式来，那么很快所有的事情都得你自己动手”       </p><p>到了想安顿下来的时候，你应该找一个愿意和你平等相处的男人。       </p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>新的生活，新的开始</title>
      <link href="/thought/2015-04-17-new-life.html"/>
      <url>/thought/2015-04-17-new-life.html</url>
      
        <content type="html"><![CDATA[<p>今天签了之前投资股份转让的协议。       </p><p>从投资人决定撤资止损到真的，我们把股份转让出来这一刻，感觉还是完全不一样的。       </p><p>上午和老师聊了餐饮行业的一些东西，也忽然明白自己已经不年轻了，不能再犯错误了。       </p><p>也许真的应该开始一段新的生活，重新开始。       </p><p>一个月的时间，每天浑浑噩噩的生活，给自己一个借口，说自己失败了，需要调整，可实际上的调整真的不需要这么久的时间。       </p><p>当在放弃蛮蛮互动的时候，我才忽然释然，我明白，新的征程已经开始。。       </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业失败 </tag>
            
            <tag> 蛮蛮互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>失控</title>
      <link href="/thought/2015-03-17-lose-control.html"/>
      <url>/thought/2015-03-17-lose-control.html</url>
      
        <content type="html"><![CDATA[<p>总是想写点东西，却不知道从哪里开始。<br>一直没有机会从头到位梳理10月份到现在创业半年发生的种种变化，每次都希望在飞机上记录，却总是因为困，或者其他原因错过。<br>对我而言，时间太珍贵了，我不忍心浪费一分一秒，哪怕放在思考上。<br>于是对我而言，执行力是最重要的东西。有的时候忽略了太多思考。一直走下去。<br>然后最近变故颇多，我忽然开始思考，却发现自己陷入了一个纠结的死局－－－每天愁眉苦脸，似乎世界末日就要来到了。       </p><p>于是我发现，我误解了思考和担忧，甚至觉得把每天的担忧说成自己在思考。       </p><p>担忧是每天把未来想的很可怕的样子，抱怨生活，然后想着未来会发生的种种悲剧情况。<br>思考，是真的把手头所有杂乱无章的东西进行整理，理出头绪，然后指导执行。       </p><p>听起来，差别很大，但是经常思考的时候，转换了方向，变成担忧，原因很简单－－－－担忧这个行为做起来要比思考容易太多，只要不开心就可以了，只要想着以后有多难多难就可以了。还可以让别人看到你惆怅的样子，对你产生同情。换句话说，顾影自怜。       </p><p>我记得有人说过，如果你是一个小姑娘，这样的情况，或许很文艺，或者可以理解。<br>但我是一家公司的CEO。       </p><p>小姑娘可以没有责任，但我不可以。       </p><p>但是思考不一样了，思考不是感性的行为，需要一点一点的琢磨，需要把每一个地方都解开，这是很头痛的。       </p><p>思考和担忧的区别，就好像高中的时候，我们做一道几何解析的题，思考需要一步一步的想着方法，而担忧只要想着，这个题好难啊，做不下去啊，好难啊就可以了。<br>经常听到担忧的人说，我想的比你远，而你想的少，而且，我想的对，确实我想的都发生了。我想对这些人说：你所谓的想的比我远，你是担忧，你想到未来产品做不下去了，你想到未来，合伙人各种勾心斗角，然后你不思考解决的方法，任由担忧发展，发挥你所有的想象力设想担忧会变成什么样。那么这些解决是一定会发生的。       </p><p>再去说另外一个问题：       </p><h3 id="关于真相："><a href="#关于真相：" class="headerlink" title="关于真相："></a>关于真相：</h3><p>武媚娘传奇里面有一句话说的特别对－－－‘太平比真相更重要’<br>我一直是一个较真的人，每天我都在追求真相。当你走出校园，你会听到各种各样的声音，对于一件事，一个人，不同嘴里说出来的东西真是千差万别－－－－你需要有去噪，明辨是非的能力。              </p><p>有的时候，真的分辨不清了，交给直觉，倾听心里最深的声音，或许真的是对的。因为我坚信，如果有一件事，你莫名其妙的坚持，或许真的可能是对的。或许你思考的再深一步，你就会找到所有坚持的理由，然后去做衡量，把所有纠结的点，一个一个比较，就会找到你最想要的东西。       </p><p>又说远了，我想说的是追求真相的问题。<br>作为一个创业者，很多真相并没有那么重要。当你试图去向一个人证明，自己时是被冤枉的时候，是非常可悲的。我相信，每一个人都有一双慧眼，能洞察所有的东西，只是时间而已。那么就引出了我的另一个问题：       </p><p>一辈子那么长，何必计较一时的得失       </p><p>经常听到一个合伙人说，我们来不及了。年轻这一波，马上就过去了。难道创业靠的是营销？陈年是一个营销高手，但是还是没有依靠营销做出任何东西。<br>其实创业更多的是靠踏踏实实走的，经过这半年，我知道的是还是需要心智更加成熟，更加有社会经验，才可以进行下去。处理事情的情绪化，是非常浪费时间的。而在创业的这段时间，最宝贵的就是时间，和所有的竞争对手进行赛跑，争取市场占有率。处理事情的理智化本身就很有难度，这不是天生的，需要时间的锻炼。<br>创业这半年，因为情绪失控，我浪费了太多太多的时间。这是我最后悔的一件事，说到底，还是自己困在自己的小世界里，希望掰开一些本来不那么重要的事情。说白了，很多时候，年轻气盛就会引出另外一个问题：       </p><p>其实，委屈谁都有，没有必要不甘心。       </p><p>吵架，争论一些很小的问题，是对事情上的不甘心，最终会给自己设置一个很大的牢笼，自己把自己推到一个角落，然后情绪失控，然后委屈，然后崩溃。这只是小事上面的层面。升级到人生的层面呢？<br>一辈子受到的挫折太多太多了，没有必要每一次被打倒以后，立刻就站起来奔跑。       </p><p>有的时候，蹲下来是为了跳的更高。       </p><p>没有十年的卧薪尝胆，又何来的勾践灭吴呢？当我们失败的时候，不去回头看看自己，不去积累，不去学习，立刻站起来，还去迎接那些比我们强大很多的竞争对手，真的是正确的么？<br>马云，刘强东，这些励志的故事，是因为我们没看过他们受挫的样子，而且，他们一直这么拼搏了10多年，我们，还能坚持那么多么？<br>所以，不如收掉年轻时候那么多的不甘心。踏踏实实的积累，踏踏实实的做事。不着急，晚一两年又怎么样呢？       </p><h3 id="关于时间"><a href="#关于时间" class="headerlink" title="关于时间"></a>关于时间</h3><p>其实我是可以平衡工作和时间的，这些东西在我手里，我是可以控制的。向左走向右走，没有人逼我。工作效率的高低，我也能完全控制的。<br>有的时候还是怀念3个月考研创造的神话，我把每段时间控制的很好，固定周二周五去跳形体舞蹈，周三去练瑜伽，周四周日去跳爵士，每个时间段做该做的事。<br>有的时候也会迷茫，也会孤独，也会稍微做错事，但是小小矫情一下之后，写了日记之后，也就过去了。<br>但是现在，我是失控的，我的时间不受控制，每天做的事一拖再拖，每天又有很多东西接踵而来。另外，来到深圳以后，这竟然是我第一次写东西。<br>梳理生活这么需要经常去做的事，我竟然这么久都没做了。<br>对于时间，我失控了，所以效率，我自然失控了，所以情绪，最终还是失控了。这又会引出我的另一个问题，我再也没有办法踏踏实实坐在椅子上，专心的做一件事       </p><h3 id="关于专心做事"><a href="#关于专心做事" class="headerlink" title="关于专心做事"></a>关于专心做事</h3><p>我一直认为，自己是自控能力很强的人，我追求每一个大块时间专注的做事，并且会在这一段时间，效率颇高。来到深圳以后，有人告诉我，我可以一心多用，这才是最终的成长。可是半年后，我依然坚持认为，我可以同时接好多个项目，但是，每一个大项目，我都需要一个大段时间去梳理，去总结。我承认自己可以做很多东西，但是我仍然需要专心做事。其实，有的时候想想，一个人做很多事是可以的，但是每一个人都有一个极限。如果整整半年，都在多个事情纠缠的状态，自然自己会陷入困境，最终打败自己的不是项目，而是来自自己渴望争夺一切束缚的情绪－－－－这种情绪是时间积累没有释放造成的。<br>说到底，人不是工作机器，需要休息，没有拼尽全力，100%的做事。<br>人，终归是人。       </p><h3 id="关于独立-："><a href="#关于独立-：" class="headerlink" title="关于独立 ："></a>关于独立 ：</h3><p>从来深圳第一天开始，我就希望躲在一个人后面。帮我指明自己未来的路，但是后来我发现，并没有这样一个人的存在。创业这段时间，我独立了很多，但这并不够。如果我足够独立，或许很多噪声我可以避免，不至于最终作茧自缚。       </p><p>但是我不能对自己太苛求，太苛求，也会失控，说到底，我还只是一个没有出校门的90后，给自己的要求过高，太苛刻，也是不妥的。       </p><p>自己有多大的能力，就做多大的事，自己能力cover不住所有的问题，那么，就去积累，积累到一定程度，再去做那么大的事情。       </p><p>资本也好，合作伙伴也好，最终还是只有在一个level上，才能一起迸发出巨大的力量。       </p><p>换句话说，要么努力到极限最终让别人帮到，要么，蹲下来积累到和别人一个level的层面，才不会失控。       </p><p>创业最可怕的，就是失控，自我的失控。       </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> startup </tag>
            
            <tag> 蛮蛮互动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>婚庆O2O平台-艾娘子</title>
      <link href="/project/2015-02-10-ainiangzi.html"/>
      <url>/project/2015-02-10-ainiangzi.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>那个时候我还在读研究生，见了投资人聊完后拿到了500万投资，稀里糊涂的休学只身从北京到深圳，开始我真正意义上的第一次创业。两个合伙人从腾讯辞职，一切看起来那么顺利，最后一切也都失败在了这么顺利上面。我的第一次创业–搭建婚庆O2O平台，艾娘子。</p></blockquote><p>创业失败的文章在博客里写了，这里单纯展示这个产品，聊以慰藉。</p><p><img src="/img/2015/ainiangzi-2.jpg" alt><br><img src="/img/2015/ainiangzi-3.jpg" alt><br><img src="/img/2015/ainiangzi-4.jpg" alt><br><img src="/img/2015/ainiangzi-5.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 创业失败 </tag>
            
            <tag> 艾娘子 </tag>
            
            <tag> 深圳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜鹊说，定制属于你的婚礼轻应用</title>
      <link href="/project/2014-05-11-xiqueshuo.html"/>
      <url>/project/2014-05-11-xiqueshuo.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是我做的第一款完整的产品，主要功能是帮助婚礼的新人定制微信婚礼请柬，帮助他们发给好友并在朋友圈传播，同时我们还做了微信上墙的应用，帮助新人通过照片上墙的方式帮助新人活跃婚礼现场氛围。</p></blockquote><blockquote><p>这个产品是青龙哥想出来的，虽然最后没有和我们走到最后，但是他让我通过这个产品，作为wefuture团队的队长，拿到了腾讯T派比赛的银奖和pre-angel特别奖，并因此走上了真正创业的不归路。</p></blockquote><blockquote><p>因为我们团队当时租在北邮对面学院派805的房间里办公，所以我有个文件夹，专门叫805</p></blockquote><blockquote><p>虽然产品已经下线了，但是还是需要稍微介绍下这个产品的</p></blockquote><p><img src="/img/2014/xiqueshuo-0.jpg" alt><br><img src="/img/2014/xiqueshuo-1.jpg" alt><br><img src="/img/2014/xiqueshuo-2.jpg" alt><br><img src="/img/2014/xiqueshuo-3.jpg" alt><br><img src="/img/2014/xiqueshuo-4.jpg" alt><br><img src="/img/2014/xiqueshuo-5.jpg" alt><br><img src="/img/2014/xiqueshuo-6.jpg" alt><br><img src="/img/2014/xiqueshuo-7.jpg" alt><br><img src="/img/2014/xiqueshuo-8.jpg" alt><br><img src="/img/2014/xiqueshuo-9.jpg" alt><br><img src="/img/2014/xiqueshuo-10.jpg" alt><br><img src="/img/2014/xiqueshuo-11.jpg" alt><br><img src="/img/2014/xiqueshuo-12.jpg" alt><br><img src="/img/2014/xiqueshuo-13.jpg" alt><br><img src="/img/2014/xiqueshuo-14.jpg" alt><br><img src="/img/2014/xiqueshuo-15.jpg" alt><br><img src="/img/2014/xiqueshuo-16.jpg" alt><br><img src="/img/2014/xiqueshuo-17.jpg" alt><br><img src="/img/2014/xiqueshuo-18.jpg" alt><br><img src="/img/2014/xiqueshuo-19.jpg" alt><br><img src="/img/2014/xiqueshuo-20.jpg" alt>       </p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 喜鹊说 </tag>
            
            <tag> 婚礼 </tag>
            
            <tag> 创业 </tag>
            
            <tag> wefuture团队 </tag>
            
            <tag> 学院派805 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>啰啰嗦嗦的记录</title>
      <link href="/thought/2014-05-26-douban.html"/>
      <url>/thought/2014-05-26-douban.html</url>
      
        <content type="html"><![CDATA[<p>《状元媒》里有句话：“大羹必有淡味，大巧必有小拙，白璧必有微瑕。物件和人一样，人尚无完人，更何况是物。”       </p><p>解释和争论，只在两种情况下有意义，一种是这个人很重要，一种是这件事很重要。都不重要就算了，把时间放在自己喜欢的事上面吧！       </p><p>大多数时候，别人的成功经验在你身上没什么用，你只需要把你擅长的发挥到极致。       </p><p>《幸好还有，爱和梦想》的题记里有句话“人生教会我们的从来不是那些我们已经得到的，而是我们怎么得到的。”自我认知的过程，也是成长和收获的过程。       </p><p>雄鹰在鸡窝里长大，就会失去飞翔的本领，野狼在羊群里成长，也会爱上羊而丧失狼性。人生的奥妙就在于与人相处。生活的美好则在于送人玫瑰和聪明的人在一起,你才会更加睿智。和优秀的人在一起，你才会出类拔萃。所以你是谁并不重要,重要的是，你和谁在一起.——圈子决定命运。       </p><p>对一千件事说不，才能对一件事情真正说是，把事做大－－－乔布斯       </p><p>曾看过一篇关于电影《黑天鹅》的评论，其主要观点就是一个人如果缺乏性魅力，无论做什么都不会取得真正的成功。想一想，还真是这样。也许你可以通过不断的自我压抑和自我控制获得某种程度的成功，但想要取得真正的成功，即完成自我实现，你还要尝试着砸碎身上的某些人性的枷锁，释放出你内心里的某些黑暗的力量，这样你的性魅力也会一同被释放出来。心里的某些黑暗的力量，这样你的性魅力也会一同被释放出来。       </p><p>叔本华“你只能做你想做的，但不能要你想要的”       </p><p>第一条是尽量少说话。某种意义上，沉默就是性感，任何一个女人都能通过少说话这样一种方式让自己变得更性感一些，一个话多的女人很容易输光底牌和底裤。<br>第二条是学习拒绝的艺术。有人说拒绝是世界上最致命的勾魂偷心术。事实正是如此，学会拒绝的艺术，不仅能提升你的性魅力，还能帮助你节省很多时间和精力，而你也可以因此拥有更充足的时间和精力去做爱做的事，交配交的人。<br>第三条是要么多读书，要么多阅人。当然，最好是既多读书又多阅人。总之，内心世界越丰富，外在气质越神秘，而一个头脑空空的女人想要玩神秘无异于抓屎涂脸。       </p><p>如果你想说服某人，不要诉诸于道德，而要诉诸于利益－－富兰克林       </p><p>没有伤害和麻烦，就没有成长和突破       </p><p>我始终认为，一个年轻人为了不断向前走，他对于生活的任何选择都无关对错       </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信会议解决方案</title>
      <link href="/project/2014-08-01-meeting-solution.html"/>
      <url>/project/2014-08-01-meeting-solution.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这款产品是因为我们做外包做腻了，每一次都来问我们修改相同的内容，一个微信签到，一个微信抽奖，用了好多次，却每次都要专门改个图片，所以我们后来衍生做了微信会议解决方案，为蓝色光标、微软、飞利浦等大厂提供服务。</p></blockquote><blockquote><p>因为我们团队当时租在北邮对面学院派805的房间里办公，所以我有个文件夹，专门叫805</p></blockquote><blockquote><p>产品下线了，却还是要留些产品照片，用来谢幕</p></blockquote><p><img src="/img/2014/meeting-1.jpg" alt><br><img src="/img/2014/meeting-2.jpg" alt><br><img src="/img/2014/meeting-3.jpg" alt><br><img src="/img/2014/meeting-4.jpg" alt><br><img src="/img/2014/meeting-5.jpg" alt><br><img src="/img/2014/meeting-6.jpg" alt><br><img src="/img/2014/meeting-7.jpg" alt><br><img src="/img/2014/meeting-8.jpg" alt><br><img src="/img/2014/meeting-9.jpg" alt>    </p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> wefuture团队 </tag>
            
            <tag> 学院派805 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于微信公众帐号等微应用和手机app等原生应用的一些小感慨</title>
      <link href="/thought/2013-11-22-wechat-and-app.html"/>
      <url>/thought/2013-11-22-wechat-and-app.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>研究了一阵微信，前两天去了移动互联网开发者大会，关于现阶段移动互联网的两大热门－－－－微信公众帐号和原生APP发表点小评论。      </p></blockquote><p>首先，微信的出世，app并不会因此而消失。      </p><p>对于大部分的商户来说，微信平台能更有效的发挥自我品牌和营销的自媒体力量，然而做专属于企业的app，很多时候没有能够带来更多的实质化效果，但是问题绝对不是出在app产品内容上，所有诸如此类的app功能过于单一，而且，这些企业的管理层没有真正吃透移动互联网和O2O，因此，才会出现现在的微信5.0出世后，商户app的作用被无形的削弱了。                 </p><p>先来对比一下，微信公共帐号对比与app的好处在哪里：           </p><ol><li>用户门槛低，无需用户下载：        </li><li>不需要跨ios和安卓平台，对开发者要求低，而且减去了app升级的糟糕体验。    </li><li>搭车微信做免费社交－－－即微信的朋友圈功能。     </li><li>微信开放了很多接口，开发者上手简单，很快就可以出产品。</li></ol><p>但是，微信还是取代不了app的，如下对比：                     </p><p>商业价值的微信端：<br>商业价值的app           </p><p>从上面的对比能看出，类似于app的公众账号与原生app的相比，原生app更加个性化的功能和交互方式，相同的页面大小承载更多内容，充分利用硬件的优化，而微信里的公众账号，类似web app，最大优势是基于浏览器而可移植性强，对于不同平台，只需开发一次，但交互方式有限，从上面的公众账号的页面就能看出，交互只限于下面的三个按钮，导致体验与原生app相距甚远。微信公众账号在功能上是阉割后的web app。      </p><p>公众账号功能应以传递信息为主，互动娱乐为辅。微信开放接口，定制公众账号界面，限制公众账号的消息发送频率，在我看来都是信息流为了让动更顺畅更高效，而不是怀揣一颗app store的心。            </p><p>以上是用户端的微信和app的比较，再来对比一下，微信公众平台和app store：            </p><ol><li>公众平台不如应用商店，没有应用商店的评分机制、应用列表、用户评价等;渠道的推广也过度依靠网页端而不是移动端。现在公众主页更像乱军般自我作战，太依靠用户自己去判断选择，没有根本上解决用户面对公众账号时的盲区。应用商店至少会引导你安装哪些APP，但公众平台不会。</li><li>公众账号只在二级页面。微信给用户的第一感觉是近乎完美的移动IM，其它功能均是次要的。这会稀释用户的需求。用户在一级页面可以保持巨大的活跃量，但是进入二级页面的积极性必然骤降，此时还要多出一个回复的输入步骤，对维持粘性是个很大的考验。也就是说，人家微信的3亿用户，并不是你公共帐号的用户。</li><li>用户未必愿意牺牲良好的体验和操作性换取入口处的便利。当我能用一款简洁风格的APP满足自己需求，或许也是对微信绿色聊天框说再见的时候了。APP具有的用户体验、框架优势都是公众账号不具备的。APP更能进行一些微创新。      </li></ol><p>综上，商家依然有app的需求，正如连锁企业仍然需要pc端的网站一样。忽然想到值钱我看的新闻，91助手和机锋网同样是应用商店，91助手（以19亿卖掉）之所以会比机锋网（以3亿卖掉）值钱很多的原因就是，91助手没有放弃PC端的固定化。比喻不是很恰当，我只是想说，真正放到固定端的才是王道。       </p><p>而且，现在的商家并不是很了解什么平台才是又价值的，或者说是更有渗透点的。收益不能只看短期的，长期的收益同样重要，尤其是对于一个要做行业连锁巨头的企业来说。      </p><p>以餐饮行业为例子，点评类网站和团购优惠券，在近几年的火爆成都超出想象，因为这些确实在短期内，给营业额带来了巨大的提升，但是从长期的角度看，餐饮商家的频繁参与和各大网站的同质化竞争，实际上将O2O市场被搅浑了。商家变得‘聪明’，他们网上的团购和电子优惠卷最终恶意降低了自己的餐饮利润，并让自己陷入到了无穷无尽的恶意竞争中。长期的效果就是：不团购，根本无法留住客户，也就更谈不上老客户和回头客营销。<br>例如，大众点评网的会员卡一度也吵得火爆，但是聪明的商家研究后，清醒的发现此类满天飞的电子会员卡就是各大平台共享商户数据，挖走自己忠实客户的‘恍子’，他们甚至懊恼所有电子会员卡的‘优惠折扣’成了让用户进行‘我查查，比比价’的工具，根本上无法展示自己的‘会员体制’的服务品质。一旦参与过后把消费者宠坏了后，而打折免费为商家免费营销服务的平台无能为力，只能在‘被绑架’中不能自拔。<br>谁知道，如此注重用户体验的微信，会不会也会这样‘绑架’商家呢？<br>当然，现在来看，微信5.0的问世以及开放的更多端口确实对于商家来说，是一件好事，但是，公共帐号，还是无法取代传统app的。但是对于一些简单查询类的app，比如招行信用卡，不过就是查询个账单，消费记录什么的，根本无须app在本地运行，再比如天气预报类的，发一条指令给服务器，返回给我天气状况就行了，搞个花哨的app又得下载，又得更新，实在没有必要。所以，具体选择哪一个，还是要看企业的定位在哪里。<br>在我看来，商家应该充分利用微信开放的接口，推广自己的企业和app，通过简易的微信账号，让消费者了解到自己的更多资讯信息，并在微信帐号中添加自己的app下载方式，诱导用户通过微信帐号下载app，进而做好企业的用户粘合度，才是做好O2O的好方法。          </p><p>综上，大型商户还是建议以微信为入口，不放弃app，正如我非常喜欢的一个公共帐号的创始人（英语流利说的创始人）所说，用户再哪里，我们就去哪里。     </p><p>app如果做到如下，很难被微信帐号打败：</p><ol><li>美观的UI效果：<br>UI上下了功夫，就会有很好的用户体验，这也是能胜过微信单一的绿色对话框的地方。尤其是加入动画切话效果，这些只有再原生app上才能实现。这个比喻就如同mac和windows的对比，用过苹果的人，很难放弃苹果的东西，转换到windows上，哪怕为之多花一些钱。同样，用户用过你的app，不想放弃了，自然就留住了。 </li><li>操作相应速度：<br>app与后台通讯只是传输必要的数据，而微信是图文所有东西都有。所以app的响应速度，会比微信等手机网站快一倍以上，如果app的优化技术做好，很难不让用户买单。具体通过数据压缩和本地缓存可以做出，这些是公共帐号无论如何做不到的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认真生活，什么时候都不算晚。</title>
      <link href="/thought/2012-09-26-live-life-seriously.html"/>
      <url>/thought/2012-09-26-live-life-seriously.html</url>
      
        <content type="html"><![CDATA[<p>好久没来图书馆自习了，因为偏执，因为无知。     </p><p>还有100天就要考研了，日子竟真开始倒数着过了。     </p><p>忽然慌了，是不是有些日子都太不认真了，忽然崩溃的给妈妈打了一个三个小时的电话，然后释怀了。     </p><p>妈妈说，我要认真的生活，什么时候都不算晚，一步一步走，一切都来得及。从现在开始，整装待发，自己状态最好的时候，遇见了，就对了，过去的，就那样吧。     </p><p>“生活就是这样，如果不能够学会遗忘，那些事情，总是让自己的路走得有点拖拖拉拉”     </p><p>“人的脑子可以记存的空间有限，如果把过去的事情都放在那里的话，我觉得我的脑子肯定不够用，而且过去的事情，有的时候会成为现在的障碍。如果到现在，我还老是沉浸在那段战争采访的精力中，我相信，我肯定会觉得，现在做的每一件事都枯燥无味。”特别喜欢闾丘露薇这段关于遗忘的叙述。     </p><p>一样的道理，如果我还是沉浸在某些时刻，那每天图书馆的日子一定枯燥平淡，于是纠结，于是放不下。     </p><p>关键还是在于自己的决心。     </p><blockquote><p>“不会遗忘，会让自己的生活变得越来越沉重，这样的沉重，我宁愿留到自己老的时候，或者，在记忆的最深最深出，这些东西还是在哪里。想象自己，满头白发，面对满地落叶，有一个同样那样的老的人，相互诉说各自从前被自己遗忘的事情。”—闾丘露薇     </p></blockquote><p>年老了，或许还有空。     </p><p>而现在，我要的是积累。没有时间去诉说，去回忆。决心放下就放下了。     </p><p>如果老了，那些东西也忘了，或许，只是因为真的没那么重要。     </p><p>我要知道，什么才是最重要的事。     </p><p>考研，工作，赚钱，生活。还没到回忆，感叹，怅然的时候。     </p><p>生命走到什么点，就应该做什么样的事，由不得超前更由不得落后。     </p><p>二十几岁，就过二十几岁的日子，没必要装成十八，不在就是不在了，每个人都有不同的欢乐与悲伤。更没必要装成三十，虚伪而世故的过日子。     </p><p>这样，满地落叶下的诉说才完整，才不会缺少空白。     </p><p>忽然想起前两天一个朋友问我关于他们学校要出一本书的事，策划，美工，文案，外联。问我会选择什么，然后感慨工科院校的人不喜欢策划，只会埋头干活。其实觉得每个人都在写一本自己的书，策划，美工，文案，外联都是自己一个人，当然策划自己整个的生命章节才是最重要的事。     </p><p>人生不能没有计划，而计划的精髓就在于什么时候该做什么事。     </p><p>至于美工文案外联，不过是一天一天的装饰而已。自己选择了什么样的路，就那么赤裸裸的摆在那里，再好的文案美工，描述一个没有实质内容的东西，显得太过肤浅了。     </p><p>所以，大脑中的那些想法，太重要了。     </p><p>当然，遗忘也要有度，犯过的错误，不能忘记，起码能作为后来的参考，毕竟这是已经证明错误的选择。     </p><p>清清楚楚的记住错误，比无止境的缅怀过去，要成熟理智的多，让错误沉淀于心，人才不会飘飘然，才会有一种“struggle to live”的状态，虽然是我发明的词，确实最喜欢的感觉，就像双脚下面有深深的吸力，无论如何都倒不下也飘不起。     </p><p>前一阵特别喜欢林夕，后来随着他的文章也信佛了，或者说信命更靠谱一点吧，毕竟我没法吃斋。相信命运，相信一切自有安排，变得豁达，就少了偏执，学会感恩，就学会珍惜了。     </p><p>目标定的高了，累的想跑，目标太低，又有了堕落的借口，凡事刚刚好，或许才是最适合的生活方式了。     </p><p>PS：就是想写下来，看到闾丘露薇把自己七年前和七年后对同样事物的看法写下来，觉得很棒，或许我还是没法学会把整个人都放在社会大环境下去思考事情，但是起码，我要把在自己脑子里想的记下来，起码，每一天的成长，应该不是为了遗忘吧。     </p><p>忽然想起晴子上午跟我说的《活着》中的一段话：“活着的力量不在于咆哮呐喊，而是在于承受，承受生命给你的无聊与精彩，伟大与平庸。”是啊，看到的经历的多了自然就慢慢沉淀，然后就变成什么都可以接受的了，就变成我最向往的一种人了。     </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>忽然好想你们</title>
      <link href="/thought/2012-03-24-miss-you.html"/>
      <url>/thought/2012-03-24-miss-you.html</url>
      
        <content type="html"><![CDATA[<h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>为什么忘了那么久的事，会在不经意之间惊醒岁月的封尘，然后没有任何原因，就回到了从前。      </p><p>打开自己的人人主页，翻看着自己的状态日志分享，忽然变得很感性。      </p><p>离开精英汇以后，上人人的日子变得越来越少了，曾经很多时候上人人，单纯为了发个状态通知北邮活动时间地点，顺便看看其他精英汇的活动，再去看看猫哥晒他的优秀实习生或者去膜拜下他煽情或励志或教训的日志，关注的人一定与精英汇有关。那段日子的人人，喜怒哀乐都是它。有人说我进了一个传销组织，忽然觉得自己苦大仇深，轻易就把自己卖了出去。蓦然回首，原来当年我一直在买进。      </p><p>除了那段日子的人人，其他的分享和状态，零零散散的罗列着，早就忘记了分享时候的心情。也许日子过的平静了，就会忽然怀念起那些疯狂的日子了。现在皮肤气色比以前好多了，因为不再凌晨三点睡觉甚至熬一整个通宵。每天六点多一点不定闹表也会主动醒来，然后食堂，图书馆，教三，十点回寝室，洗澡，睡觉。每周去几次健身房，或者南门东门换换口味，就是我现在生活的全部。发现自己原来可以有这么多空闲时间，就去图书馆拿了几本书，随便翻翻总比在寝室上网受益得多。      </p><p>室长说人不能忽然改变的太多，太可怕了，会死人的。      </p><p>从进入大学就开始叛逆，总觉得我应该像天上的风一样自由自在不受拘束，觉得每天桉树睡觉按时起床是腐朽老年人的生活，逃一学期的课却再用一周的时间去考试还能拿80+才会有成就感，甚至觉得一个人说自己有课而没时间是天下最可笑的借口。保持青春的秘诀就是有一颗不安分的心，宁愿跑起来被绊倒无数次，也不要规规矩矩的走一辈子。      </p><p>精英汇的那个群名叫“一路上有你”，一路走，一路丢失，一路得到，也是一路欢笑，一路悲伤。大学的所有眼泪似乎都在大二流尽了，从委屈到心酸再到感动。但是再深刻的伤痕似乎都随着时间淡忘愈合，然而曾有过的真挚快乐却一直存在记忆中，愈久愈诱人。于是忽然，好想你们。            </p><p>就按照“我的分享”里面的故事一点点回忆吧。      </p><h3 id="如果爱，请深爱"><a href="#如果爱，请深爱" class="headerlink" title="如果爱，请深爱"></a>如果爱，请深爱</h3><p>分享里面离现在日子最近的是关于精英汇最近的是一个视频，那个时候的心情应该是舍不得离开吧。  </p><p><img src="/img/2012/miss-you-1.jpg" alt></p><p>再远一点的分享是一对现在已经分手情侣的甜蜜照片。现在看起来却感觉有些事过境迁。      </p><h3 id="后来"><a href="#后来" class="headerlink" title="后来"></a>后来</h3><p>再往前看分享就是一篇日志了。《后来—-写在2011年6月12日》，看到自己说“感情是精英汇坚持下去最大的动力”就想不打开标题先感受一下当时的心情。讽刺的是，我竟不记得作者，更别提心情了。      </p><p><img src="/img/2012/miss-you-2.jpg" alt></p><p>后来我从头到尾看了一遍，仍然想不起当时的心情，耳边却是电话里猫哥娘娘腔一样的说“后来呢？你看后来呢？你知道后来么？”那是我和猫哥唯一一次那么久的电话，也是唯一一次骂我。那个时候我最大的愿望就是能被他骂，因为所有被他骂过的人最后都过的很好。（那个时候我咋就那么贱呢~）后来我记得我去找了全儿，后来二哥也来了，聊着聊着，全儿哭了，而且特别突然，我瞬间就手足无措了。婉宁正好路过，问全儿为什么哭，二哥说“你不懂”。婉宁说“又是精英汇”。      </p><h3 id="营销大赛"><a href="#营销大赛" class="headerlink" title="营销大赛"></a>营销大赛</h3><p>再翻一翻，忽然所有的分享都是精英汇了。关于营销大赛，从全国总决赛，到京津冀大区的决赛，到省级决赛，到北邮的校级海选。那个时候我一定要拼命顶yoy和mynovo。      </p><p><img src="/img/2012/miss-you-3.jpg" alt></p><p>一直觉得“我相信”不好听，可是自从17W的MV后，我经常听那首歌偶尔也会唱一唱。那个学期末，我和佳琪在她“嫂子”家有时也会经常模仿全儿在里面蹦跶的样子。yoy的全国总决赛，印象中最多的就是无数个通宵的夜晚呵青龙哥的支持以及永远看不到太阳的联想会议室。      </p><p>后来是好多北邮的作品，不过是在北邮校园海选的时候就被淘汰了的作品。  </p><p><img src="/img/2012/miss-you-4.jpg" alt></p><p>忽然就想起雪儿祥云的作品，还有研一邓涛他们自掏腰包做了队服做了海报，还有pc end，霸气天然呆等等。只是我已经不记得参与者与现场呈现的样子了，但我记得很多是大一的新生。视频特效不是很好，就在ppt中拼命改进，暗中应该都没少努力。但那个时候的我眼里只有yoy和mynovo，也许只是因为yoy和mynovo的人在精英汇最难的时候陪我走了我好远。于是忽然有种愧疚感，尽管最终晋级的团队是作为蓝标、电通、联想的高管选出来的，尽管mynovo如果不是第三名就算我要到外卡他们同样也不会晋级。      </p><h3 id="生活的意义在于有一群彼此照应的朋友"><a href="#生活的意义在于有一群彼此照应的朋友" class="headerlink" title="生活的意义在于有一群彼此照应的朋友"></a>生活的意义在于有一群彼此照应的朋友</h3><p>“精英汇之巢”终于成立的时候，漾哥发表的一篇日志，我庆幸，精英汇终于有家了。      </p><p><img src="/img/2012/miss-you-5.jpg" alt></p><p>忽然就想起第一次的相聚，是在sb和斑马家里，十多个不会做饭的人做出来的“血流成河”还有那硬邦邦的馒头但所有能吃的东西却都被抢光了，“杀人”的时候我军义正言辞“现在到了生死攸关的时刻”，那个时候似乎是第一次认识郭先生，前几天我改了悲伤的签名她特别关切的问我怎么了，说需要的时候一定找她，真的感动了我好久。那个时候是第一次认识人大的两个骗子，还有青龙哥接近凌晨给斑马送的蛋糕，还有sb摇着头说“杀我，没问题啊”。。。。。      </p><p>现在sb和斑马不住在一起了，精英汇之巢里有的人走了有的人住进来了，一起聚的地方还多了一个郭先生菜菜他们的家。不到一年，精英汇的“家”变化了很多。      </p><p>接着向前翻阅的是刘佳的日志。我不知道这是不是因为没借到教室红着眼圈找我的那次。  </p><p><img src="/img/2012/miss-you-6.jpg" alt>    </p><p>听说雪娇走了以后，刘佳要暂时代管精英汇到换届，又是一届营销大赛了。拍拍，不哭，要坚强。      </p><p>接着翻阅着分享，发现那段日子的每个分享和精英汇有关。于是也就放弃了每个分享回忆的想法，除非太怀念，太感动。      </p><p>这张照片就是其中之一。虽然人物不全，却真的特别喜欢：“自己人抬头，不认识的靠墙” </p><p><img src="/img/2012/miss-you-7.jpg" alt>     </p><p>特别想再去一次青龙峡了，再玩一次双杀，再给雷妈过一次生日，再打一次麻将，再吃一次烤肉，再让SB买几张错误的火车票。原来当时苦苦等待sb买火车票的那三个小时如此有趣。嘲笑小平和斑马要去蹦极却爬了两次都没有蹦下来，大半夜闯进华哥的卧室捉奸拍照，冠蓝一屁股坐坏了农家乐的桌子还要赔钱。。。。。      </p><p>忽然就特别特别后悔上学期期末考试那会sb找我去滑雪我因为期末复习没去，也特别后悔冠蓝那次叫我去回龙观因为我要去科会看王立军而错过了。      </p><p>有一阵被华哥鸟巢求婚的照片刷了屏，看到现场的场景，突然发现我不知道从什么时候开始，离他们越来越远。原来友情和爱情一样，没有经营，最后也会形同陌路。      </p><h3 id="Y470全国首站与营销大赛全国首站"><a href="#Y470全国首站与营销大赛全国首站" class="headerlink" title="Y470全国首站与营销大赛全国首站"></a>Y470全国首站与营销大赛全国首站</h3><p>日子再往前推进，就是Y470全国首战的视频了，我喜欢这个活动。  </p><p><img src="/img/2012/miss-you-8.jpg" alt>    </p><p>活动现场很成功，联想也给了好多支持。那天来了好多刚认识不久的人还有好多记者，那个时候刚刚认识斑马sb他们没多久，斑马和这个项目没有太大关系跑来现场捧场让我很感动，华哥也让京津冀的每个精英汇都出了一部分人。      </p><p>那个时候蔡奔为了当法老往脸上画了好多很难洗掉的水彩还伤了皮肤，雪娇为了艳后穿很妖艳，李柯蜷缩在塔里面憋了很久，但是活动结束后根儿和君儿却来找我，说芮芮现在精英汇真的已经很棒了，估计没有我们你也能弄下去了，而且最近想忙点他们自己的事，现在就退了吧。不过以后缺人也可以找他们。忽然发现，无论怎么努力，有些人的离去，我真的无能为力。不过后来他们分别加入了mynovo和yoy，让我还会恍惚的觉得，他们仍然是精英汇最给力的成员，一直没有离开。      </p><p>那天晚上我没去人大参加营销大赛的首战而是离开北京去了杭州，听说人大那天很成功，冠蓝比联想大boss还有范，那天不仅是营销大赛的首战也是一次人难得齐全的聚会，那天好像也是青龙哥的生日，那天又玩了很久的杀人，那天很欢乐。。。。只是我都错过了，因为太向往南方的温柔水乡而且我确实在那边过了一周非常安静舒服惬意的生活。可谁又知道哪个选择是对的呢？      </p><p>忽然想起很久之前米兰昆德拉的《生命不能承受之轻》：人永远都无法知道自己该要什么，因为人只能活一次，既不能拿它跟前世相比，也不能在来生加以修正。没有任何方法可以检验哪种抉择是好的，因为不存在任何比较。一切都是马上经历，仅此一次，不能准备。      </p><h3 id="北邮的优秀团队——营销大赛总冠军"><a href="#北邮的优秀团队——营销大赛总冠军" class="headerlink" title="北邮的优秀团队——营销大赛总冠军"></a>北邮的优秀团队——营销大赛总冠军</h3><p><img src="/img/2012/miss-you-9.jpg" alt></p><p>点了进去，把青龙哥关于营销大赛的每一个文章又看了一遍。忽然想起第一次见到青龙哥的时候是佳宁办csr的时候，csr结束之后在南门碰到青龙哥他们就聊了一会，那个时候还在想要是我能认识这么牛的人多好。没想到营销大赛结束后，不不和他熟悉了，还有静秋姐—–那个牛逼团队的队长。      </p><p>忽然想起了宿舍柜子上我一直不舍得收起来的奖杯，营销大赛宣讲会现场静秋姐和青龙哥给我的，或者说是给精英汇的，他们希望精英汇越来越好，超越他们。本来应该是“镇汇之宝”到现在我都没给雪娇，就是很舍不得。      </p><h3 id="轮岗"><a href="#轮岗" class="headerlink" title="轮岗"></a>轮岗</h3><p>看到这个视频，忽然发现好久没听到你们的消息了。      </p><p><img src="/img/2012/miss-you-10.jpg" alt></p><p>小黑，荷花，小平，菜菜，鹏飞哥。      </p><p>现在很庆幸自己有机会去参加轮岗，因为那些天有你们。我和小平两个疯丫头砍起价来像个泼妇，让荷花菜菜先回去却忍不住在大钟寺的商场门口拍照装作童真。那个时候正逢圣诞，大钟寺的商场遍地的霓虹灯，夜景梦幻浪漫。忽然想起上地五街冬天的早晨5点，天气干冷干冷，几个人一起从联想走到汉庭一路上吐出的白色哈气。      </p><p>还有我和小平从金五星回来的公交车，从天津精英汇谈到北京精英汇再到京津冀，从华哥说到猫哥，再说到以后说到未来，听她说要考清华美院的研究生我就觉得我靠这个姑娘骨子的这股冲劲咋这么牛逼，我还记得谈心的背景又黑又冷。那个时候刚认识她不久，是第一次和她谈了那么多交心的话，但现在看来好像也是最后一次了。忽然想起营销大赛，依然是我和小平一个房间，却仅仅谈过一次天津精英汇我就跑去和yoy做方案了。同样又想到了米兰昆德拉：谁又知道怎么做是正确的呢？现在的小平，重新留头发了，也还是那么叽叽喳喳，而且好像还是那么愿意熬夜。拼命三郎，我知道你说过你不能对不起猫哥，但是有的时候，是不是可以不要那么拼命。      </p><p>我还想起了小黑的钢管舞，你可是发了状态说你要跳钢管舞的呀。当年你还真以为我这个学信安的菜鸟能把你的号盗了啊。耳边又忽然想起了荷花当时满是广东腔调的“佳丙姐”。我甚至想起了鹏飞哥当时拿出我们买的道具把自己打扮的很诡异才发现这个低调技术男其实很闷骚。还有菜菜拿着手铐把我锁起来像个凶恶的老鸨。      </p><p>当时猫哥给了几张电影票让我们结束之后一起去看电影，可是最后谁也没看到那场电影。      </p><p>轮岗的人中我是最先离开的，圣诞狂欢结束后洗了个澡就回学校了，仅仅为了北邮好不容易争取到的高经费举办的“假面舞会”。没对任何人告别，后来知道猫哥小平小黑荷花菜菜他们彼此告别，让我一直觉得自己那次轮岗似乎都没有画上一个完整的句号。甚至，作为东道主都不告诉浙江广东天津的你们怎么走离机场大巴最近怎么走离火车站更近以及什么时间走最靠谱。但是仍然是，没有机会比较，谁知道我这么做对不对呢。      </p><p>强行让自己停止回忆吧。      </p><h3 id="北邮的精英汇"><a href="#北邮的精英汇" class="headerlink" title="北邮的精英汇"></a>北邮的精英汇</h3><p>假面舞会场景的分享 </p><p><img src="/img/2012/miss-you-11.jpg" alt>     </p><p>结束后应该是我长这么大第一次喝的烂醉，大醉易失德，所以从那以后发誓不会有第二次，但却一点不为那次的烂醉后悔，因为要感激的人太多，只能一杯一杯的敬，甚至有的人敬了一杯还想再来一杯。我有些晕醉的时候还哭闹着说雪娇和君儿不来今天这顿饭就不能散，谁也不准走。好在后来雪娇和君儿考完试过来了，雪娇直接拿了一瓶啤酒，两个杯子，一杯一杯的干。至于其他丢人的事，最好不要提醒我了，我也假装自己什么都不知道。      </p><p>日子接着逆流，无非是各种北邮活动的照片，若是美好，叫她精彩，若是糟糕，便叫经历吧。      </p><p>“北京会长第一次聚会”，这是分享自闵悦的相册。      </p><p>那一年，我们才是最亲的战友。虽然拍照的时候，我们也不知道这一年会如何演绎，然而一旦序幕拉开，不管如何怯场，都得演到戏的结尾。<br><img src="/img/2012/miss-you-12.jpg" alt></p><p>“在你想要放弃的那一刻，想想为什么当初坚持走到了这里。”            </p><p>忽然想起当年二哥还劝我干脆忽然撒手不管算了，何况我也不适合，好在当年我虽然差不多都听你的，就这个我没听反正自己牢牢抓住没放手。<br>左下角的北邮精英汇群 qq闪了，打开看看，依然不说话 。群还是当年我建的那个，后来陆陆续续的加了一些人进来，热闹了很多。但是精英汇办活动我总会故意路过。忽然想起那次给电脑青灰的活动现场，一个大二的孩子问我同学你要清理电脑么，然后仕锦忽然就过来说学姐好。      </p><p>又忽然想起大三上学期精英汇在宏福招新，雪娇没空我就替她去讲了讲精英汇，教二的教室，下面坐着的精英汇成员，只有佳宁，景吉，我还有两三个组织招新的国院大二孩子。教室的电脑和投影仪出了问题，ppt放不出来，佳宁忽然就技术帝上去，恍惚像大二办活动的时候二哥在那里调设备。又想起大二那年，我为了在宏福招新混入新生群，为了讲精英汇把猫哥青龙哥漾哥力哥等等的日志相片翻了一遍去写稿子，然后紧张兮兮的拿着熬夜准备的稿子站在台上讲话，那个时候，下面坐着的精英汇成员，依然是佳宁，景吉，我，不过还有蔡奔。      </p><p>后来精英汇渐渐壮大了，我也分别和哲哥，二哥，根儿，全儿，雪娇，刘佳回去开会或者面试。虽然来来回回路上最少三个小时，但是那阵谁也不跟我抱怨，都特别顶我。把大一的孩子招足了，回到本部一股新生的力量来的也会快一些。虽然大二做了好多活动，但我觉得招来大一的年轻娃们是当年做的最好的一件事了。      </p><p>一直想说，谢谢佳宁和景吉在宏福办活动的出现，因为只要看到你们，那会的我就会特别安心。      </p><p>大二那年我经常性的忽然对着电脑开怀大笑或者嚎啕大哭，或许动了真感情的人都会喜怒无常，因为付出太多，难免患得患失。当然，这更可能是自己为不成熟找的借口。      </p><p>又或许，青春就是这样，不听劝，瞎折腾，享过福，吃过苦，玩过票，碰过壁，使劲折腾，折腾累了，才发现自己转了一个大圈儿，却又回到了原地。可是，却从不后悔，也并不埋怨，因为不转这个圈儿，我可能永远都不知道“原地”在哪里。      </p><p>不过前方还有很长的路要走，累了，不能成为一个借口。      </p><p>ps：当初和嘉庚约好要赶快写个“遗书”，嘉庚早在6月还是7月就写好了，我却懒懒的一直拖到现在。本来只是想在考研之前怀念一下自己的大学生活，可是写着写着，就忽然好想你们，干脆等下次心血来潮，再去回忆大学里的日子吧。      </p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 联想 </tag>
            
            <tag> 精英汇 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
